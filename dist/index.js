var bv = Object.defineProperty;
var vv = (e, t, n) => t in e ? bv(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var $r = (e, t, n) => vv(e, typeof t != "symbol" ? t + "" : t, n);
import { jsx as k, jsxs as Ce, Fragment as Xm } from "react/jsx-runtime";
import * as C from "react";
import F, { forwardRef as vu, useContext as xv, isValidElement as Ks, cloneElement as Xs, Children as wv, useState as _r, useEffect as _i, createElement as ro, memo as _e, useMemo as or, Fragment as Sv, useCallback as $n, useId as Qm, useRef as Tv } from "react";
import * as Jm from "react-dom";
import ko from "react-dom";
const Di = {
  black: "#000",
  white: "#fff"
}, ho = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, go = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, yo = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, bo = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, vo = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
}, oi = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, Ev = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
};
function yr(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
const jn = "$$material";
function ca() {
  return ca = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n) ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
    }
    return e;
  }, ca.apply(null, arguments);
}
function Cv(e) {
  if (e.sheet)
    return e.sheet;
  for (var t = 0; t < document.styleSheets.length; t++)
    if (document.styleSheets[t].ownerNode === e)
      return document.styleSheets[t];
}
function Ov(e) {
  var t = document.createElement("style");
  return t.setAttribute("data-emotion", e.key), e.nonce !== void 0 && t.setAttribute("nonce", e.nonce), t.appendChild(document.createTextNode("")), t.setAttribute("data-s", ""), t;
}
var Rv = /* @__PURE__ */ function() {
  function e(n) {
    var r = this;
    this._insertTag = function(o) {
      var s;
      r.tags.length === 0 ? r.insertionPoint ? s = r.insertionPoint.nextSibling : r.prepend ? s = r.container.firstChild : s = r.before : s = r.tags[r.tags.length - 1].nextSibling, r.container.insertBefore(o, s), r.tags.push(o);
    }, this.isSpeedy = n.speedy === void 0 ? !0 : n.speedy, this.tags = [], this.ctr = 0, this.nonce = n.nonce, this.key = n.key, this.container = n.container, this.prepend = n.prepend, this.insertionPoint = n.insertionPoint, this.before = null;
  }
  var t = e.prototype;
  return t.hydrate = function(r) {
    r.forEach(this._insertTag);
  }, t.insert = function(r) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(Ov(this));
    var o = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var s = Cv(o);
      try {
        s.insertRule(r, s.cssRules.length);
      } catch {
      }
    } else
      o.appendChild(document.createTextNode(r));
    this.ctr++;
  }, t.flush = function() {
    this.tags.forEach(function(r) {
      var o;
      return (o = r.parentNode) == null ? void 0 : o.removeChild(r);
    }), this.tags = [], this.ctr = 0;
  }, e;
}(), Ht = "-ms-", ua = "-moz-", He = "-webkit-", Zm = "comm", xu = "rule", wu = "decl", $v = "@import", eh = "@keyframes", kv = "@layer", Iv = Math.abs, za = String.fromCharCode, Pv = Object.assign;
function Nv(e, t) {
  return Lt(e, 0) ^ 45 ? (((t << 2 ^ Lt(e, 0)) << 2 ^ Lt(e, 1)) << 2 ^ Lt(e, 2)) << 2 ^ Lt(e, 3) : 0;
}
function th(e) {
  return e.trim();
}
function Av(e, t) {
  return (e = t.exec(e)) ? e[0] : e;
}
function qe(e, t, n) {
  return e.replace(t, n);
}
function Ic(e, t) {
  return e.indexOf(t);
}
function Lt(e, t) {
  return e.charCodeAt(t) | 0;
}
function Bi(e, t, n) {
  return e.slice(t, n);
}
function Yn(e) {
  return e.length;
}
function Su(e) {
  return e.length;
}
function Rs(e, t) {
  return t.push(e), e;
}
function Mv(e, t) {
  return e.map(t).join("");
}
var Wa = 1, Bo = 1, nh = 0, ln = 0, It = 0, Ko = "";
function Ua(e, t, n, r, o, s, a) {
  return { value: e, root: t, parent: n, type: r, props: o, children: s, line: Wa, column: Bo, length: a, return: "" };
}
function ii(e, t) {
  return Pv(Ua("", null, null, "", null, null, 0), e, { length: -e.length }, t);
}
function _v() {
  return It;
}
function Dv() {
  return It = ln > 0 ? Lt(Ko, --ln) : 0, Bo--, It === 10 && (Bo = 1, Wa--), It;
}
function mn() {
  return It = ln < nh ? Lt(Ko, ln++) : 0, Bo++, It === 10 && (Bo = 1, Wa++), It;
}
function er() {
  return Lt(Ko, ln);
}
function Qs() {
  return ln;
}
function ts(e, t) {
  return Bi(Ko, e, t);
}
function Fi(e) {
  switch (e) {
    // \0 \t \n \r \s whitespace token
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    // ! + , / > @ ~ isolate token
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    // ; { } breakpoint token
    case 59:
    case 123:
    case 125:
      return 4;
    // : accompanied token
    case 58:
      return 3;
    // " ' ( [ opening delimit token
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    // ) ] closing delimit token
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function rh(e) {
  return Wa = Bo = 1, nh = Yn(Ko = e), ln = 0, [];
}
function oh(e) {
  return Ko = "", e;
}
function Js(e) {
  return th(ts(ln - 1, Pc(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function Bv(e) {
  for (; (It = er()) && It < 33; )
    mn();
  return Fi(e) > 2 || Fi(It) > 3 ? "" : " ";
}
function Fv(e, t) {
  for (; --t && mn() && !(It < 48 || It > 102 || It > 57 && It < 65 || It > 70 && It < 97); )
    ;
  return ts(e, Qs() + (t < 6 && er() == 32 && mn() == 32));
}
function Pc(e) {
  for (; mn(); )
    switch (It) {
      // ] ) " '
      case e:
        return ln;
      // " '
      case 34:
      case 39:
        e !== 34 && e !== 39 && Pc(It);
        break;
      // (
      case 40:
        e === 41 && Pc(e);
        break;
      // \
      case 92:
        mn();
        break;
    }
  return ln;
}
function jv(e, t) {
  for (; mn() && e + It !== 57; )
    if (e + It === 84 && er() === 47)
      break;
  return "/*" + ts(t, ln - 1) + "*" + za(e === 47 ? e : mn());
}
function Lv(e) {
  for (; !Fi(er()); )
    mn();
  return ts(e, ln);
}
function Vv(e) {
  return oh(Zs("", null, null, null, [""], e = rh(e), 0, [0], e));
}
function Zs(e, t, n, r, o, s, a, l, c) {
  for (var u = 0, f = 0, d = a, h = 0, g = 0, y = 0, m = 1, b = 1, v = 1, E = 0, S = "", w = o, x = s, T = r, R = S; b; )
    switch (y = E, E = mn()) {
      // (
      case 40:
        if (y != 108 && Lt(R, d - 1) == 58) {
          Ic(R += qe(Js(E), "&", "&\f"), "&\f") != -1 && (v = -1);
          break;
        }
      // " ' [
      case 34:
      case 39:
      case 91:
        R += Js(E);
        break;
      // \t \n \r \s
      case 9:
      case 10:
      case 13:
      case 32:
        R += Bv(y);
        break;
      // \
      case 92:
        R += Fv(Qs() - 1, 7);
        continue;
      // /
      case 47:
        switch (er()) {
          case 42:
          case 47:
            Rs(zv(jv(mn(), Qs()), t, n), c);
            break;
          default:
            R += "/";
        }
        break;
      // {
      case 123 * m:
        l[u++] = Yn(R) * v;
      // } ; \0
      case 125 * m:
      case 59:
      case 0:
        switch (E) {
          // \0 }
          case 0:
          case 125:
            b = 0;
          // ;
          case 59 + f:
            v == -1 && (R = qe(R, /\f/g, "")), g > 0 && Yn(R) - d && Rs(g > 32 ? Yd(R + ";", r, n, d - 1) : Yd(qe(R, " ", "") + ";", r, n, d - 2), c);
            break;
          // @ ;
          case 59:
            R += ";";
          // { rule/at-rule
          default:
            if (Rs(T = Gd(R, t, n, u, f, o, l, S, w = [], x = [], d), s), E === 123)
              if (f === 0)
                Zs(R, t, T, T, w, s, d, l, x);
              else
                switch (h === 99 && Lt(R, 3) === 110 ? 100 : h) {
                  // d l m s
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    Zs(e, T, T, r && Rs(Gd(e, T, T, 0, 0, o, l, S, o, w = [], d), x), o, x, d, l, r ? w : x);
                    break;
                  default:
                    Zs(R, T, T, T, [""], x, 0, l, x);
                }
        }
        u = f = g = 0, m = v = 1, S = R = "", d = a;
        break;
      // :
      case 58:
        d = 1 + Yn(R), g = y;
      default:
        if (m < 1) {
          if (E == 123)
            --m;
          else if (E == 125 && m++ == 0 && Dv() == 125)
            continue;
        }
        switch (R += za(E), E * m) {
          // &
          case 38:
            v = f > 0 ? 1 : (R += "\f", -1);
            break;
          // ,
          case 44:
            l[u++] = (Yn(R) - 1) * v, v = 1;
            break;
          // @
          case 64:
            er() === 45 && (R += Js(mn())), h = er(), f = d = Yn(S = R += Lv(Qs())), E++;
            break;
          // -
          case 45:
            y === 45 && Yn(R) == 2 && (m = 0);
        }
    }
  return s;
}
function Gd(e, t, n, r, o, s, a, l, c, u, f) {
  for (var d = o - 1, h = o === 0 ? s : [""], g = Su(h), y = 0, m = 0, b = 0; y < r; ++y)
    for (var v = 0, E = Bi(e, d + 1, d = Iv(m = a[y])), S = e; v < g; ++v)
      (S = th(m > 0 ? h[v] + " " + E : qe(E, /&\f/g, h[v]))) && (c[b++] = S);
  return Ua(e, t, n, o === 0 ? xu : l, c, u, f);
}
function zv(e, t, n) {
  return Ua(e, t, n, Zm, za(_v()), Bi(e, 2, -2), 0);
}
function Yd(e, t, n, r) {
  return Ua(e, t, n, wu, Bi(e, 0, r), Bi(e, r + 1, -1), r);
}
function No(e, t) {
  for (var n = "", r = Su(e), o = 0; o < r; o++)
    n += t(e[o], o, e, t) || "";
  return n;
}
function Wv(e, t, n, r) {
  switch (e.type) {
    case kv:
      if (e.children.length) break;
    case $v:
    case wu:
      return e.return = e.return || e.value;
    case Zm:
      return "";
    case eh:
      return e.return = e.value + "{" + No(e.children, r) + "}";
    case xu:
      e.value = e.props.join(",");
  }
  return Yn(n = No(e.children, r)) ? e.return = e.value + "{" + n + "}" : "";
}
function Uv(e) {
  var t = Su(e);
  return function(n, r, o, s) {
    for (var a = "", l = 0; l < t; l++)
      a += e[l](n, r, o, s) || "";
    return a;
  };
}
function Hv(e) {
  return function(t) {
    t.root || (t = t.return) && e(t);
  };
}
function ih(e) {
  var t = /* @__PURE__ */ Object.create(null);
  return function(n) {
    return t[n] === void 0 && (t[n] = e(n)), t[n];
  };
}
var qv = function(t, n, r) {
  for (var o = 0, s = 0; o = s, s = er(), o === 38 && s === 12 && (n[r] = 1), !Fi(s); )
    mn();
  return ts(t, ln);
}, Gv = function(t, n) {
  var r = -1, o = 44;
  do
    switch (Fi(o)) {
      case 0:
        o === 38 && er() === 12 && (n[r] = 1), t[r] += qv(ln - 1, n, r);
        break;
      case 2:
        t[r] += Js(o);
        break;
      case 4:
        if (o === 44) {
          t[++r] = er() === 58 ? "&\f" : "", n[r] = t[r].length;
          break;
        }
      // fallthrough
      default:
        t[r] += za(o);
    }
  while (o = mn());
  return t;
}, Yv = function(t, n) {
  return oh(Gv(rh(t), n));
}, Kd = /* @__PURE__ */ new WeakMap(), Kv = function(t) {
  if (!(t.type !== "rule" || !t.parent || // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  t.length < 1)) {
    for (var n = t.value, r = t.parent, o = t.column === r.column && t.line === r.line; r.type !== "rule"; )
      if (r = r.parent, !r) return;
    if (!(t.props.length === 1 && n.charCodeAt(0) !== 58 && !Kd.get(r)) && !o) {
      Kd.set(t, !0);
      for (var s = [], a = Yv(n, s), l = r.props, c = 0, u = 0; c < a.length; c++)
        for (var f = 0; f < l.length; f++, u++)
          t.props[u] = s[c] ? a[c].replace(/&\f/g, l[f]) : l[f] + " " + a[c];
    }
  }
}, Xv = function(t) {
  if (t.type === "decl") {
    var n = t.value;
    // charcode for l
    n.charCodeAt(0) === 108 && // charcode for b
    n.charCodeAt(2) === 98 && (t.return = "", t.value = "");
  }
};
function sh(e, t) {
  switch (Nv(e, t)) {
    // color-adjust
    case 5103:
      return He + "print-" + e + e;
    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return He + e + e;
    // appearance, user-select, transform, hyphens, text-size-adjust
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return He + e + ua + e + Ht + e + e;
    // flex, flex-direction
    case 6828:
    case 4268:
      return He + e + Ht + e + e;
    // order
    case 6165:
      return He + e + Ht + "flex-" + e + e;
    // align-items
    case 5187:
      return He + e + qe(e, /(\w+).+(:[^]+)/, He + "box-$1$2" + Ht + "flex-$1$2") + e;
    // align-self
    case 5443:
      return He + e + Ht + "flex-item-" + qe(e, /flex-|-self/, "") + e;
    // align-content
    case 4675:
      return He + e + Ht + "flex-line-pack" + qe(e, /align-content|flex-|-self/, "") + e;
    // flex-shrink
    case 5548:
      return He + e + Ht + qe(e, "shrink", "negative") + e;
    // flex-basis
    case 5292:
      return He + e + Ht + qe(e, "basis", "preferred-size") + e;
    // flex-grow
    case 6060:
      return He + "box-" + qe(e, "-grow", "") + He + e + Ht + qe(e, "grow", "positive") + e;
    // transition
    case 4554:
      return He + qe(e, /([^-])(transform)/g, "$1" + He + "$2") + e;
    // cursor
    case 6187:
      return qe(qe(qe(e, /(zoom-|grab)/, He + "$1"), /(image-set)/, He + "$1"), e, "") + e;
    // background, background-image
    case 5495:
    case 3959:
      return qe(e, /(image-set\([^]*)/, He + "$1$`$1");
    // justify-content
    case 4968:
      return qe(qe(e, /(.+:)(flex-)?(.*)/, He + "box-pack:$3" + Ht + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + He + e + e;
    // (margin|padding)-inline-(start|end)
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return qe(e, /(.+)-inline(.+)/, He + "$1$2") + e;
    // (min|max)?(width|height|inline-size|block-size)
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (Yn(e) - 1 - t > 6) switch (Lt(e, t + 1)) {
        // (m)ax-content, (m)in-content
        case 109:
          if (Lt(e, t + 4) !== 45) break;
        // (f)ill-available, (f)it-content
        case 102:
          return qe(e, /(.+:)(.+)-([^]+)/, "$1" + He + "$2-$3$1" + ua + (Lt(e, t + 3) == 108 ? "$3" : "$2-$3")) + e;
        // (s)tretch
        case 115:
          return ~Ic(e, "stretch") ? sh(qe(e, "stretch", "fill-available"), t) + e : e;
      }
      break;
    // position: sticky
    case 4949:
      if (Lt(e, t + 1) !== 115) break;
    // display: (flex|inline-flex)
    case 6444:
      switch (Lt(e, Yn(e) - 3 - (~Ic(e, "!important") && 10))) {
        // stic(k)y
        case 107:
          return qe(e, ":", ":" + He) + e;
        // (inline-)?fl(e)x
        case 101:
          return qe(e, /(.+:)([^;!]+)(;|!.+)?/, "$1" + He + (Lt(e, 14) === 45 ? "inline-" : "") + "box$3$1" + He + "$2$3$1" + Ht + "$2box$3") + e;
      }
      break;
    // writing-mode
    case 5936:
      switch (Lt(e, t + 11)) {
        // vertical-l(r)
        case 114:
          return He + e + Ht + qe(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        // vertical-r(l)
        case 108:
          return He + e + Ht + qe(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        // horizontal(-)tb
        case 45:
          return He + e + Ht + qe(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
      }
      return He + e + Ht + e + e;
  }
  return e;
}
var Qv = function(t, n, r, o) {
  if (t.length > -1 && !t.return) switch (t.type) {
    case wu:
      t.return = sh(t.value, t.length);
      break;
    case eh:
      return No([ii(t, {
        value: qe(t.value, "@", "@" + He)
      })], o);
    case xu:
      if (t.length) return Mv(t.props, function(s) {
        switch (Av(s, /(::plac\w+|:read-\w+)/)) {
          // :read-(only|write)
          case ":read-only":
          case ":read-write":
            return No([ii(t, {
              props: [qe(s, /:(read-\w+)/, ":" + ua + "$1")]
            })], o);
          // :placeholder
          case "::placeholder":
            return No([ii(t, {
              props: [qe(s, /:(plac\w+)/, ":" + He + "input-$1")]
            }), ii(t, {
              props: [qe(s, /:(plac\w+)/, ":" + ua + "$1")]
            }), ii(t, {
              props: [qe(s, /:(plac\w+)/, Ht + "input-$1")]
            })], o);
        }
        return "";
      });
  }
}, Jv = [Qv], Zv = function(t) {
  var n = t.key;
  if (n === "css") {
    var r = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(r, function(m) {
      var b = m.getAttribute("data-emotion");
      b.indexOf(" ") !== -1 && (document.head.appendChild(m), m.setAttribute("data-s", ""));
    });
  }
  var o = t.stylisPlugins || Jv, s = {}, a, l = [];
  a = t.container || document.head, Array.prototype.forEach.call(
    // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll('style[data-emotion^="' + n + ' "]'),
    function(m) {
      for (var b = m.getAttribute("data-emotion").split(" "), v = 1; v < b.length; v++)
        s[b[v]] = !0;
      l.push(m);
    }
  );
  var c, u = [Kv, Xv];
  {
    var f, d = [Wv, Hv(function(m) {
      f.insert(m);
    })], h = Uv(u.concat(o, d)), g = function(b) {
      return No(Vv(b), h);
    };
    c = function(b, v, E, S) {
      f = E, g(b ? b + "{" + v.styles + "}" : v.styles), S && (y.inserted[v.name] = !0);
    };
  }
  var y = {
    key: n,
    sheet: new Rv({
      key: n,
      container: a,
      nonce: t.nonce,
      speedy: t.speedy,
      prepend: t.prepend,
      insertionPoint: t.insertionPoint
    }),
    nonce: t.nonce,
    inserted: s,
    registered: {},
    insert: c
  };
  return y.sheet.hydrate(l), y;
};
function e0(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var $s = { exports: {} }, Ye = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Xd;
function t0() {
  if (Xd) return Ye;
  Xd = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, f = e ? Symbol.for("react.forward_ref") : 60112, d = e ? Symbol.for("react.suspense") : 60113, h = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, y = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, v = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
  function S(x) {
    if (typeof x == "object" && x !== null) {
      var T = x.$$typeof;
      switch (T) {
        case t:
          switch (x = x.type, x) {
            case c:
            case u:
            case r:
            case s:
            case o:
            case d:
              return x;
            default:
              switch (x = x && x.$$typeof, x) {
                case l:
                case f:
                case y:
                case g:
                case a:
                  return x;
                default:
                  return T;
              }
          }
        case n:
          return T;
      }
    }
  }
  function w(x) {
    return S(x) === u;
  }
  return Ye.AsyncMode = c, Ye.ConcurrentMode = u, Ye.ContextConsumer = l, Ye.ContextProvider = a, Ye.Element = t, Ye.ForwardRef = f, Ye.Fragment = r, Ye.Lazy = y, Ye.Memo = g, Ye.Portal = n, Ye.Profiler = s, Ye.StrictMode = o, Ye.Suspense = d, Ye.isAsyncMode = function(x) {
    return w(x) || S(x) === c;
  }, Ye.isConcurrentMode = w, Ye.isContextConsumer = function(x) {
    return S(x) === l;
  }, Ye.isContextProvider = function(x) {
    return S(x) === a;
  }, Ye.isElement = function(x) {
    return typeof x == "object" && x !== null && x.$$typeof === t;
  }, Ye.isForwardRef = function(x) {
    return S(x) === f;
  }, Ye.isFragment = function(x) {
    return S(x) === r;
  }, Ye.isLazy = function(x) {
    return S(x) === y;
  }, Ye.isMemo = function(x) {
    return S(x) === g;
  }, Ye.isPortal = function(x) {
    return S(x) === n;
  }, Ye.isProfiler = function(x) {
    return S(x) === s;
  }, Ye.isStrictMode = function(x) {
    return S(x) === o;
  }, Ye.isSuspense = function(x) {
    return S(x) === d;
  }, Ye.isValidElementType = function(x) {
    return typeof x == "string" || typeof x == "function" || x === r || x === u || x === s || x === o || x === d || x === h || typeof x == "object" && x !== null && (x.$$typeof === y || x.$$typeof === g || x.$$typeof === a || x.$$typeof === l || x.$$typeof === f || x.$$typeof === b || x.$$typeof === v || x.$$typeof === E || x.$$typeof === m);
  }, Ye.typeOf = S, Ye;
}
var Ke = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Qd;
function n0() {
  return Qd || (Qd = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, f = e ? Symbol.for("react.forward_ref") : 60112, d = e ? Symbol.for("react.suspense") : 60113, h = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, y = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, v = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
    function S(B) {
      return typeof B == "string" || typeof B == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      B === r || B === u || B === s || B === o || B === d || B === h || typeof B == "object" && B !== null && (B.$$typeof === y || B.$$typeof === g || B.$$typeof === a || B.$$typeof === l || B.$$typeof === f || B.$$typeof === b || B.$$typeof === v || B.$$typeof === E || B.$$typeof === m);
    }
    function w(B) {
      if (typeof B == "object" && B !== null) {
        var pe = B.$$typeof;
        switch (pe) {
          case t:
            var ae = B.type;
            switch (ae) {
              case c:
              case u:
              case r:
              case s:
              case o:
              case d:
                return ae;
              default:
                var me = ae && ae.$$typeof;
                switch (me) {
                  case l:
                  case f:
                  case y:
                  case g:
                  case a:
                    return me;
                  default:
                    return pe;
                }
            }
          case n:
            return pe;
        }
      }
    }
    var x = c, T = u, R = l, I = a, N = t, p = f, O = r, $ = y, A = g, D = n, M = s, _ = o, L = d, U = !1;
    function z(B) {
      return U || (U = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), j(B) || w(B) === c;
    }
    function j(B) {
      return w(B) === u;
    }
    function V(B) {
      return w(B) === l;
    }
    function K(B) {
      return w(B) === a;
    }
    function Y(B) {
      return typeof B == "object" && B !== null && B.$$typeof === t;
    }
    function te(B) {
      return w(B) === f;
    }
    function X(B) {
      return w(B) === r;
    }
    function ee(B) {
      return w(B) === y;
    }
    function re(B) {
      return w(B) === g;
    }
    function q(B) {
      return w(B) === n;
    }
    function Q(B) {
      return w(B) === s;
    }
    function G(B) {
      return w(B) === o;
    }
    function ne(B) {
      return w(B) === d;
    }
    Ke.AsyncMode = x, Ke.ConcurrentMode = T, Ke.ContextConsumer = R, Ke.ContextProvider = I, Ke.Element = N, Ke.ForwardRef = p, Ke.Fragment = O, Ke.Lazy = $, Ke.Memo = A, Ke.Portal = D, Ke.Profiler = M, Ke.StrictMode = _, Ke.Suspense = L, Ke.isAsyncMode = z, Ke.isConcurrentMode = j, Ke.isContextConsumer = V, Ke.isContextProvider = K, Ke.isElement = Y, Ke.isForwardRef = te, Ke.isFragment = X, Ke.isLazy = ee, Ke.isMemo = re, Ke.isPortal = q, Ke.isProfiler = Q, Ke.isStrictMode = G, Ke.isSuspense = ne, Ke.isValidElementType = S, Ke.typeOf = w;
  }()), Ke;
}
var Jd;
function r0() {
  return Jd || (Jd = 1, process.env.NODE_ENV === "production" ? $s.exports = t0() : $s.exports = n0()), $s.exports;
}
var zl, Zd;
function o0() {
  if (Zd) return zl;
  Zd = 1;
  var e = r0(), t = {
    childContextTypes: !0,
    contextType: !0,
    contextTypes: !0,
    defaultProps: !0,
    displayName: !0,
    getDefaultProps: !0,
    getDerivedStateFromError: !0,
    getDerivedStateFromProps: !0,
    mixins: !0,
    propTypes: !0,
    type: !0
  }, n = {
    name: !0,
    length: !0,
    prototype: !0,
    caller: !0,
    callee: !0,
    arguments: !0,
    arity: !0
  }, r = {
    $$typeof: !0,
    render: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0
  }, o = {
    $$typeof: !0,
    compare: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
    type: !0
  }, s = {};
  s[e.ForwardRef] = r, s[e.Memo] = o;
  function a(y) {
    return e.isMemo(y) ? o : s[y.$$typeof] || t;
  }
  var l = Object.defineProperty, c = Object.getOwnPropertyNames, u = Object.getOwnPropertySymbols, f = Object.getOwnPropertyDescriptor, d = Object.getPrototypeOf, h = Object.prototype;
  function g(y, m, b) {
    if (typeof m != "string") {
      if (h) {
        var v = d(m);
        v && v !== h && g(y, v, b);
      }
      var E = c(m);
      u && (E = E.concat(u(m)));
      for (var S = a(y), w = a(m), x = 0; x < E.length; ++x) {
        var T = E[x];
        if (!n[T] && !(b && b[T]) && !(w && w[T]) && !(S && S[T])) {
          var R = f(m, T);
          try {
            l(y, T, R);
          } catch {
          }
        }
      }
    }
    return y;
  }
  return zl = g, zl;
}
o0();
var i0 = !0;
function ah(e, t, n) {
  var r = "";
  return n.split(" ").forEach(function(o) {
    e[o] !== void 0 ? t.push(e[o] + ";") : o && (r += o + " ");
  }), r;
}
var Tu = function(t, n, r) {
  var o = t.key + "-" + n.name;
  // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (r === !1 || // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  i0 === !1) && t.registered[o] === void 0 && (t.registered[o] = n.styles);
}, Eu = function(t, n, r) {
  Tu(t, n, r);
  var o = t.key + "-" + n.name;
  if (t.inserted[n.name] === void 0) {
    var s = n;
    do
      t.insert(n === s ? "." + o : "", s, t.sheet, !0), s = s.next;
    while (s !== void 0);
  }
};
function s0(e) {
  for (var t = 0, n, r = 0, o = e.length; o >= 4; ++r, o -= 4)
    n = e.charCodeAt(r) & 255 | (e.charCodeAt(++r) & 255) << 8 | (e.charCodeAt(++r) & 255) << 16 | (e.charCodeAt(++r) & 255) << 24, n = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16), n ^= /* k >>> r: */
    n >>> 24, t = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  switch (o) {
    case 3:
      t ^= (e.charCodeAt(r + 2) & 255) << 16;
    case 2:
      t ^= (e.charCodeAt(r + 1) & 255) << 8;
    case 1:
      t ^= e.charCodeAt(r) & 255, t = /* Math.imul(h, m): */
      (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  }
  return t ^= t >>> 13, t = /* Math.imul(h, m): */
  (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16), ((t ^ t >>> 15) >>> 0).toString(36);
}
var a0 = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  scale: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, l0 = /[A-Z]|^ms/g, c0 = /_EMO_([^_]+?)_([^]*?)_EMO_/g, lh = function(t) {
  return t.charCodeAt(1) === 45;
}, ef = function(t) {
  return t != null && typeof t != "boolean";
}, Wl = /* @__PURE__ */ ih(function(e) {
  return lh(e) ? e : e.replace(l0, "-$&").toLowerCase();
}), tf = function(t, n) {
  switch (t) {
    case "animation":
    case "animationName":
      if (typeof n == "string")
        return n.replace(c0, function(r, o, s) {
          return Kn = {
            name: o,
            styles: s,
            next: Kn
          }, o;
        });
  }
  return a0[t] !== 1 && !lh(t) && typeof n == "number" && n !== 0 ? n + "px" : n;
};
function ji(e, t, n) {
  if (n == null)
    return "";
  var r = n;
  if (r.__emotion_styles !== void 0)
    return r;
  switch (typeof n) {
    case "boolean":
      return "";
    case "object": {
      var o = n;
      if (o.anim === 1)
        return Kn = {
          name: o.name,
          styles: o.styles,
          next: Kn
        }, o.name;
      var s = n;
      if (s.styles !== void 0) {
        var a = s.next;
        if (a !== void 0)
          for (; a !== void 0; )
            Kn = {
              name: a.name,
              styles: a.styles,
              next: Kn
            }, a = a.next;
        var l = s.styles + ";";
        return l;
      }
      return u0(e, t, n);
    }
    case "function": {
      if (e !== void 0) {
        var c = Kn, u = n(e);
        return Kn = c, ji(e, t, u);
      }
      break;
    }
  }
  var f = n;
  if (t == null)
    return f;
  var d = t[f];
  return d !== void 0 ? d : f;
}
function u0(e, t, n) {
  var r = "";
  if (Array.isArray(n))
    for (var o = 0; o < n.length; o++)
      r += ji(e, t, n[o]) + ";";
  else
    for (var s in n) {
      var a = n[s];
      if (typeof a != "object") {
        var l = a;
        t != null && t[l] !== void 0 ? r += s + "{" + t[l] + "}" : ef(l) && (r += Wl(s) + ":" + tf(s, l) + ";");
      } else if (Array.isArray(a) && typeof a[0] == "string" && (t == null || t[a[0]] === void 0))
        for (var c = 0; c < a.length; c++)
          ef(a[c]) && (r += Wl(s) + ":" + tf(s, a[c]) + ";");
      else {
        var u = ji(e, t, a);
        switch (s) {
          case "animation":
          case "animationName": {
            r += Wl(s) + ":" + u + ";";
            break;
          }
          default:
            r += s + "{" + u + "}";
        }
      }
    }
  return r;
}
var nf = /label:\s*([^\s;{]+)\s*(;|$)/g, Kn;
function Xo(e, t, n) {
  if (e.length === 1 && typeof e[0] == "object" && e[0] !== null && e[0].styles !== void 0)
    return e[0];
  var r = !0, o = "";
  Kn = void 0;
  var s = e[0];
  if (s == null || s.raw === void 0)
    r = !1, o += ji(n, t, s);
  else {
    var a = s;
    o += a[0];
  }
  for (var l = 1; l < e.length; l++)
    if (o += ji(n, t, e[l]), r) {
      var c = s;
      o += c[l];
    }
  nf.lastIndex = 0;
  for (var u = "", f; (f = nf.exec(o)) !== null; )
    u += "-" + f[1];
  var d = s0(o) + u;
  return {
    name: d,
    styles: o,
    next: Kn
  };
}
var d0 = function(t) {
  return t();
}, ch = C.useInsertionEffect ? C.useInsertionEffect : !1, uh = ch || d0, rf = ch || C.useLayoutEffect, dh = /* @__PURE__ */ C.createContext(
  // we're doing this to avoid preconstruct's dead code elimination in this one case
  // because this module is primarily intended for the browser and node
  // but it's also required in react native and similar environments sometimes
  // and we could have a special build just for that
  // but this is much easier and the native packages
  // might use a different theme context in the future anyway
  typeof HTMLElement < "u" ? /* @__PURE__ */ Zv({
    key: "css"
  }) : null
);
dh.Provider;
var Cu = function(t) {
  return /* @__PURE__ */ vu(function(n, r) {
    var o = xv(dh);
    return t(n, o, r);
  });
}, Qo = /* @__PURE__ */ C.createContext({}), Ou = {}.hasOwnProperty, Nc = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__", f0 = function(t, n) {
  var r = {};
  for (var o in n)
    Ou.call(n, o) && (r[o] = n[o]);
  return r[Nc] = t, r;
}, p0 = function(t) {
  var n = t.cache, r = t.serialized, o = t.isStringTag;
  return Tu(n, r, o), uh(function() {
    return Eu(n, r, o);
  }), null;
}, m0 = /* @__PURE__ */ Cu(function(e, t, n) {
  var r = e.css;
  typeof r == "string" && t.registered[r] !== void 0 && (r = t.registered[r]);
  var o = e[Nc], s = [r], a = "";
  typeof e.className == "string" ? a = ah(t.registered, s, e.className) : e.className != null && (a = e.className + " ");
  var l = Xo(s, void 0, C.useContext(Qo));
  a += t.key + "-" + l.name;
  var c = {};
  for (var u in e)
    Ou.call(e, u) && u !== "css" && u !== Nc && (c[u] = e[u]);
  return c.className = a, n && (c.ref = n), /* @__PURE__ */ C.createElement(C.Fragment, null, /* @__PURE__ */ C.createElement(p0, {
    cache: t,
    serialized: l,
    isStringTag: typeof o == "string"
  }), /* @__PURE__ */ C.createElement(o, c));
}), h0 = m0, of = function(t, n) {
  var r = arguments;
  if (n == null || !Ou.call(n, "css"))
    return C.createElement.apply(void 0, r);
  var o = r.length, s = new Array(o);
  s[0] = h0, s[1] = f0(t, n);
  for (var a = 2; a < o; a++)
    s[a] = r[a];
  return C.createElement.apply(null, s);
};
(function(e) {
  var t;
  t || (t = e.JSX || (e.JSX = {}));
})(of || (of = {}));
var fh = /* @__PURE__ */ Cu(function(e, t) {
  var n = e.styles, r = Xo([n], void 0, C.useContext(Qo)), o = C.useRef();
  return rf(function() {
    var s = t.key + "-global", a = new t.sheet.constructor({
      key: s,
      nonce: t.sheet.nonce,
      container: t.sheet.container,
      speedy: t.sheet.isSpeedy
    }), l = !1, c = document.querySelector('style[data-emotion="' + s + " " + r.name + '"]');
    return t.sheet.tags.length && (a.before = t.sheet.tags[0]), c !== null && (l = !0, c.setAttribute("data-emotion", s), a.hydrate([c])), o.current = [a, l], function() {
      a.flush();
    };
  }, [t]), rf(function() {
    var s = o.current, a = s[0], l = s[1];
    if (l) {
      s[1] = !1;
      return;
    }
    if (r.next !== void 0 && Eu(t, r.next, !0), a.tags.length) {
      var c = a.tags[a.tags.length - 1].nextElementSibling;
      a.before = c, a.flush();
    }
    t.insert("", r, a, !1);
  }, [t, r.name]), null;
});
function Ru() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return Xo(t);
}
function ns() {
  var e = Ru.apply(void 0, arguments), t = "animation-" + e.name;
  return {
    name: t,
    styles: "@keyframes " + t + "{" + e.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
}
var g0 = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, y0 = /* @__PURE__ */ ih(
  function(e) {
    return g0.test(e) || e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) < 91;
  }
  /* Z+1 */
), b0 = y0, v0 = function(t) {
  return t !== "theme";
}, sf = function(t) {
  return typeof t == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  t.charCodeAt(0) > 96 ? b0 : v0;
}, af = function(t, n, r) {
  var o;
  if (n) {
    var s = n.shouldForwardProp;
    o = t.__emotion_forwardProp && s ? function(a) {
      return t.__emotion_forwardProp(a) && s(a);
    } : s;
  }
  return typeof o != "function" && r && (o = t.__emotion_forwardProp), o;
}, x0 = function(t) {
  var n = t.cache, r = t.serialized, o = t.isStringTag;
  return Tu(n, r, o), uh(function() {
    return Eu(n, r, o);
  }), null;
}, w0 = function e(t, n) {
  var r = t.__emotion_real === t, o = r && t.__emotion_base || t, s, a;
  n !== void 0 && (s = n.label, a = n.target);
  var l = af(t, n, r), c = l || sf(o), u = !c("as");
  return function() {
    var f = arguments, d = r && t.__emotion_styles !== void 0 ? t.__emotion_styles.slice(0) : [];
    if (s !== void 0 && d.push("label:" + s + ";"), f[0] == null || f[0].raw === void 0)
      d.push.apply(d, f);
    else {
      var h = f[0];
      d.push(h[0]);
      for (var g = f.length, y = 1; y < g; y++)
        d.push(f[y], h[y]);
    }
    var m = Cu(function(b, v, E) {
      var S = u && b.as || o, w = "", x = [], T = b;
      if (b.theme == null) {
        T = {};
        for (var R in b)
          T[R] = b[R];
        T.theme = C.useContext(Qo);
      }
      typeof b.className == "string" ? w = ah(v.registered, x, b.className) : b.className != null && (w = b.className + " ");
      var I = Xo(d.concat(x), v.registered, T);
      w += v.key + "-" + I.name, a !== void 0 && (w += " " + a);
      var N = u && l === void 0 ? sf(S) : c, p = {};
      for (var O in b)
        u && O === "as" || N(O) && (p[O] = b[O]);
      return p.className = w, E && (p.ref = E), /* @__PURE__ */ C.createElement(C.Fragment, null, /* @__PURE__ */ C.createElement(x0, {
        cache: v,
        serialized: I,
        isStringTag: typeof S == "string"
      }), /* @__PURE__ */ C.createElement(S, p));
    });
    return m.displayName = s !== void 0 ? s : "Styled(" + (typeof o == "string" ? o : o.displayName || o.name || "Component") + ")", m.defaultProps = t.defaultProps, m.__emotion_real = m, m.__emotion_base = o, m.__emotion_styles = d, m.__emotion_forwardProp = l, Object.defineProperty(m, "toString", {
      value: function() {
        return "." + a;
      }
    }), m.withComponent = function(b, v) {
      var E = e(b, ca({}, n, v, {
        shouldForwardProp: af(m, v, !0)
      }));
      return E.apply(void 0, d);
    }, m;
  };
}, S0 = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], da = w0.bind(null);
S0.forEach(function(e) {
  da[e] = da(e);
});
var ks = { exports: {} }, Is = { exports: {} }, Xe = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var lf;
function T0() {
  if (lf) return Xe;
  lf = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, f = e ? Symbol.for("react.forward_ref") : 60112, d = e ? Symbol.for("react.suspense") : 60113, h = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, y = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, v = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
  function S(x) {
    if (typeof x == "object" && x !== null) {
      var T = x.$$typeof;
      switch (T) {
        case t:
          switch (x = x.type, x) {
            case c:
            case u:
            case r:
            case s:
            case o:
            case d:
              return x;
            default:
              switch (x = x && x.$$typeof, x) {
                case l:
                case f:
                case y:
                case g:
                case a:
                  return x;
                default:
                  return T;
              }
          }
        case n:
          return T;
      }
    }
  }
  function w(x) {
    return S(x) === u;
  }
  return Xe.AsyncMode = c, Xe.ConcurrentMode = u, Xe.ContextConsumer = l, Xe.ContextProvider = a, Xe.Element = t, Xe.ForwardRef = f, Xe.Fragment = r, Xe.Lazy = y, Xe.Memo = g, Xe.Portal = n, Xe.Profiler = s, Xe.StrictMode = o, Xe.Suspense = d, Xe.isAsyncMode = function(x) {
    return w(x) || S(x) === c;
  }, Xe.isConcurrentMode = w, Xe.isContextConsumer = function(x) {
    return S(x) === l;
  }, Xe.isContextProvider = function(x) {
    return S(x) === a;
  }, Xe.isElement = function(x) {
    return typeof x == "object" && x !== null && x.$$typeof === t;
  }, Xe.isForwardRef = function(x) {
    return S(x) === f;
  }, Xe.isFragment = function(x) {
    return S(x) === r;
  }, Xe.isLazy = function(x) {
    return S(x) === y;
  }, Xe.isMemo = function(x) {
    return S(x) === g;
  }, Xe.isPortal = function(x) {
    return S(x) === n;
  }, Xe.isProfiler = function(x) {
    return S(x) === s;
  }, Xe.isStrictMode = function(x) {
    return S(x) === o;
  }, Xe.isSuspense = function(x) {
    return S(x) === d;
  }, Xe.isValidElementType = function(x) {
    return typeof x == "string" || typeof x == "function" || x === r || x === u || x === s || x === o || x === d || x === h || typeof x == "object" && x !== null && (x.$$typeof === y || x.$$typeof === g || x.$$typeof === a || x.$$typeof === l || x.$$typeof === f || x.$$typeof === b || x.$$typeof === v || x.$$typeof === E || x.$$typeof === m);
  }, Xe.typeOf = S, Xe;
}
var Qe = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var cf;
function E0() {
  return cf || (cf = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, o = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, f = e ? Symbol.for("react.forward_ref") : 60112, d = e ? Symbol.for("react.suspense") : 60113, h = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, y = e ? Symbol.for("react.lazy") : 60116, m = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, v = e ? Symbol.for("react.responder") : 60118, E = e ? Symbol.for("react.scope") : 60119;
    function S(B) {
      return typeof B == "string" || typeof B == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      B === r || B === u || B === s || B === o || B === d || B === h || typeof B == "object" && B !== null && (B.$$typeof === y || B.$$typeof === g || B.$$typeof === a || B.$$typeof === l || B.$$typeof === f || B.$$typeof === b || B.$$typeof === v || B.$$typeof === E || B.$$typeof === m);
    }
    function w(B) {
      if (typeof B == "object" && B !== null) {
        var pe = B.$$typeof;
        switch (pe) {
          case t:
            var ae = B.type;
            switch (ae) {
              case c:
              case u:
              case r:
              case s:
              case o:
              case d:
                return ae;
              default:
                var me = ae && ae.$$typeof;
                switch (me) {
                  case l:
                  case f:
                  case y:
                  case g:
                  case a:
                    return me;
                  default:
                    return pe;
                }
            }
          case n:
            return pe;
        }
      }
    }
    var x = c, T = u, R = l, I = a, N = t, p = f, O = r, $ = y, A = g, D = n, M = s, _ = o, L = d, U = !1;
    function z(B) {
      return U || (U = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), j(B) || w(B) === c;
    }
    function j(B) {
      return w(B) === u;
    }
    function V(B) {
      return w(B) === l;
    }
    function K(B) {
      return w(B) === a;
    }
    function Y(B) {
      return typeof B == "object" && B !== null && B.$$typeof === t;
    }
    function te(B) {
      return w(B) === f;
    }
    function X(B) {
      return w(B) === r;
    }
    function ee(B) {
      return w(B) === y;
    }
    function re(B) {
      return w(B) === g;
    }
    function q(B) {
      return w(B) === n;
    }
    function Q(B) {
      return w(B) === s;
    }
    function G(B) {
      return w(B) === o;
    }
    function ne(B) {
      return w(B) === d;
    }
    Qe.AsyncMode = x, Qe.ConcurrentMode = T, Qe.ContextConsumer = R, Qe.ContextProvider = I, Qe.Element = N, Qe.ForwardRef = p, Qe.Fragment = O, Qe.Lazy = $, Qe.Memo = A, Qe.Portal = D, Qe.Profiler = M, Qe.StrictMode = _, Qe.Suspense = L, Qe.isAsyncMode = z, Qe.isConcurrentMode = j, Qe.isContextConsumer = V, Qe.isContextProvider = K, Qe.isElement = Y, Qe.isForwardRef = te, Qe.isFragment = X, Qe.isLazy = ee, Qe.isMemo = re, Qe.isPortal = q, Qe.isProfiler = Q, Qe.isStrictMode = G, Qe.isSuspense = ne, Qe.isValidElementType = S, Qe.typeOf = w;
  }()), Qe;
}
var uf;
function ph() {
  return uf || (uf = 1, process.env.NODE_ENV === "production" ? Is.exports = T0() : Is.exports = E0()), Is.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var Ul, df;
function C0() {
  if (df) return Ul;
  df = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function r(s) {
    if (s == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(s);
  }
  function o() {
    try {
      if (!Object.assign)
        return !1;
      var s = new String("abc");
      if (s[5] = "de", Object.getOwnPropertyNames(s)[0] === "5")
        return !1;
      for (var a = {}, l = 0; l < 10; l++)
        a["_" + String.fromCharCode(l)] = l;
      var c = Object.getOwnPropertyNames(a).map(function(f) {
        return a[f];
      });
      if (c.join("") !== "0123456789")
        return !1;
      var u = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(f) {
        u[f] = f;
      }), Object.keys(Object.assign({}, u)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return Ul = o() ? Object.assign : function(s, a) {
    for (var l, c = r(s), u, f = 1; f < arguments.length; f++) {
      l = Object(arguments[f]);
      for (var d in l)
        t.call(l, d) && (c[d] = l[d]);
      if (e) {
        u = e(l);
        for (var h = 0; h < u.length; h++)
          n.call(l, u[h]) && (c[u[h]] = l[u[h]]);
      }
    }
    return c;
  }, Ul;
}
var Hl, ff;
function $u() {
  if (ff) return Hl;
  ff = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return Hl = e, Hl;
}
var ql, pf;
function mh() {
  return pf || (pf = 1, ql = Function.call.bind(Object.prototype.hasOwnProperty)), ql;
}
var Gl, mf;
function O0() {
  if (mf) return Gl;
  mf = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = /* @__PURE__ */ $u(), n = {}, r = /* @__PURE__ */ mh();
    e = function(s) {
      var a = "Warning: " + s;
      typeof console < "u" && console.error(a);
      try {
        throw new Error(a);
      } catch {
      }
    };
  }
  function o(s, a, l, c, u) {
    if (process.env.NODE_ENV !== "production") {
      for (var f in s)
        if (r(s, f)) {
          var d;
          try {
            if (typeof s[f] != "function") {
              var h = Error(
                (c || "React class") + ": " + l + " type `" + f + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof s[f] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw h.name = "Invariant Violation", h;
            }
            d = s[f](a, f, c, l, null, t);
          } catch (y) {
            d = y;
          }
          if (d && !(d instanceof Error) && e(
            (c || "React class") + ": type specification of " + l + " `" + f + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof d + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), d instanceof Error && !(d.message in n)) {
            n[d.message] = !0;
            var g = u ? u() : "";
            e(
              "Failed " + l + " type: " + d.message + (g ?? "")
            );
          }
        }
    }
  }
  return o.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (n = {});
  }, Gl = o, Gl;
}
var Yl, hf;
function R0() {
  if (hf) return Yl;
  hf = 1;
  var e = ph(), t = C0(), n = /* @__PURE__ */ $u(), r = /* @__PURE__ */ mh(), o = /* @__PURE__ */ O0(), s = function() {
  };
  process.env.NODE_ENV !== "production" && (s = function(l) {
    var c = "Warning: " + l;
    typeof console < "u" && console.error(c);
    try {
      throw new Error(c);
    } catch {
    }
  });
  function a() {
    return null;
  }
  return Yl = function(l, c) {
    var u = typeof Symbol == "function" && Symbol.iterator, f = "@@iterator";
    function d(j) {
      var V = j && (u && j[u] || j[f]);
      if (typeof V == "function")
        return V;
    }
    var h = "<<anonymous>>", g = {
      array: v("array"),
      bigint: v("bigint"),
      bool: v("boolean"),
      func: v("function"),
      number: v("number"),
      object: v("object"),
      string: v("string"),
      symbol: v("symbol"),
      any: E(),
      arrayOf: S,
      element: w(),
      elementType: x(),
      instanceOf: T,
      node: p(),
      objectOf: I,
      oneOf: R,
      oneOfType: N,
      shape: $,
      exact: A
    };
    function y(j, V) {
      return j === V ? j !== 0 || 1 / j === 1 / V : j !== j && V !== V;
    }
    function m(j, V) {
      this.message = j, this.data = V && typeof V == "object" ? V : {}, this.stack = "";
    }
    m.prototype = Error.prototype;
    function b(j) {
      if (process.env.NODE_ENV !== "production")
        var V = {}, K = 0;
      function Y(X, ee, re, q, Q, G, ne) {
        if (q = q || h, G = G || re, ne !== n) {
          if (c) {
            var B = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw B.name = "Invariant Violation", B;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var pe = q + ":" + re;
            !V[pe] && // Avoid spamming the console because they are often not actionable except for lib authors
            K < 3 && (s(
              "You are manually calling a React.PropTypes validation function for the `" + G + "` prop on `" + q + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), V[pe] = !0, K++);
          }
        }
        return ee[re] == null ? X ? ee[re] === null ? new m("The " + Q + " `" + G + "` is marked as required " + ("in `" + q + "`, but its value is `null`.")) : new m("The " + Q + " `" + G + "` is marked as required in " + ("`" + q + "`, but its value is `undefined`.")) : null : j(ee, re, q, Q, G);
      }
      var te = Y.bind(null, !1);
      return te.isRequired = Y.bind(null, !0), te;
    }
    function v(j) {
      function V(K, Y, te, X, ee, re) {
        var q = K[Y], Q = _(q);
        if (Q !== j) {
          var G = L(q);
          return new m(
            "Invalid " + X + " `" + ee + "` of type " + ("`" + G + "` supplied to `" + te + "`, expected ") + ("`" + j + "`."),
            { expectedType: j }
          );
        }
        return null;
      }
      return b(V);
    }
    function E() {
      return b(a);
    }
    function S(j) {
      function V(K, Y, te, X, ee) {
        if (typeof j != "function")
          return new m("Property `" + ee + "` of component `" + te + "` has invalid PropType notation inside arrayOf.");
        var re = K[Y];
        if (!Array.isArray(re)) {
          var q = _(re);
          return new m("Invalid " + X + " `" + ee + "` of type " + ("`" + q + "` supplied to `" + te + "`, expected an array."));
        }
        for (var Q = 0; Q < re.length; Q++) {
          var G = j(re, Q, te, X, ee + "[" + Q + "]", n);
          if (G instanceof Error)
            return G;
        }
        return null;
      }
      return b(V);
    }
    function w() {
      function j(V, K, Y, te, X) {
        var ee = V[K];
        if (!l(ee)) {
          var re = _(ee);
          return new m("Invalid " + te + " `" + X + "` of type " + ("`" + re + "` supplied to `" + Y + "`, expected a single ReactElement."));
        }
        return null;
      }
      return b(j);
    }
    function x() {
      function j(V, K, Y, te, X) {
        var ee = V[K];
        if (!e.isValidElementType(ee)) {
          var re = _(ee);
          return new m("Invalid " + te + " `" + X + "` of type " + ("`" + re + "` supplied to `" + Y + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return b(j);
    }
    function T(j) {
      function V(K, Y, te, X, ee) {
        if (!(K[Y] instanceof j)) {
          var re = j.name || h, q = z(K[Y]);
          return new m("Invalid " + X + " `" + ee + "` of type " + ("`" + q + "` supplied to `" + te + "`, expected ") + ("instance of `" + re + "`."));
        }
        return null;
      }
      return b(V);
    }
    function R(j) {
      if (!Array.isArray(j))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? s(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : s("Invalid argument supplied to oneOf, expected an array.")), a;
      function V(K, Y, te, X, ee) {
        for (var re = K[Y], q = 0; q < j.length; q++)
          if (y(re, j[q]))
            return null;
        var Q = JSON.stringify(j, function(ne, B) {
          var pe = L(B);
          return pe === "symbol" ? String(B) : B;
        });
        return new m("Invalid " + X + " `" + ee + "` of value `" + String(re) + "` " + ("supplied to `" + te + "`, expected one of " + Q + "."));
      }
      return b(V);
    }
    function I(j) {
      function V(K, Y, te, X, ee) {
        if (typeof j != "function")
          return new m("Property `" + ee + "` of component `" + te + "` has invalid PropType notation inside objectOf.");
        var re = K[Y], q = _(re);
        if (q !== "object")
          return new m("Invalid " + X + " `" + ee + "` of type " + ("`" + q + "` supplied to `" + te + "`, expected an object."));
        for (var Q in re)
          if (r(re, Q)) {
            var G = j(re, Q, te, X, ee + "." + Q, n);
            if (G instanceof Error)
              return G;
          }
        return null;
      }
      return b(V);
    }
    function N(j) {
      if (!Array.isArray(j))
        return process.env.NODE_ENV !== "production" && s("Invalid argument supplied to oneOfType, expected an instance of array."), a;
      for (var V = 0; V < j.length; V++) {
        var K = j[V];
        if (typeof K != "function")
          return s(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + U(K) + " at index " + V + "."
          ), a;
      }
      function Y(te, X, ee, re, q) {
        for (var Q = [], G = 0; G < j.length; G++) {
          var ne = j[G], B = ne(te, X, ee, re, q, n);
          if (B == null)
            return null;
          B.data && r(B.data, "expectedType") && Q.push(B.data.expectedType);
        }
        var pe = Q.length > 0 ? ", expected one of type [" + Q.join(", ") + "]" : "";
        return new m("Invalid " + re + " `" + q + "` supplied to " + ("`" + ee + "`" + pe + "."));
      }
      return b(Y);
    }
    function p() {
      function j(V, K, Y, te, X) {
        return D(V[K]) ? null : new m("Invalid " + te + " `" + X + "` supplied to " + ("`" + Y + "`, expected a ReactNode."));
      }
      return b(j);
    }
    function O(j, V, K, Y, te) {
      return new m(
        (j || "React class") + ": " + V + " type `" + K + "." + Y + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + te + "`."
      );
    }
    function $(j) {
      function V(K, Y, te, X, ee) {
        var re = K[Y], q = _(re);
        if (q !== "object")
          return new m("Invalid " + X + " `" + ee + "` of type `" + q + "` " + ("supplied to `" + te + "`, expected `object`."));
        for (var Q in j) {
          var G = j[Q];
          if (typeof G != "function")
            return O(te, X, ee, Q, L(G));
          var ne = G(re, Q, te, X, ee + "." + Q, n);
          if (ne)
            return ne;
        }
        return null;
      }
      return b(V);
    }
    function A(j) {
      function V(K, Y, te, X, ee) {
        var re = K[Y], q = _(re);
        if (q !== "object")
          return new m("Invalid " + X + " `" + ee + "` of type `" + q + "` " + ("supplied to `" + te + "`, expected `object`."));
        var Q = t({}, K[Y], j);
        for (var G in Q) {
          var ne = j[G];
          if (r(j, G) && typeof ne != "function")
            return O(te, X, ee, G, L(ne));
          if (!ne)
            return new m(
              "Invalid " + X + " `" + ee + "` key `" + G + "` supplied to `" + te + "`.\nBad object: " + JSON.stringify(K[Y], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(j), null, "  ")
            );
          var B = ne(re, G, te, X, ee + "." + G, n);
          if (B)
            return B;
        }
        return null;
      }
      return b(V);
    }
    function D(j) {
      switch (typeof j) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !j;
        case "object":
          if (Array.isArray(j))
            return j.every(D);
          if (j === null || l(j))
            return !0;
          var V = d(j);
          if (V) {
            var K = V.call(j), Y;
            if (V !== j.entries) {
              for (; !(Y = K.next()).done; )
                if (!D(Y.value))
                  return !1;
            } else
              for (; !(Y = K.next()).done; ) {
                var te = Y.value;
                if (te && !D(te[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function M(j, V) {
      return j === "symbol" ? !0 : V ? V["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && V instanceof Symbol : !1;
    }
    function _(j) {
      var V = typeof j;
      return Array.isArray(j) ? "array" : j instanceof RegExp ? "object" : M(V, j) ? "symbol" : V;
    }
    function L(j) {
      if (typeof j > "u" || j === null)
        return "" + j;
      var V = _(j);
      if (V === "object") {
        if (j instanceof Date)
          return "date";
        if (j instanceof RegExp)
          return "regexp";
      }
      return V;
    }
    function U(j) {
      var V = L(j);
      switch (V) {
        case "array":
        case "object":
          return "an " + V;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + V;
        default:
          return V;
      }
    }
    function z(j) {
      return !j.constructor || !j.constructor.name ? h : j.constructor.name;
    }
    return g.checkPropTypes = o, g.resetWarningCache = o.resetWarningCache, g.PropTypes = g, g;
  }, Yl;
}
var Kl, gf;
function $0() {
  if (gf) return Kl;
  gf = 1;
  var e = /* @__PURE__ */ $u();
  function t() {
  }
  function n() {
  }
  return n.resetWarningCache = t, Kl = function() {
    function r(a, l, c, u, f, d) {
      if (d !== e) {
        var h = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw h.name = "Invariant Violation", h;
      }
    }
    r.isRequired = r;
    function o() {
      return r;
    }
    var s = {
      array: r,
      bigint: r,
      bool: r,
      func: r,
      number: r,
      object: r,
      string: r,
      symbol: r,
      any: r,
      arrayOf: o,
      element: r,
      elementType: r,
      instanceOf: o,
      node: r,
      objectOf: o,
      oneOf: o,
      oneOfType: o,
      shape: o,
      exact: o,
      checkPropTypes: n,
      resetWarningCache: t
    };
    return s.PropTypes = s, s;
  }, Kl;
}
var yf;
function k0() {
  if (yf) return ks.exports;
  if (yf = 1, process.env.NODE_ENV !== "production") {
    var e = ph(), t = !0;
    ks.exports = /* @__PURE__ */ R0()(e.isElement, t);
  } else
    ks.exports = /* @__PURE__ */ $0()();
  return ks.exports;
}
var I0 = /* @__PURE__ */ k0();
const i = /* @__PURE__ */ e0(I0);
function P0(e) {
  return e == null || Object.keys(e).length === 0;
}
function ku(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e;
  return /* @__PURE__ */ k(fh, {
    styles: typeof t == "function" ? (o) => t(P0(o) ? n : o) : t
  });
}
process.env.NODE_ENV !== "production" && (ku.propTypes = {
  defaultTheme: i.object,
  styles: i.oneOfType([i.array, i.string, i.object, i.func])
});
/**
 * @mui/styled-engine v7.0.1
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function hh(e, t) {
  const n = da(e, t);
  return process.env.NODE_ENV !== "production" ? (...r) => {
    const o = typeof e == "string" ? `"${e}"` : "component";
    return r.length === 0 ? console.error([`MUI: Seems like you called \`styled(${o})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : r.some((s) => s === void 0) && console.error(`MUI: the styled(${o})(...args) API requires all its args to be defined.`), n(...r);
  } : n;
}
function N0(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const bf = [];
function vf(e) {
  return bf[0] = e, Xo(bf);
}
var Ps = { exports: {} }, et = {};
/**
 * @license React
 * react-is.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var xf;
function A0() {
  if (xf) return et;
  xf = 1;
  var e = Symbol.for("react.transitional.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), o = Symbol.for("react.profiler"), s = Symbol.for("react.consumer"), a = Symbol.for("react.context"), l = Symbol.for("react.forward_ref"), c = Symbol.for("react.suspense"), u = Symbol.for("react.suspense_list"), f = Symbol.for("react.memo"), d = Symbol.for("react.lazy"), h = Symbol.for("react.view_transition"), g = Symbol.for("react.client.reference");
  function y(m) {
    if (typeof m == "object" && m !== null) {
      var b = m.$$typeof;
      switch (b) {
        case e:
          switch (m = m.type, m) {
            case n:
            case o:
            case r:
            case c:
            case u:
            case h:
              return m;
            default:
              switch (m = m && m.$$typeof, m) {
                case a:
                case l:
                case d:
                case f:
                  return m;
                case s:
                  return m;
                default:
                  return b;
              }
          }
        case t:
          return b;
      }
    }
  }
  return et.ContextConsumer = s, et.ContextProvider = a, et.Element = e, et.ForwardRef = l, et.Fragment = n, et.Lazy = d, et.Memo = f, et.Portal = t, et.Profiler = o, et.StrictMode = r, et.Suspense = c, et.SuspenseList = u, et.isContextConsumer = function(m) {
    return y(m) === s;
  }, et.isContextProvider = function(m) {
    return y(m) === a;
  }, et.isElement = function(m) {
    return typeof m == "object" && m !== null && m.$$typeof === e;
  }, et.isForwardRef = function(m) {
    return y(m) === l;
  }, et.isFragment = function(m) {
    return y(m) === n;
  }, et.isLazy = function(m) {
    return y(m) === d;
  }, et.isMemo = function(m) {
    return y(m) === f;
  }, et.isPortal = function(m) {
    return y(m) === t;
  }, et.isProfiler = function(m) {
    return y(m) === o;
  }, et.isStrictMode = function(m) {
    return y(m) === r;
  }, et.isSuspense = function(m) {
    return y(m) === c;
  }, et.isSuspenseList = function(m) {
    return y(m) === u;
  }, et.isValidElementType = function(m) {
    return typeof m == "string" || typeof m == "function" || m === n || m === o || m === r || m === c || m === u || typeof m == "object" && m !== null && (m.$$typeof === d || m.$$typeof === f || m.$$typeof === a || m.$$typeof === s || m.$$typeof === l || m.$$typeof === g || m.getModuleId !== void 0);
  }, et.typeOf = y, et;
}
var tt = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var wf;
function M0() {
  return wf || (wf = 1, process.env.NODE_ENV !== "production" && function() {
    function e(m) {
      if (typeof m == "object" && m !== null) {
        var b = m.$$typeof;
        switch (b) {
          case t:
            switch (m = m.type, m) {
              case r:
              case s:
              case o:
              case u:
              case f:
              case g:
                return m;
              default:
                switch (m = m && m.$$typeof, m) {
                  case l:
                  case c:
                  case h:
                  case d:
                    return m;
                  case a:
                    return m;
                  default:
                    return b;
                }
            }
          case n:
            return b;
        }
      }
    }
    var t = Symbol.for("react.transitional.element"), n = Symbol.for("react.portal"), r = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), s = Symbol.for("react.profiler"), a = Symbol.for("react.consumer"), l = Symbol.for("react.context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), f = Symbol.for("react.suspense_list"), d = Symbol.for("react.memo"), h = Symbol.for("react.lazy"), g = Symbol.for("react.view_transition"), y = Symbol.for("react.client.reference");
    tt.ContextConsumer = a, tt.ContextProvider = l, tt.Element = t, tt.ForwardRef = c, tt.Fragment = r, tt.Lazy = h, tt.Memo = d, tt.Portal = n, tt.Profiler = s, tt.StrictMode = o, tt.Suspense = u, tt.SuspenseList = f, tt.isContextConsumer = function(m) {
      return e(m) === a;
    }, tt.isContextProvider = function(m) {
      return e(m) === l;
    }, tt.isElement = function(m) {
      return typeof m == "object" && m !== null && m.$$typeof === t;
    }, tt.isForwardRef = function(m) {
      return e(m) === c;
    }, tt.isFragment = function(m) {
      return e(m) === r;
    }, tt.isLazy = function(m) {
      return e(m) === h;
    }, tt.isMemo = function(m) {
      return e(m) === d;
    }, tt.isPortal = function(m) {
      return e(m) === n;
    }, tt.isProfiler = function(m) {
      return e(m) === s;
    }, tt.isStrictMode = function(m) {
      return e(m) === o;
    }, tt.isSuspense = function(m) {
      return e(m) === u;
    }, tt.isSuspenseList = function(m) {
      return e(m) === f;
    }, tt.isValidElementType = function(m) {
      return typeof m == "string" || typeof m == "function" || m === r || m === s || m === o || m === u || m === f || typeof m == "object" && m !== null && (m.$$typeof === h || m.$$typeof === d || m.$$typeof === l || m.$$typeof === a || m.$$typeof === c || m.$$typeof === y || m.getModuleId !== void 0);
    }, tt.typeOf = e;
  }()), tt;
}
var Sf;
function _0() {
  return Sf || (Sf = 1, process.env.NODE_ENV === "production" ? Ps.exports = /* @__PURE__ */ A0() : Ps.exports = /* @__PURE__ */ M0()), Ps.exports;
}
var bn = /* @__PURE__ */ _0();
function Qn(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function gh(e) {
  if (/* @__PURE__ */ C.isValidElement(e) || bn.isValidElementType(e) || !Qn(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = gh(e[n]);
  }), t;
}
function hn(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return Qn(e) && Qn(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ C.isValidElement(t[o]) || bn.isValidElementType(t[o]) ? r[o] = t[o] : Qn(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && Qn(e[o]) ? r[o] = hn(e[o], t[o], n) : n.clone ? r[o] = Qn(t[o]) ? gh(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
const D0 = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, r) => n.val - r.val), t.reduce((n, r) => ({
    ...n,
    [r.key]: r.val
  }), {});
};
function B0(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: r = 5,
    ...o
  } = e, s = D0(t), a = Object.keys(s);
  function l(h) {
    return `@media (min-width:${typeof t[h] == "number" ? t[h] : h}${n})`;
  }
  function c(h) {
    return `@media (max-width:${(typeof t[h] == "number" ? t[h] : h) - r / 100}${n})`;
  }
  function u(h, g) {
    const y = a.indexOf(g);
    return `@media (min-width:${typeof t[h] == "number" ? t[h] : h}${n}) and (max-width:${(y !== -1 && typeof t[a[y]] == "number" ? t[a[y]] : g) - r / 100}${n})`;
  }
  function f(h) {
    return a.indexOf(h) + 1 < a.length ? u(h, a[a.indexOf(h) + 1]) : l(h);
  }
  function d(h) {
    const g = a.indexOf(h);
    return g === 0 ? l(a[1]) : g === a.length - 1 ? c(a[g]) : u(h, a[a.indexOf(h) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: a,
    values: s,
    up: l,
    down: c,
    between: u,
    only: f,
    not: d,
    unit: n,
    ...o
  };
}
function F0(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((r) => r.startsWith("@container")).sort((r, o) => {
    var a, l;
    const s = /min-width:\s*([0-9.]+)/;
    return +(((a = r.match(s)) == null ? void 0 : a[1]) || 0) - +(((l = o.match(s)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((r, o) => {
    const s = t[o];
    return delete r[o], r[o] = s, r;
  }, {
    ...t
  }) : t;
}
function j0(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function L0(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : yr(18, `(${t})`));
    return null;
  }
  const [, r, o] = n, s = Number.isNaN(+r) ? r || 0 : +r;
  return e.containerQueries(o).up(s);
}
function V0(e) {
  const t = (s, a) => s.replace("@media", a ? `@container ${a}` : "@container");
  function n(s, a) {
    s.up = (...l) => t(e.breakpoints.up(...l), a), s.down = (...l) => t(e.breakpoints.down(...l), a), s.between = (...l) => t(e.breakpoints.between(...l), a), s.only = (...l) => t(e.breakpoints.only(...l), a), s.not = (...l) => {
      const c = t(e.breakpoints.not(...l), a);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const r = {}, o = (s) => (n(r, s), r);
  return n(o), {
    ...e,
    containerQueries: o
  };
}
const z0 = {
  borderRadius: 4
}, Lr = process.env.NODE_ENV !== "production" ? i.oneOfType([i.number, i.string, i.object, i.array]) : {};
function Ci(e, t) {
  return t ? hn(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const Ha = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, Tf = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${Ha[e]}px)`
}, W0 = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : Ha[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function br(e, t, n) {
  const r = e.theme || {};
  if (Array.isArray(t)) {
    const s = r.breakpoints || Tf;
    return t.reduce((a, l, c) => (a[s.up(s.keys[c])] = n(t[c]), a), {});
  }
  if (typeof t == "object") {
    const s = r.breakpoints || Tf;
    return Object.keys(t).reduce((a, l) => {
      if (j0(s.keys, l)) {
        const c = L0(r.containerQueries ? r : W0, l);
        c && (a[c] = n(t[l], l));
      } else if (Object.keys(s.values || Ha).includes(l)) {
        const c = s.up(l);
        a[c] = n(t[l], l);
      } else {
        const c = l;
        a[c] = t[c];
      }
      return a;
    }, {});
  }
  return n(t);
}
function U0(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((r, o) => {
    const s = e.up(o);
    return r[s] = {}, r;
  }, {})) || {};
}
function H0(e, t) {
  return e.reduce((n, r) => {
    const o = n[r];
    return (!o || Object.keys(o).length === 0) && delete n[r], n;
  }, t);
}
function ve(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : yr(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function qa(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const r = `vars.${t}`.split(".").reduce((o, s) => o && o[s] ? o[s] : null, e);
    if (r != null)
      return r;
  }
  return t.split(".").reduce((r, o) => r && r[o] != null ? r[o] : null, e);
}
function fa(e, t, n, r = n) {
  let o;
  return typeof e == "function" ? o = e(n) : Array.isArray(e) ? o = e[n] || r : o = qa(e, n) || r, t && (o = t(o, r, e)), o;
}
function Tt(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: r,
    transform: o
  } = e, s = (a) => {
    if (a[t] == null)
      return null;
    const l = a[t], c = a.theme, u = qa(c, r) || {};
    return br(a, l, (d) => {
      let h = fa(u, o, d);
      return d === h && typeof d == "string" && (h = fa(u, o, `${t}${d === "default" ? "" : ve(d)}`, d)), n === !1 ? h : {
        [n]: h
      };
    });
  };
  return s.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: Lr
  } : {}, s.filterProps = [t], s;
}
function q0(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const G0 = {
  m: "margin",
  p: "padding"
}, Y0 = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, Ef = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, K0 = q0((e) => {
  if (e.length > 2)
    if (Ef[e])
      e = Ef[e];
    else
      return [e];
  const [t, n] = e.split(""), r = G0[t], o = Y0[n] || "";
  return Array.isArray(o) ? o.map((s) => r + s) : [r + o];
}), Ga = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], Ya = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], X0 = [...Ga, ...Ya];
function rs(e, t, n, r) {
  const o = qa(e, t, !0) ?? n;
  return typeof o == "number" || typeof o == "string" ? (s) => typeof s == "string" ? s : (process.env.NODE_ENV !== "production" && typeof s != "number" && console.error(`MUI: Expected ${r} argument to be a number or a string, got ${s}.`), typeof o == "string" ? o.startsWith("var(") && s === 0 ? 0 : o.startsWith("var(") && s === 1 ? o : `calc(${s} * ${o})` : o * s) : Array.isArray(o) ? (s) => {
    if (typeof s == "string")
      return s;
    const a = Math.abs(s);
    process.env.NODE_ENV !== "production" && (Number.isInteger(a) ? a > o.length - 1 && console.error([`MUI: The value provided (${a}) overflows.`, `The supported values are: ${JSON.stringify(o)}.`, `${a} > ${o.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = o[a];
    return s >= 0 ? l : typeof l == "number" ? -l : typeof l == "string" && l.startsWith("var(") ? `calc(-1 * ${l})` : `-${l}`;
  } : typeof o == "function" ? o : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${o}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function Iu(e) {
  return rs(e, "spacing", 8, "spacing");
}
function os(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function Q0(e, t) {
  return (n) => e.reduce((r, o) => (r[o] = os(t, n), r), {});
}
function J0(e, t, n, r) {
  if (!t.includes(n))
    return null;
  const o = K0(n), s = Q0(o, r), a = e[n];
  return br(e, a, s);
}
function yh(e, t) {
  const n = Iu(e.theme);
  return Object.keys(e).map((r) => J0(e, t, r, n)).reduce(Ci, {});
}
function gt(e) {
  return yh(e, Ga);
}
gt.propTypes = process.env.NODE_ENV !== "production" ? Ga.reduce((e, t) => (e[t] = Lr, e), {}) : {};
gt.filterProps = Ga;
function yt(e) {
  return yh(e, Ya);
}
yt.propTypes = process.env.NODE_ENV !== "production" ? Ya.reduce((e, t) => (e[t] = Lr, e), {}) : {};
yt.filterProps = Ya;
process.env.NODE_ENV !== "production" && X0.reduce((e, t) => (e[t] = Lr, e), {});
function bh(e = 8, t = Iu({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...r) => (process.env.NODE_ENV !== "production" && (r.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${r.length}`)), (r.length === 0 ? [1] : r).map((s) => {
    const a = t(s);
    return typeof a == "number" ? `${a}px` : a;
  }).join(" "));
  return n.mui = !0, n;
}
function Ka(...e) {
  const t = e.reduce((r, o) => (o.filterProps.forEach((s) => {
    r[s] = o;
  }), r), {}), n = (r) => Object.keys(r).reduce((o, s) => t[s] ? Ci(o, t[s](r)) : o, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((r, o) => Object.assign(r, o.propTypes), {}) : {}, n.filterProps = e.reduce((r, o) => r.concat(o.filterProps), []), n;
}
function Tn(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function Nn(e, t) {
  return Tt({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const Z0 = Nn("border", Tn), ex = Nn("borderTop", Tn), tx = Nn("borderRight", Tn), nx = Nn("borderBottom", Tn), rx = Nn("borderLeft", Tn), ox = Nn("borderColor"), ix = Nn("borderTopColor"), sx = Nn("borderRightColor"), ax = Nn("borderBottomColor"), lx = Nn("borderLeftColor"), cx = Nn("outline", Tn), ux = Nn("outlineColor"), Xa = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = rs(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (r) => ({
      borderRadius: os(t, r)
    });
    return br(e, e.borderRadius, n);
  }
  return null;
};
Xa.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: Lr
} : {};
Xa.filterProps = ["borderRadius"];
Ka(Z0, ex, tx, nx, rx, ox, ix, sx, ax, lx, Xa, cx, ux);
const Qa = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = rs(e.theme, "spacing", 8, "gap"), n = (r) => ({
      gap: os(t, r)
    });
    return br(e, e.gap, n);
  }
  return null;
};
Qa.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: Lr
} : {};
Qa.filterProps = ["gap"];
const Ja = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = rs(e.theme, "spacing", 8, "columnGap"), n = (r) => ({
      columnGap: os(t, r)
    });
    return br(e, e.columnGap, n);
  }
  return null;
};
Ja.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: Lr
} : {};
Ja.filterProps = ["columnGap"];
const Za = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = rs(e.theme, "spacing", 8, "rowGap"), n = (r) => ({
      rowGap: os(t, r)
    });
    return br(e, e.rowGap, n);
  }
  return null;
};
Za.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: Lr
} : {};
Za.filterProps = ["rowGap"];
const dx = Tt({
  prop: "gridColumn"
}), fx = Tt({
  prop: "gridRow"
}), px = Tt({
  prop: "gridAutoFlow"
}), mx = Tt({
  prop: "gridAutoColumns"
}), hx = Tt({
  prop: "gridAutoRows"
}), gx = Tt({
  prop: "gridTemplateColumns"
}), yx = Tt({
  prop: "gridTemplateRows"
}), bx = Tt({
  prop: "gridTemplateAreas"
}), vx = Tt({
  prop: "gridArea"
});
Ka(Qa, Ja, Za, dx, fx, px, mx, hx, gx, yx, bx, vx);
function Ao(e, t) {
  return t === "grey" ? t : e;
}
const xx = Tt({
  prop: "color",
  themeKey: "palette",
  transform: Ao
}), wx = Tt({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: Ao
}), Sx = Tt({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: Ao
});
Ka(xx, wx, Sx);
function dn(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const Tx = Tt({
  prop: "width",
  transform: dn
}), Pu = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var o, s, a, l, c;
      const r = ((a = (s = (o = e.theme) == null ? void 0 : o.breakpoints) == null ? void 0 : s.values) == null ? void 0 : a[n]) || Ha[n];
      return r ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${r}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: r
      } : {
        maxWidth: dn(n)
      };
    };
    return br(e, e.maxWidth, t);
  }
  return null;
};
Pu.filterProps = ["maxWidth"];
const Ex = Tt({
  prop: "minWidth",
  transform: dn
}), Cx = Tt({
  prop: "height",
  transform: dn
}), Ox = Tt({
  prop: "maxHeight",
  transform: dn
}), Rx = Tt({
  prop: "minHeight",
  transform: dn
});
Tt({
  prop: "size",
  cssProperty: "width",
  transform: dn
});
Tt({
  prop: "size",
  cssProperty: "height",
  transform: dn
});
const $x = Tt({
  prop: "boxSizing"
});
Ka(Tx, Pu, Ex, Cx, Ox, Rx, $x);
const is = {
  // borders
  border: {
    themeKey: "borders",
    transform: Tn
  },
  borderTop: {
    themeKey: "borders",
    transform: Tn
  },
  borderRight: {
    themeKey: "borders",
    transform: Tn
  },
  borderBottom: {
    themeKey: "borders",
    transform: Tn
  },
  borderLeft: {
    themeKey: "borders",
    transform: Tn
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: Tn
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: Xa
  },
  // palette
  color: {
    themeKey: "palette",
    transform: Ao
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Ao
  },
  backgroundColor: {
    themeKey: "palette",
    transform: Ao
  },
  // spacing
  p: {
    style: yt
  },
  pt: {
    style: yt
  },
  pr: {
    style: yt
  },
  pb: {
    style: yt
  },
  pl: {
    style: yt
  },
  px: {
    style: yt
  },
  py: {
    style: yt
  },
  padding: {
    style: yt
  },
  paddingTop: {
    style: yt
  },
  paddingRight: {
    style: yt
  },
  paddingBottom: {
    style: yt
  },
  paddingLeft: {
    style: yt
  },
  paddingX: {
    style: yt
  },
  paddingY: {
    style: yt
  },
  paddingInline: {
    style: yt
  },
  paddingInlineStart: {
    style: yt
  },
  paddingInlineEnd: {
    style: yt
  },
  paddingBlock: {
    style: yt
  },
  paddingBlockStart: {
    style: yt
  },
  paddingBlockEnd: {
    style: yt
  },
  m: {
    style: gt
  },
  mt: {
    style: gt
  },
  mr: {
    style: gt
  },
  mb: {
    style: gt
  },
  ml: {
    style: gt
  },
  mx: {
    style: gt
  },
  my: {
    style: gt
  },
  margin: {
    style: gt
  },
  marginTop: {
    style: gt
  },
  marginRight: {
    style: gt
  },
  marginBottom: {
    style: gt
  },
  marginLeft: {
    style: gt
  },
  marginX: {
    style: gt
  },
  marginY: {
    style: gt
  },
  marginInline: {
    style: gt
  },
  marginInlineStart: {
    style: gt
  },
  marginInlineEnd: {
    style: gt
  },
  marginBlock: {
    style: gt
  },
  marginBlockStart: {
    style: gt
  },
  marginBlockEnd: {
    style: gt
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: Qa
  },
  rowGap: {
    style: Za
  },
  columnGap: {
    style: Ja
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: dn
  },
  maxWidth: {
    style: Pu
  },
  minWidth: {
    transform: dn
  },
  height: {
    transform: dn
  },
  maxHeight: {
    transform: dn
  },
  minHeight: {
    transform: dn
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function kx(...e) {
  const t = e.reduce((r, o) => r.concat(Object.keys(o)), []), n = new Set(t);
  return e.every((r) => n.size === Object.keys(r).length);
}
function Ix(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function Px() {
  function e(n, r, o, s) {
    const a = {
      [n]: r,
      theme: o
    }, l = s[n];
    if (!l)
      return {
        [n]: r
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: f,
      style: d
    } = l;
    if (r == null)
      return null;
    if (u === "typography" && r === "inherit")
      return {
        [n]: r
      };
    const h = qa(o, u) || {};
    return d ? d(a) : br(a, r, (y) => {
      let m = fa(h, f, y);
      return y === m && typeof y == "string" && (m = fa(h, f, `${n}${y === "default" ? "" : ve(y)}`, y)), c === !1 ? m : {
        [c]: m
      };
    });
  }
  function t(n) {
    const {
      sx: r,
      theme: o = {}
    } = n || {};
    if (!r)
      return null;
    const s = o.unstable_sxConfig ?? is;
    function a(l) {
      let c = l;
      if (typeof l == "function")
        c = l(o);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = U0(o.breakpoints), f = Object.keys(u);
      let d = u;
      return Object.keys(c).forEach((h) => {
        const g = Ix(c[h], o);
        if (g != null)
          if (typeof g == "object")
            if (s[h])
              d = Ci(d, e(h, g, o, s));
            else {
              const y = br({
                theme: o
              }, g, (m) => ({
                [h]: m
              }));
              kx(y, g) ? d[h] = t({
                sx: g,
                theme: o
              }) : d = Ci(d, y);
            }
          else
            d = Ci(d, e(h, g, o, s));
      }), F0(o, H0(f, d));
    }
    return Array.isArray(r) ? r.map(a) : a(r);
  }
  return t;
}
const Dr = Px();
Dr.filterProps = ["sx"];
function Nx(e, t) {
  var r;
  const n = this;
  if (n.vars) {
    if (!((r = n.colorSchemes) != null && r[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let o = n.getColorSchemeSelector(e);
    return o === "&" ? t : ((o.includes("data-") || o.includes(".")) && (o = `*:where(${o.replace(/\s*&$/, "")}) &`), {
      [o]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function el(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: r = {},
    spacing: o,
    shape: s = {},
    ...a
  } = e, l = B0(n), c = bh(o);
  let u = hn({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...r
    },
    spacing: c,
    shape: {
      ...z0,
      ...s
    }
  }, a);
  return u = V0(u), u.applyStyles = Nx, u = t.reduce((f, d) => hn(f, d), u), u.unstable_sxConfig = {
    ...is,
    ...a == null ? void 0 : a.unstable_sxConfig
  }, u.unstable_sx = function(d) {
    return Dr({
      sx: d,
      theme: this
    });
  }, u;
}
function Ax(e) {
  return Object.keys(e).length === 0;
}
function Nu(e = null) {
  const t = C.useContext(Qo);
  return !t || Ax(t) ? e : t;
}
const Mx = el();
function tl(e = Mx) {
  return Nu(e);
}
function vh({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const r = tl(n), o = typeof e == "function" ? e(t && r[t] || r) : e;
  return /* @__PURE__ */ k(ku, {
    styles: o
  });
}
process.env.NODE_ENV !== "production" && (vh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: i.object,
  /**
   * @ignore
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool]),
  /**
   * @ignore
   */
  themeId: i.string
});
const _x = (e) => {
  var r;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((r = e == null ? void 0 : e.theme) == null ? void 0 : r.unstable_sxConfig) ?? is;
  return Object.keys(e).forEach((o) => {
    n[o] ? t.systemProps[o] = e[o] : t.otherProps[o] = e[o];
  }), t;
};
function xh(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: r,
    otherProps: o
  } = _x(n);
  let s;
  return Array.isArray(t) ? s = [r, ...t] : typeof t == "function" ? s = (...a) => {
    const l = t(...a);
    return Qn(l) ? {
      ...r,
      ...l
    } : r;
  } : s = {
    ...r,
    ...t
  }, {
    ...o,
    sx: s
  };
}
const Cf = (e) => e, Dx = () => {
  let e = Cf;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = Cf;
    }
  };
}, wh = Dx();
function Sh(e) {
  var t, n, r = "";
  if (typeof e == "string" || typeof e == "number") r += e;
  else if (typeof e == "object") if (Array.isArray(e)) {
    var o = e.length;
    for (t = 0; t < o; t++) e[t] && (n = Sh(e[t])) && (r && (r += " "), r += n);
  } else for (n in e) e[n] && (r && (r += " "), r += n);
  return r;
}
function ge() {
  for (var e, t, n = 0, r = "", o = arguments.length; n < o; n++) (e = arguments[n]) && (t = Sh(e)) && (r && (r += " "), r += t);
  return r;
}
function Bx(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: r = "MuiBox-root",
    generateClassName: o
  } = e, s = hh("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(Dr);
  return /* @__PURE__ */ C.forwardRef(function(c, u) {
    const f = tl(n), {
      className: d,
      component: h = "div",
      ...g
    } = xh(c);
    return /* @__PURE__ */ k(s, {
      as: h,
      ref: u,
      className: ge(d, o ? o(r) : r),
      theme: t && f[t] || f,
      ...g
    });
  });
}
const Fx = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function wt(e, t, n = "Mui") {
  const r = Fx[t];
  return r ? `${n}-${r}` : `${wh.generate(e)}-${t}`;
}
function Et(e, t, n = "Mui") {
  const r = {};
  return t.forEach((o) => {
    r[o] = wt(e, o, n);
  }), r;
}
function Th(e, t = "") {
  return e.displayName || e.name || t;
}
function Of(e, t, n) {
  const r = Th(t);
  return e.displayName || (r !== "" ? `${n}(${r})` : n);
}
function jx(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return Th(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case bn.ForwardRef:
          return Of(e, e.render, "ForwardRef");
        case bn.Memo:
          return Of(e, e.type, "memo");
        default:
          return;
      }
  }
}
function Eh(e) {
  const {
    variants: t,
    ...n
  } = e, r = {
    variants: t,
    style: vf(n),
    isProcessed: !0
  };
  return r.style === n || t && t.forEach((o) => {
    typeof o.style != "function" && (o.style = vf(o.style));
  }), r;
}
const Lx = el();
function Xl(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function Vx(e) {
  return e ? (t, n) => n[e] : null;
}
function zx(e, t, n) {
  e.theme = Hx(e.theme) ? n : e.theme[t] || e.theme;
}
function ea(e, t) {
  const n = typeof t == "function" ? t(e) : t;
  if (Array.isArray(n))
    return n.flatMap((r) => ea(e, r));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    let r;
    if (n.isProcessed)
      r = n.style;
    else {
      const {
        variants: o,
        ...s
      } = n;
      r = s;
    }
    return Ch(e, n.variants, [r]);
  }
  return n != null && n.isProcessed ? n.style : n;
}
function Ch(e, t, n = []) {
  var o;
  let r;
  e: for (let s = 0; s < t.length; s += 1) {
    const a = t[s];
    if (typeof a.props == "function") {
      if (r ?? (r = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !a.props(r))
        continue;
    } else
      for (const l in a.props)
        if (e[l] !== a.props[l] && ((o = e.ownerState) == null ? void 0 : o[l]) !== a.props[l])
          continue e;
    typeof a.style == "function" ? (r ?? (r = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(a.style(r))) : n.push(a.style);
  }
  return n;
}
function Oh(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = Lx,
    rootShouldForwardProp: r = Xl,
    slotShouldForwardProp: o = Xl
  } = e;
  function s(l) {
    zx(l, t, n);
  }
  return (l, c = {}) => {
    N0(l, (x) => x.filter((T) => T !== Dr));
    const {
      name: u,
      slot: f,
      skipVariantsResolver: d,
      skipSx: h,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: g = Vx(Rh(f)),
      ...y
    } = c, m = d !== void 0 ? d : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      f && f !== "Root" && f !== "root" || !1
    ), b = h || !1;
    let v = Xl;
    f === "Root" || f === "root" ? v = r : f ? v = o : qx(l) && (v = void 0);
    const E = hh(l, {
      shouldForwardProp: v,
      label: Ux(u, f),
      ...y
    }), S = (x) => {
      if (typeof x == "function" && x.__emotion_real !== x)
        return function(R) {
          return ea(R, x);
        };
      if (Qn(x)) {
        const T = Eh(x);
        return T.variants ? function(I) {
          return ea(I, T);
        } : T.style;
      }
      return x;
    }, w = (...x) => {
      const T = [], R = x.map(S), I = [];
      if (T.push(s), u && g && I.push(function($) {
        var _, L;
        const D = (L = (_ = $.theme.components) == null ? void 0 : _[u]) == null ? void 0 : L.styleOverrides;
        if (!D)
          return null;
        const M = {};
        for (const U in D)
          M[U] = ea($, D[U]);
        return g($, M);
      }), u && !m && I.push(function($) {
        var M, _;
        const A = $.theme, D = (_ = (M = A == null ? void 0 : A.components) == null ? void 0 : M[u]) == null ? void 0 : _.variants;
        return D ? Ch($, D) : null;
      }), b || I.push(Dr), Array.isArray(R[0])) {
        const O = R.shift(), $ = new Array(T.length).fill(""), A = new Array(I.length).fill("");
        let D;
        D = [...$, ...O, ...A], D.raw = [...$, ...O.raw, ...A], T.unshift(D);
      }
      const N = [...T, ...R, ...I], p = E(...N);
      return l.muiName && (p.muiName = l.muiName), process.env.NODE_ENV !== "production" && (p.displayName = Wx(u, f, l)), p;
    };
    return E.withConfig && (w.withConfig = E.withConfig), w;
  };
}
function Wx(e, t, n) {
  return e ? `${e}${ve(t || "")}` : `Styled(${jx(n)})`;
}
function Ux(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${Rh(t || "Root")}`), n;
}
function Hx(e) {
  for (const t in e)
    return !1;
  return !0;
}
function qx(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function Rh(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
const Gx = Oh();
function Li(e, t) {
  const n = {
    ...t
  };
  for (const r in e)
    if (Object.prototype.hasOwnProperty.call(e, r)) {
      const o = r;
      if (o === "components" || o === "slots")
        n[o] = {
          ...e[o],
          ...n[o]
        };
      else if (o === "componentsProps" || o === "slotProps") {
        const s = e[o], a = t[o];
        if (!a)
          n[o] = s || {};
        else if (!s)
          n[o] = a;
        else {
          n[o] = {
            ...a
          };
          for (const l in s)
            if (Object.prototype.hasOwnProperty.call(s, l)) {
              const c = l;
              n[o][c] = Li(s[c], a[c]);
            }
        }
      } else n[o] === void 0 && (n[o] = e[o]);
    }
  return n;
}
function $h(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  return !t || !t.components || !t.components[n] || !t.components[n].defaultProps ? r : Li(t.components[n].defaultProps, r);
}
function Yx({
  props: e,
  name: t,
  defaultTheme: n,
  themeId: r
}) {
  let o = tl(n);
  return r && (o = o[r] || o), $h({
    theme: o,
    name: t,
    props: e
  });
}
const ir = typeof window < "u" ? C.useLayoutEffect : C.useEffect;
function Kx(e, t, n, r, o) {
  const [s, a] = C.useState(() => o && n ? n(e).matches : r ? r(e).matches : t);
  return ir(() => {
    if (!n)
      return;
    const l = n(e), c = () => {
      a(l.matches);
    };
    return c(), l.addEventListener("change", c), () => {
      l.removeEventListener("change", c);
    };
  }, [e, n]), s;
}
const Xx = {
  ...C
}, kh = Xx.useSyncExternalStore;
function Qx(e, t, n, r, o) {
  const s = C.useCallback(() => t, [t]), a = C.useMemo(() => {
    if (o && n)
      return () => n(e).matches;
    if (r !== null) {
      const {
        matches: f
      } = r(e);
      return () => f;
    }
    return s;
  }, [s, e, r, o, n]), [l, c] = C.useMemo(() => {
    if (n === null)
      return [s, () => () => {
      }];
    const f = n(e);
    return [() => f.matches, (d) => (f.addEventListener("change", d), () => {
      f.removeEventListener("change", d);
    })];
  }, [s, n, e]);
  return kh(c, l, a);
}
function Ih(e = {}) {
  const {
    themeId: t
  } = e;
  return function(r, o = {}) {
    let s = Nu();
    s && t && (s = s[t] || s);
    const a = typeof window < "u" && typeof window.matchMedia < "u", {
      defaultMatches: l = !1,
      matchMedia: c = a ? window.matchMedia : null,
      ssrMatchMedia: u = null,
      noSsr: f = !1
    } = $h({
      name: "MuiUseMediaQuery",
      props: o,
      theme: s
    });
    process.env.NODE_ENV !== "production" && typeof r == "function" && s === null && console.error(["MUI: The `query` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join(`
`));
    let d = typeof r == "function" ? r(s) : r;
    d = d.replace(/^@media( ?)/m, "");
    const g = (kh !== void 0 ? Qx : Kx)(d, l, c, u, f);
    return process.env.NODE_ENV !== "production" && C.useDebugValue({
      query: d,
      match: g
    }), g;
  };
}
Ih();
function Jx(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function Au(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), Jx(e, t, n);
}
function Zx(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((r) => r + r)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((r, o) => o < 3 ? parseInt(r, 16) : Math.round(parseInt(r, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function Br(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return Br(Zx(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : yr(9, e));
  let r = e.substring(t + 1, e.length - 1), o;
  if (n === "color") {
    if (r = r.split(" "), o = r.shift(), r.length === 4 && r[3].charAt(0) === "/" && (r[3] = r[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(o))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${o}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : yr(10, o));
  } else
    r = r.split(",");
  return r = r.map((s) => parseFloat(s)), {
    type: n,
    values: r,
    colorSpace: o
  };
}
const ew = (e) => {
  const t = Br(e);
  return t.values.slice(0, 3).map((n, r) => t.type.includes("hsl") && r !== 0 ? `${n}%` : n).join(" ");
}, bi = (e, t) => {
  try {
    return ew(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function nl(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: r
  } = e;
  return t.includes("rgb") ? r = r.map((o, s) => s < 3 ? parseInt(o, 10) : o) : t.includes("hsl") && (r[1] = `${r[1]}%`, r[2] = `${r[2]}%`), t.includes("color") ? r = `${n} ${r.join(" ")}` : r = `${r.join(", ")}`, `${t}(${r})`;
}
function Ph(e) {
  e = Br(e);
  const {
    values: t
  } = e, n = t[0], r = t[1] / 100, o = t[2] / 100, s = r * Math.min(o, 1 - o), a = (u, f = (u + n / 30) % 12) => o - s * Math.max(Math.min(f - 3, 9 - f, 1), -1);
  let l = "rgb";
  const c = [Math.round(a(0) * 255), Math.round(a(8) * 255), Math.round(a(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), nl({
    type: l,
    values: c
  });
}
function Ac(e) {
  e = Br(e);
  let t = e.type === "hsl" || e.type === "hsla" ? Br(Ph(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function Rf(e, t) {
  const n = Ac(e), r = Ac(t);
  return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
}
function Vt(e, t) {
  return e = Br(e), t = Au(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, nl(e);
}
function Ns(e, t, n) {
  try {
    return Vt(e, t);
  } catch {
    return e;
  }
}
function ss(e, t) {
  if (e = Br(e), t = Au(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return nl(e);
}
function nt(e, t, n) {
  try {
    return ss(e, t);
  } catch {
    return e;
  }
}
function as(e, t) {
  if (e = Br(e), t = Au(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return nl(e);
}
function rt(e, t, n) {
  try {
    return as(e, t);
  } catch {
    return e;
  }
}
function tw(e, t = 0.15) {
  return Ac(e) > 0.5 ? ss(e, t) : as(e, t);
}
function As(e, t, n) {
  try {
    return tw(e, t);
  } catch {
    return e;
  }
}
function Vr(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...r) {
    return e(...r) || t(...r);
  };
}
function nw(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function Nh(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = s.type;
  return typeof c == "function" && !nw(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const zr = Vr(i.element, Nh);
zr.isRequired = Vr(i.element.isRequired, Nh);
function rw(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function ow(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof s == "function" && !rw(s) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Mu = Vr(i.elementType, ow), iw = "exact-prop: ​";
function ls(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [iw]: (t) => {
      const n = Object.keys(t).filter((r) => !e.hasOwnProperty(r));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((r) => `\`${r}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
function vr(e, t, n, r, o) {
  if (process.env.NODE_ENV === "production")
    return null;
  const s = e[t], a = o || t;
  return s == null ? null : s && s.nodeType !== 1 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
const Or = i.oneOfType([i.func, i.object]);
function Mc(...e) {
  return e.reduce((t, n) => n == null ? t : function(...o) {
    t.apply(this, o), n.apply(this, o);
  }, () => {
  });
}
function _u(e, t = 166) {
  let n;
  function r(...o) {
    const s = () => {
      e.apply(this, o);
    };
    clearTimeout(n), n = setTimeout(s, t);
  }
  return r.clear = () => {
    clearTimeout(n);
  }, r;
}
function on(e) {
  return e && e.ownerDocument || document;
}
function sr(e) {
  return on(e).defaultView || window;
}
function _c(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
let $f = 0;
function sw(e) {
  const [t, n] = C.useState(e), r = e || t;
  return C.useEffect(() => {
    t == null && ($f += 1, n(`mui-${$f}`));
  }, [t]), r;
}
const aw = {
  ...C
}, kf = aw.useId;
function Du(e) {
  if (kf !== void 0) {
    const t = kf();
    return e ?? t;
  }
  return sw(e);
}
function Ah({
  controlled: e,
  default: t,
  name: n,
  state: r = "value"
}) {
  const {
    current: o
  } = C.useRef(e !== void 0), [s, a] = C.useState(t), l = o ? e : s;
  if (process.env.NODE_ENV !== "production") {
    C.useEffect(() => {
      o !== (e !== void 0) && console.error([`MUI: A component is changing the ${o ? "" : "un"}controlled ${r} state of ${n} to be ${o ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [r, n, e]);
    const {
      current: u
    } = C.useRef(t);
    C.useEffect(() => {
      !o && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${r} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = C.useCallback((u) => {
    o || a(u);
  }, []);
  return [l, c];
}
function tr(e) {
  const t = C.useRef(e);
  return ir(() => {
    t.current = e;
  }), C.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function Kt(...e) {
  return C.useMemo(() => e.every((t) => t == null) ? null : (t) => {
    e.forEach((n) => {
      _c(n, t);
    });
  }, e);
}
const If = {};
function Mh(e, t) {
  const n = C.useRef(If);
  return n.current === If && (n.current = e(t)), n;
}
const lw = [];
function cw(e) {
  C.useEffect(e, lw);
}
let _h = class Dh {
  constructor() {
    $r(this, "currentId", null);
    $r(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    $r(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new Dh();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
};
function Io() {
  const e = Mh(_h.create).current;
  return cw(e.disposeEffect), e;
}
function pa(e) {
  try {
    return e.matches(":focus-visible");
  } catch {
    process.env.NODE_ENV !== "production" && !/jsdom/.test(window.navigator.userAgent) && console.warn(["MUI: The `:focus-visible` pseudo class is not supported in this browser.", "Some components rely on this feature to work properly."].join(`
`));
  }
  return !1;
}
function uw(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
function dw(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function Bh(e, t, n, r) {
  const o = e[t];
  if (o == null || !Number.isInteger(o)) {
    const s = dw(o);
    return new RangeError(`Invalid ${r} \`${t}\` of type \`${s}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function Fh(e, t, ...n) {
  return e[t] === void 0 ? null : Bh(e, t, ...n);
}
function Dc() {
  return null;
}
Fh.isRequired = Bh;
Dc.isRequired = Dc;
const Bu = process.env.NODE_ENV === "production" ? Dc : Fh;
function Pt(e, t, n = void 0) {
  const r = {};
  for (const o in e) {
    const s = e[o];
    let a = "", l = !0;
    for (let c = 0; c < s.length; c += 1) {
      const u = s[c];
      u && (a += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (a += " " + n[u]));
    }
    r[o] = a;
  }
  return r;
}
function fw(e) {
  return typeof e == "string";
}
function jh(e, t, n) {
  return e === void 0 || fw(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function Lh(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((r) => r.match(/^on[A-Z]/) && typeof e[r] == "function" && !t.includes(r)).forEach((r) => {
    n[r] = e[r];
  }), n;
}
function Pf(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function Vh(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: r,
    externalForwardedProps: o,
    className: s
  } = e;
  if (!t) {
    const g = ge(n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), y = {
      ...n == null ? void 0 : n.style,
      ...o == null ? void 0 : o.style,
      ...r == null ? void 0 : r.style
    }, m = {
      ...n,
      ...o,
      ...r
    };
    return g.length > 0 && (m.className = g), Object.keys(y).length > 0 && (m.style = y), {
      props: m,
      internalRef: void 0
    };
  }
  const a = Lh({
    ...o,
    ...r
  }), l = Pf(r), c = Pf(o), u = t(a), f = ge(u == null ? void 0 : u.className, n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), d = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...o == null ? void 0 : o.style,
    ...r == null ? void 0 : r.style
  }, h = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return f.length > 0 && (h.className = f), Object.keys(d).length > 0 && (h.style = d), {
    props: h,
    internalRef: u.ref
  };
}
function zh(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function pw(e) {
  var d;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: r,
    skipResolvingSlotProps: o = !1,
    ...s
  } = e, a = o ? {} : zh(n, r), {
    props: l,
    internalRef: c
  } = Vh({
    ...s,
    externalSlotProps: a
  }), u = Kt(c, a == null ? void 0 : a.ref, (d = e.additionalProps) == null ? void 0 : d.ref);
  return jh(t, {
    ...l,
    ref: u
  }, r);
}
function uo(e) {
  var t;
  return parseInt(C.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
const Fu = /* @__PURE__ */ C.createContext(null);
process.env.NODE_ENV !== "production" && (Fu.displayName = "ThemeContext");
function ju() {
  const e = C.useContext(Fu);
  return process.env.NODE_ENV !== "production" && C.useDebugValue(e), e;
}
const mw = typeof Symbol == "function" && Symbol.for, hw = mw ? Symbol.for("mui.nested") : "__THEME_NESTED__";
function gw(e, t) {
  if (typeof t == "function") {
    const n = t(e);
    return process.env.NODE_ENV !== "production" && (n || console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join(`
`))), n;
  }
  return {
    ...e,
    ...t
  };
}
function ma(e) {
  const {
    children: t,
    theme: n
  } = e, r = ju();
  process.env.NODE_ENV !== "production" && r === null && typeof n == "function" && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const o = C.useMemo(() => {
    const s = r === null ? {
      ...n
    } : gw(r, n);
    return s != null && (s[hw] = r !== null), s;
  }, [n, r]);
  return /* @__PURE__ */ k(Fu.Provider, {
    value: o,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (ma.propTypes = {
  /**
   * Your component tree.
   */
  children: i.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: i.oneOfType([i.object, i.func]).isRequired
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (ma.propTypes = ls(ma.propTypes));
const Wh = /* @__PURE__ */ C.createContext();
function Uh({
  value: e,
  ...t
}) {
  return /* @__PURE__ */ k(Wh.Provider, {
    value: e ?? !0,
    ...t
  });
}
process.env.NODE_ENV !== "production" && (Uh.propTypes = {
  children: i.node,
  value: i.bool
});
const Lu = () => C.useContext(Wh) ?? !1, Hh = /* @__PURE__ */ C.createContext(void 0);
function qh({
  value: e,
  children: t
}) {
  return /* @__PURE__ */ k(Hh.Provider, {
    value: e,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (qh.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * @ignore
   */
  value: i.object
});
function yw(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  if (!t || !t.components || !t.components[n])
    return r;
  const o = t.components[n];
  return o.defaultProps ? Li(o.defaultProps, r) : !o.styleOverrides && !o.variants ? Li(o, r) : r;
}
function bw({
  props: e,
  name: t
}) {
  const n = C.useContext(Hh);
  return yw({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const Nf = {};
function Af(e, t, n, r = !1) {
  return C.useMemo(() => {
    const o = e && t[e] || t;
    if (typeof n == "function") {
      const s = n(o), a = e ? {
        ...t,
        [e]: s
      } : s;
      return r ? () => a : a;
    }
    return e ? {
      ...t,
      [e]: n
    } : {
      ...t,
      ...n
    };
  }, [e, t, n, r]);
}
function Vi(e) {
  const {
    children: t,
    theme: n,
    themeId: r
  } = e, o = Nu(Nf), s = ju() || Nf;
  process.env.NODE_ENV !== "production" && (o === null && typeof n == "function" || r && o && !o[r] && typeof n == "function") && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const a = Af(r, o, n), l = Af(r, s, n, !0), c = (r ? a[r] : a).direction === "rtl";
  return /* @__PURE__ */ k(ma, {
    theme: l,
    children: /* @__PURE__ */ k(Qo.Provider, {
      value: a,
      children: /* @__PURE__ */ k(Uh, {
        value: c,
        children: /* @__PURE__ */ k(qh, {
          value: r ? a[r].components : a.components,
          children: t
        })
      })
    })
  });
}
process.env.NODE_ENV !== "production" && (Vi.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Your component tree.
   */
  children: i.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: i.oneOfType([i.func, i.object]).isRequired,
  /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */
  themeId: i.string
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (Vi.propTypes = ls(Vi.propTypes));
const Mf = {
  theme: void 0
};
function vw(e) {
  let t, n;
  return function(o) {
    let s = t;
    return (s === void 0 || o.theme !== n) && (Mf.theme = o.theme, s = Eh(e(Mf)), t = s, n = o.theme), s;
  };
}
const Vu = "mode", zu = "color-scheme", xw = "data-color-scheme";
function ww(e) {
  const {
    defaultMode: t = "system",
    defaultLightColorScheme: n = "light",
    defaultDarkColorScheme: r = "dark",
    modeStorageKey: o = Vu,
    colorSchemeStorageKey: s = zu,
    attribute: a = xw,
    colorSchemeNode: l = "document.documentElement",
    nonce: c
  } = e || {};
  let u = "", f = a;
  if (a === "class" && (f = ".%s"), a === "data" && (f = "[data-%s]"), f.startsWith(".")) {
    const h = f.substring(1);
    u += `${l}.classList.remove('${h}'.replace('%s', light), '${h}'.replace('%s', dark));
      ${l}.classList.add('${h}'.replace('%s', colorScheme));`;
  }
  const d = f.match(/\[([^\]]+)\]/);
  if (d) {
    const [h, g] = d[1].split("=");
    g || (u += `${l}.removeAttribute('${h}'.replace('%s', light));
      ${l}.removeAttribute('${h}'.replace('%s', dark));`), u += `
      ${l}.setAttribute('${h}'.replace('%s', colorScheme), ${g ? `${g}.replace('%s', colorScheme)` : '""'});`;
  } else
    u += `${l}.setAttribute('${f}', colorScheme);`;
  return /* @__PURE__ */ k("script", {
    suppressHydrationWarning: !0,
    nonce: typeof window > "u" ? c : "",
    dangerouslySetInnerHTML: {
      __html: `(function() {
try {
  let colorScheme = '';
  const mode = localStorage.getItem('${o}') || '${t}';
  const dark = localStorage.getItem('${s}-dark') || '${r}';
  const light = localStorage.getItem('${s}-light') || '${n}';
  if (mode === 'system') {
    // handle system mode
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = dark
    } else {
      colorScheme = light
    }
  }
  if (mode === 'light') {
    colorScheme = light;
  }
  if (mode === 'dark') {
    colorScheme = dark;
  }
  if (colorScheme) {
    ${u}
  }
} catch(e){}})();`
    }
  }, "mui-color-scheme-init");
}
function Sw() {
}
const Tw = ({
  key: e,
  storageWindow: t
}) => (!t && typeof window < "u" && (t = window), {
  get(n) {
    if (typeof window > "u")
      return;
    if (!t)
      return n;
    let r;
    try {
      r = t.localStorage.getItem(e);
    } catch {
    }
    return r || n;
  },
  set: (n) => {
    if (t)
      try {
        t.localStorage.setItem(e, n);
      } catch {
      }
  },
  subscribe: (n) => {
    if (!t)
      return Sw;
    const r = (o) => {
      const s = o.newValue;
      o.key === e && n(s);
    };
    return t.addEventListener("storage", r), () => {
      t.removeEventListener("storage", r);
    };
  }
});
function Ql() {
}
function _f(e) {
  if (typeof window < "u" && typeof window.matchMedia == "function" && e === "system")
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function Gh(e, t) {
  if (e.mode === "light" || e.mode === "system" && e.systemMode === "light")
    return t("light");
  if (e.mode === "dark" || e.mode === "system" && e.systemMode === "dark")
    return t("dark");
}
function Ew(e) {
  return Gh(e, (t) => {
    if (t === "light")
      return e.lightColorScheme;
    if (t === "dark")
      return e.darkColorScheme;
  });
}
function Cw(e) {
  const {
    defaultMode: t = "light",
    defaultLightColorScheme: n,
    defaultDarkColorScheme: r,
    supportedColorSchemes: o = [],
    modeStorageKey: s = Vu,
    colorSchemeStorageKey: a = zu,
    storageWindow: l = typeof window > "u" ? void 0 : window,
    storageManager: c = Tw,
    noSsr: u = !1
  } = e, f = o.join(","), d = o.length > 1, h = C.useMemo(() => c == null ? void 0 : c({
    key: s,
    storageWindow: l
  }), [c, s, l]), g = C.useMemo(() => c == null ? void 0 : c({
    key: `${a}-light`,
    storageWindow: l
  }), [c, a, l]), y = C.useMemo(() => c == null ? void 0 : c({
    key: `${a}-dark`,
    storageWindow: l
  }), [c, a, l]), [m, b] = C.useState(() => {
    const I = (h == null ? void 0 : h.get(t)) || t, N = (g == null ? void 0 : g.get(n)) || n, p = (y == null ? void 0 : y.get(r)) || r;
    return {
      mode: I,
      systemMode: _f(I),
      lightColorScheme: N,
      darkColorScheme: p
    };
  }), [v, E] = C.useState(u || !d);
  C.useEffect(() => {
    E(!0);
  }, []);
  const S = Ew(m), w = C.useCallback((I) => {
    b((N) => {
      if (I === N.mode)
        return N;
      const p = I ?? t;
      return h == null || h.set(p), {
        ...N,
        mode: p,
        systemMode: _f(p)
      };
    });
  }, [h, t]), x = C.useCallback((I) => {
    I ? typeof I == "string" ? I && !f.includes(I) ? console.error(`\`${I}\` does not exist in \`theme.colorSchemes\`.`) : b((N) => {
      const p = {
        ...N
      };
      return Gh(N, (O) => {
        O === "light" && (g == null || g.set(I), p.lightColorScheme = I), O === "dark" && (y == null || y.set(I), p.darkColorScheme = I);
      }), p;
    }) : b((N) => {
      const p = {
        ...N
      }, O = I.light === null ? n : I.light, $ = I.dark === null ? r : I.dark;
      return O && (f.includes(O) ? (p.lightColorScheme = O, g == null || g.set(O)) : console.error(`\`${O}\` does not exist in \`theme.colorSchemes\`.`)), $ && (f.includes($) ? (p.darkColorScheme = $, y == null || y.set($)) : console.error(`\`${$}\` does not exist in \`theme.colorSchemes\`.`)), p;
    }) : b((N) => (g == null || g.set(n), y == null || y.set(r), {
      ...N,
      lightColorScheme: n,
      darkColorScheme: r
    }));
  }, [f, g, y, n, r]), T = C.useCallback((I) => {
    m.mode === "system" && b((N) => {
      const p = I != null && I.matches ? "dark" : "light";
      return N.systemMode === p ? N : {
        ...N,
        systemMode: p
      };
    });
  }, [m.mode]), R = C.useRef(T);
  return R.current = T, C.useEffect(() => {
    if (typeof window.matchMedia != "function" || !d)
      return;
    const I = (...p) => R.current(...p), N = window.matchMedia("(prefers-color-scheme: dark)");
    return N.addListener(I), I(N), () => {
      N.removeListener(I);
    };
  }, [d]), C.useEffect(() => {
    if (d) {
      const I = (h == null ? void 0 : h.subscribe((O) => {
        (!O || ["light", "dark", "system"].includes(O)) && w(O || t);
      })) || Ql, N = (g == null ? void 0 : g.subscribe((O) => {
        (!O || f.match(O)) && x({
          light: O
        });
      })) || Ql, p = (y == null ? void 0 : y.subscribe((O) => {
        (!O || f.match(O)) && x({
          dark: O
        });
      })) || Ql;
      return () => {
        I(), N(), p();
      };
    }
  }, [x, w, f, t, l, d, h, g, y]), {
    ...m,
    mode: v ? m.mode : void 0,
    systemMode: v ? m.systemMode : void 0,
    colorScheme: v ? S : void 0,
    setMode: w,
    setColorScheme: x
  };
}
const Ow = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function Rw(e) {
  const {
    themeId: t,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: n = {},
    modeStorageKey: r = Vu,
    colorSchemeStorageKey: o = zu,
    disableTransitionOnChange: s = !1,
    defaultColorScheme: a,
    resolveTheme: l
  } = e, c = {
    allColorSchemes: [],
    colorScheme: void 0,
    darkColorScheme: void 0,
    lightColorScheme: void 0,
    mode: void 0,
    setColorScheme: () => {
    },
    setMode: () => {
    },
    systemMode: void 0
  }, u = /* @__PURE__ */ C.createContext(void 0);
  process.env.NODE_ENV !== "production" && (u.displayName = "ColorSchemeContext");
  const f = () => C.useContext(u) || c, d = {}, h = {};
  function g(v) {
    var se, ie, ue, be;
    const {
      children: E,
      theme: S,
      modeStorageKey: w = r,
      colorSchemeStorageKey: x = o,
      disableTransitionOnChange: T = s,
      storageManager: R,
      storageWindow: I = typeof window > "u" ? void 0 : window,
      documentNode: N = typeof document > "u" ? void 0 : document,
      colorSchemeNode: p = typeof document > "u" ? void 0 : document.documentElement,
      disableNestedContext: O = !1,
      disableStyleSheetGeneration: $ = !1,
      defaultMode: A = "system",
      forceThemeRerender: D = !1,
      noSsr: M
    } = v, _ = C.useRef(!1), L = ju(), U = C.useContext(u), z = !!U && !O, j = C.useMemo(() => S || (typeof n == "function" ? n() : n), [S]), V = j[t], K = V || j, {
      colorSchemes: Y = d,
      components: te = h,
      cssVarPrefix: X
    } = K, ee = Object.keys(Y).filter((xe) => !!Y[xe]).join(","), re = C.useMemo(() => ee.split(","), [ee]), q = typeof a == "string" ? a : a.light, Q = typeof a == "string" ? a : a.dark, G = Y[q] && Y[Q] ? A : ((ie = (se = Y[K.defaultColorScheme]) == null ? void 0 : se.palette) == null ? void 0 : ie.mode) || ((ue = K.palette) == null ? void 0 : ue.mode), {
      mode: ne,
      setMode: B,
      systemMode: pe,
      lightColorScheme: ae,
      darkColorScheme: me,
      colorScheme: Me,
      setColorScheme: Re
    } = Cw({
      supportedColorSchemes: re,
      defaultLightColorScheme: q,
      defaultDarkColorScheme: Q,
      modeStorageKey: w,
      colorSchemeStorageKey: x,
      defaultMode: G,
      storageManager: R,
      storageWindow: I,
      noSsr: M
    });
    let Oe = ne, we = Me;
    z && (Oe = U.mode, we = U.colorScheme), process.env.NODE_ENV !== "production" && D && !K.vars && console.warn(["MUI: The `forceThemeRerender` prop should only be used with CSS theme variables.", "Note that it will slow down the app when changing between modes, so only do this when you cannot find a better solution."].join(`
`));
    let Pe = we || K.defaultColorScheme;
    K.vars && !D && (Pe = K.defaultColorScheme);
    const Se = C.useMemo(() => {
      var Le;
      const xe = ((Le = K.generateThemeVars) == null ? void 0 : Le.call(K)) || K.vars, oe = {
        ...K,
        components: te,
        colorSchemes: Y,
        cssVarPrefix: X,
        vars: xe
      };
      if (typeof oe.generateSpacing == "function" && (oe.spacing = oe.generateSpacing()), Pe) {
        const Ve = Y[Pe];
        Ve && typeof Ve == "object" && Object.keys(Ve).forEach((We) => {
          Ve[We] && typeof Ve[We] == "object" ? oe[We] = {
            ...oe[We],
            ...Ve[We]
          } : oe[We] = Ve[We];
        });
      }
      return l ? l(oe) : oe;
    }, [K, Pe, te, Y, X]), P = K.colorSchemeSelector;
    ir(() => {
      if (we && p && P && P !== "media") {
        const xe = P;
        let oe = P;
        if (xe === "class" && (oe = ".%s"), xe === "data" && (oe = "[data-%s]"), xe != null && xe.startsWith("data-") && !xe.includes("%s") && (oe = `[${xe}="%s"]`), oe.startsWith("."))
          p.classList.remove(...re.map((Le) => oe.substring(1).replace("%s", Le))), p.classList.add(oe.substring(1).replace("%s", we));
        else {
          const Le = oe.replace("%s", we).match(/\[([^\]]+)\]/);
          if (Le) {
            const [Ve, We] = Le[1].split("=");
            We || re.forEach((_n) => {
              p.removeAttribute(Ve.replace(we, _n));
            }), p.setAttribute(Ve, We ? We.replace(/"|'/g, "") : "");
          } else
            p.setAttribute(oe, we);
        }
      }
    }, [we, P, p, re]), C.useEffect(() => {
      let xe;
      if (T && _.current && N) {
        const oe = N.createElement("style");
        oe.appendChild(N.createTextNode(Ow)), N.head.appendChild(oe), window.getComputedStyle(N.body), xe = setTimeout(() => {
          N.head.removeChild(oe);
        }, 1);
      }
      return () => {
        clearTimeout(xe);
      };
    }, [we, T, N]), C.useEffect(() => (_.current = !0, () => {
      _.current = !1;
    }), []);
    const W = C.useMemo(() => ({
      allColorSchemes: re,
      colorScheme: we,
      darkColorScheme: me,
      lightColorScheme: ae,
      mode: Oe,
      setColorScheme: Re,
      setMode: process.env.NODE_ENV === "production" ? B : (xe) => {
        Se.colorSchemeSelector === "media" && console.error(["MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).", "To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.", "To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually"].join(`
`)), B(xe);
      },
      systemMode: pe
    }), [re, we, me, ae, Oe, Re, B, pe, Se.colorSchemeSelector]);
    let H = !0;
    ($ || K.cssVariables === !1 || z && (L == null ? void 0 : L.cssVarPrefix) === X) && (H = !1);
    const le = /* @__PURE__ */ Ce(C.Fragment, {
      children: [/* @__PURE__ */ k(Vi, {
        themeId: V ? t : void 0,
        theme: Se,
        children: E
      }), H && /* @__PURE__ */ k(ku, {
        styles: ((be = Se.generateStyleSheets) == null ? void 0 : be.call(Se)) || []
      })]
    });
    return z ? le : /* @__PURE__ */ k(u.Provider, {
      value: W,
      children: le
    });
  }
  process.env.NODE_ENV !== "production" && (g.propTypes = {
    /**
     * The component tree.
     */
    children: i.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: i.any,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: i.string,
    /**
     * The default mode when the storage is empty,
     * require the theme to have `colorSchemes` with light and dark.
     */
    defaultMode: i.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: i.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: i.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes.
     */
    disableTransitionOnChange: i.bool,
    /**
     * The document to attach the attribute to.
     */
    documentNode: i.any,
    /**
     * If `true`, theme values are recalculated when the mode changes.
     */
    forceThemeRerender: i.bool,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: i.string,
    /**
     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.
     * You should use this option in conjuction with `InitColorSchemeScript` component.
     */
    noSsr: i.bool,
    /**
     * The storage manager to be used for storing the mode and color scheme
     * @default using `window.localStorage`
     */
    storageManager: i.func,
    /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */
    storageWindow: i.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: i.object
  });
  const y = typeof a == "string" ? a : a.light, m = typeof a == "string" ? a : a.dark;
  return {
    CssVarsProvider: g,
    useColorScheme: f,
    getInitColorSchemeScript: (v) => ww({
      colorSchemeStorageKey: o,
      defaultLightColorScheme: y,
      defaultDarkColorScheme: m,
      modeStorageKey: r,
      ...v
    })
  };
}
function $w(e = "") {
  function t(...r) {
    if (!r.length)
      return "";
    const o = r[0];
    return typeof o == "string" && !o.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${o}${t(...r.slice(1))})` : `, ${o}`;
  }
  return (r, ...o) => `var(--${e ? `${e}-` : ""}${r}${t(...o)})`;
}
const Df = (e, t, n, r = []) => {
  let o = e;
  t.forEach((s, a) => {
    a === t.length - 1 ? Array.isArray(o) ? o[Number(s)] = n : o && typeof o == "object" && (o[s] = n) : o && typeof o == "object" && (o[s] || (o[s] = r.includes(s) ? [] : {}), o = o[s]);
  });
}, kw = (e, t, n) => {
  function r(o, s = [], a = []) {
    Object.entries(o).forEach(([l, c]) => {
      (!n || n && !n([...s, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? r(c, [...s, l], Array.isArray(c) ? [...a, l] : a) : t([...s, l], c, a));
    });
  }
  r(e);
}, Iw = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((r) => e.includes(r)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function Jl(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: r
  } = t || {}, o = {}, s = {}, a = {};
  return kw(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!r || !r(l, c))) {
        const f = `--${n ? `${n}-` : ""}${l.join("-")}`, d = Iw(l, c);
        Object.assign(o, {
          [f]: d
        }), Df(s, l, `var(${f})`, u), Df(a, l, `var(${f}, ${d})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: o,
    vars: s,
    varsWithDefaults: a
  };
}
function Pw(e, t = {}) {
  const {
    getSelector: n = b,
    disableCssColorScheme: r,
    colorSchemeSelector: o
  } = t, {
    colorSchemes: s = {},
    components: a,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: f,
    varsWithDefaults: d
  } = Jl(c, t);
  let h = d;
  const g = {}, {
    [l]: y,
    ...m
  } = s;
  if (Object.entries(m || {}).forEach(([S, w]) => {
    const {
      vars: x,
      css: T,
      varsWithDefaults: R
    } = Jl(w, t);
    h = hn(h, R), g[S] = {
      css: T,
      vars: x
    };
  }), y) {
    const {
      css: S,
      vars: w,
      varsWithDefaults: x
    } = Jl(y, t);
    h = hn(h, x), g[l] = {
      css: S,
      vars: w
    };
  }
  function b(S, w) {
    var T, R;
    let x = o;
    if (o === "class" && (x = ".%s"), o === "data" && (x = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (x = `[${o}="%s"]`), S) {
      if (x === "media")
        return e.defaultColorScheme === S ? ":root" : {
          [`@media (prefers-color-scheme: ${((R = (T = s[S]) == null ? void 0 : T.palette) == null ? void 0 : R.mode) || S})`]: {
            ":root": w
          }
        };
      if (x)
        return e.defaultColorScheme === S ? `:root, ${x.replace("%s", String(S))}` : x.replace("%s", String(S));
    }
    return ":root";
  }
  return {
    vars: h,
    generateThemeVars: () => {
      let S = {
        ...u
      };
      return Object.entries(g).forEach(([, {
        vars: w
      }]) => {
        S = hn(S, w);
      }), S;
    },
    generateStyleSheets: () => {
      var I, N;
      const S = [], w = e.defaultColorScheme || "light";
      function x(p, O) {
        Object.keys(O).length && S.push(typeof p == "string" ? {
          [p]: {
            ...O
          }
        } : p);
      }
      x(n(void 0, {
        ...f
      }), f);
      const {
        [w]: T,
        ...R
      } = g;
      if (T) {
        const {
          css: p
        } = T, O = (N = (I = s[w]) == null ? void 0 : I.palette) == null ? void 0 : N.mode, $ = !r && O ? {
          colorScheme: O,
          ...p
        } : {
          ...p
        };
        x(n(w, {
          ...$
        }), $);
      }
      return Object.entries(R).forEach(([p, {
        css: O
      }]) => {
        var D, M;
        const $ = (M = (D = s[p]) == null ? void 0 : D.palette) == null ? void 0 : M.mode, A = !r && $ ? {
          colorScheme: $,
          ...O
        } : {
          ...O
        };
        x(n(p, {
          ...A
        }), A);
      }), S;
    }
  };
}
function Nw(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
const Aw = el(), Mw = Gx("div", {
  name: "MuiContainer",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`maxWidth${ve(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
  }
}), _w = (e) => Yx({
  props: e,
  name: "MuiContainer",
  defaultTheme: Aw
}), Dw = (e, t) => {
  const n = (c) => wt(t, c), {
    classes: r,
    fixed: o,
    disableGutters: s,
    maxWidth: a
  } = e, l = {
    root: ["root", a && `maxWidth${ve(String(a))}`, o && "fixed", s && "disableGutters"]
  };
  return Pt(l, n, r);
};
function Bw(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: t = Mw,
    useThemeProps: n = _w,
    componentName: r = "MuiContainer"
  } = e, o = t(({
    theme: a,
    ownerState: l
  }) => ({
    width: "100%",
    marginLeft: "auto",
    boxSizing: "border-box",
    marginRight: "auto",
    ...!l.disableGutters && {
      paddingLeft: a.spacing(2),
      paddingRight: a.spacing(2),
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up("sm")]: {
        paddingLeft: a.spacing(3),
        paddingRight: a.spacing(3)
      }
    }
  }), ({
    theme: a,
    ownerState: l
  }) => l.fixed && Object.keys(a.breakpoints.values).reduce((c, u) => {
    const f = u, d = a.breakpoints.values[f];
    return d !== 0 && (c[a.breakpoints.up(f)] = {
      maxWidth: `${d}${a.breakpoints.unit}`
    }), c;
  }, {}), ({
    theme: a,
    ownerState: l
  }) => ({
    // @ts-ignore module augmentation fails if custom breakpoints are used
    ...l.maxWidth === "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up("xs")]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: Math.max(a.breakpoints.values.xs, 444)
      }
    },
    ...l.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used
    l.maxWidth !== "xs" && {
      // @ts-ignore module augmentation fails if custom breakpoints are used
      [a.breakpoints.up(l.maxWidth)]: {
        // @ts-ignore module augmentation fails if custom breakpoints are used
        maxWidth: `${a.breakpoints.values[l.maxWidth]}${a.breakpoints.unit}`
      }
    }
  })), s = /* @__PURE__ */ C.forwardRef(function(l, c) {
    const u = n(l), {
      className: f,
      component: d = "div",
      disableGutters: h = !1,
      fixed: g = !1,
      maxWidth: y = "lg",
      classes: m,
      ...b
    } = u, v = {
      ...u,
      component: d,
      disableGutters: h,
      fixed: g,
      maxWidth: y
    }, E = Dw(v, r);
    return (
      // @ts-ignore theme is injected by the styled util
      /* @__PURE__ */ k(o, {
        as: d,
        ownerState: v,
        className: ge(E.root, f),
        ref: c,
        ...b
      })
    );
  });
  return process.env.NODE_ENV !== "production" && (s.propTypes = {
    children: i.node,
    classes: i.object,
    className: i.string,
    component: i.elementType,
    disableGutters: i.bool,
    fixed: i.bool,
    maxWidth: i.oneOfType([i.oneOf(["xs", "sm", "md", "lg", "xl", !1]), i.string]),
    sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
  }), s;
}
function Yh() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: Di.white,
      default: Di.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const Fw = Yh();
function Kh() {
  return {
    text: {
      primary: Di.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: Di.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const Bf = Kh();
function Ff(e, t, n, r) {
  const o = r.light || r, s = r.dark || r * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = as(e.main, o) : t === "dark" && (e.dark = ss(e.main, s)));
}
function jw(e = "light") {
  return e === "dark" ? {
    main: yo[200],
    light: yo[50],
    dark: yo[400]
  } : {
    main: yo[700],
    light: yo[400],
    dark: yo[800]
  };
}
function Lw(e = "light") {
  return e === "dark" ? {
    main: go[200],
    light: go[50],
    dark: go[400]
  } : {
    main: go[500],
    light: go[300],
    dark: go[700]
  };
}
function Vw(e = "light") {
  return e === "dark" ? {
    main: ho[500],
    light: ho[300],
    dark: ho[700]
  } : {
    main: ho[700],
    light: ho[400],
    dark: ho[800]
  };
}
function zw(e = "light") {
  return e === "dark" ? {
    main: bo[400],
    light: bo[300],
    dark: bo[700]
  } : {
    main: bo[700],
    light: bo[500],
    dark: bo[900]
  };
}
function Ww(e = "light") {
  return e === "dark" ? {
    main: vo[400],
    light: vo[300],
    dark: vo[700]
  } : {
    main: vo[800],
    light: vo[500],
    dark: vo[900]
  };
}
function Uw(e = "light") {
  return e === "dark" ? {
    main: oi[400],
    light: oi[300],
    dark: oi[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: oi[500],
    dark: oi[900]
  };
}
function Wu(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: r = 0.2,
    ...o
  } = e, s = e.primary || jw(t), a = e.secondary || Lw(t), l = e.error || Vw(t), c = e.info || zw(t), u = e.success || Ww(t), f = e.warning || Uw(t);
  function d(m) {
    const b = Rf(m, Bf.text.primary) >= n ? Bf.text.primary : Fw.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const v = Rf(m, b);
      v < 3 && console.error([`MUI: The contrast ratio of ${v}:1 for ${b} on ${m}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return b;
  }
  const h = ({
    color: m,
    name: b,
    mainShade: v = 500,
    lightShade: E = 300,
    darkShade: S = 700
  }) => {
    if (m = {
      ...m
    }, !m.main && m[v] && (m.main = m[v]), !m.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${v}\` property.` : yr(11, b ? ` (${b})` : "", v));
    if (typeof m.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(m.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : yr(12, b ? ` (${b})` : "", JSON.stringify(m.main)));
    return Ff(m, "light", E, r), Ff(m, "dark", S, r), m.contrastText || (m.contrastText = d(m.main)), m;
  };
  let g;
  return t === "light" ? g = Yh() : t === "dark" && (g = Kh()), process.env.NODE_ENV !== "production" && (g || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), hn({
    // A collection of common colors.
    common: {
      ...Di
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: h({
      color: s,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: h({
      color: a,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: h({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: h({
      color: f,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: h({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: h({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: Ev,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: d,
    // Generate a rich color object.
    augmentColor: h,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: r,
    // The light and dark mode object.
    ...g
  }, o);
}
function Hw(e) {
  const t = {};
  return Object.entries(e).forEach((r) => {
    const [o, s] = r;
    typeof s == "object" && (t[o] = `${s.fontStyle ? `${s.fontStyle} ` : ""}${s.fontVariant ? `${s.fontVariant} ` : ""}${s.fontWeight ? `${s.fontWeight} ` : ""}${s.fontStretch ? `${s.fontStretch} ` : ""}${s.fontSize || ""}${s.lineHeight ? `/${s.lineHeight} ` : ""}${s.fontFamily || ""}`);
  }), t;
}
function qw(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function Gw(e) {
  return Math.round(e * 1e5) / 1e5;
}
const jf = {
  textTransform: "uppercase"
}, Lf = '"Roboto", "Helvetica", "Arial", sans-serif';
function Xh(e, t) {
  const {
    fontFamily: n = Lf,
    // The default font size of the Material Specification.
    fontSize: r = 14,
    // px
    fontWeightLight: o = 300,
    fontWeightRegular: s = 400,
    fontWeightMedium: a = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: f,
    ...d
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof r != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const h = r / 14, g = f || ((b) => `${b / c * h}rem`), y = (b, v, E, S, w) => ({
    fontFamily: n,
    fontWeight: b,
    fontSize: g(v),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: E,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === Lf ? {
      letterSpacing: `${Gw(S / v)}em`
    } : {},
    ...w,
    ...u
  }), m = {
    h1: y(o, 96, 1.167, -1.5),
    h2: y(o, 60, 1.2, -0.5),
    h3: y(s, 48, 1.167, 0),
    h4: y(s, 34, 1.235, 0.25),
    h5: y(s, 24, 1.334, 0),
    h6: y(a, 20, 1.6, 0.15),
    subtitle1: y(s, 16, 1.75, 0.15),
    subtitle2: y(a, 14, 1.57, 0.1),
    body1: y(s, 16, 1.5, 0.15),
    body2: y(s, 14, 1.43, 0.15),
    button: y(a, 14, 1.75, 0.4, jf),
    caption: y(s, 12, 1.66, 0.4),
    overline: y(s, 12, 2.66, 1, jf),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return hn({
    htmlFontSize: c,
    pxToRem: g,
    fontFamily: n,
    fontSize: r,
    fontWeightLight: o,
    fontWeightRegular: s,
    fontWeightMedium: a,
    fontWeightBold: l,
    ...m
  }, d, {
    clone: !1
    // No need to clone deep
  });
}
const Yw = 0.2, Kw = 0.14, Xw = 0.12;
function ft(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${Yw})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${Kw})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${Xw})`].join(",");
}
const Qw = ["none", ft(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), ft(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), ft(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), ft(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), ft(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), ft(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), ft(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), ft(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), ft(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), ft(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), ft(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), ft(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), ft(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), ft(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), ft(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), ft(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), ft(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), ft(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), ft(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), ft(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), ft(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), ft(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), ft(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), ft(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], Jw = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, Zw = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function Vf(e) {
  return `${Math.round(e)}ms`;
}
function eS(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function tS(e) {
  const t = {
    ...Jw,
    ...e.easing
  }, n = {
    ...Zw,
    ...e.duration
  };
  return {
    getAutoHeightDuration: eS,
    create: (o = ["all"], s = {}) => {
      const {
        duration: a = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = s;
      if (process.env.NODE_ENV !== "production") {
        const f = (h) => typeof h == "string", d = (h) => !Number.isNaN(parseFloat(h));
        !f(o) && !Array.isArray(o) && console.error('MUI: Argument "props" must be a string or Array.'), !d(a) && !f(a) && console.error(`MUI: Argument "duration" must be a number or a string but found ${a}.`), f(l) || console.error('MUI: Argument "easing" must be a string.'), !d(c) && !f(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof s != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(o) ? o : [o]).map((f) => `${f} ${typeof a == "string" ? a : Vf(a)} ${l} ${typeof c == "string" ? c : Vf(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const nS = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function rS(e) {
  return Qn(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function Qh(e = {}) {
  const t = {
    ...e
  };
  function n(r) {
    const o = Object.entries(r);
    for (let s = 0; s < o.length; s++) {
      const [a, l] = o[s];
      !rS(l) || a.startsWith("unstable_") ? delete r[a] : Qn(l) && (r[a] = {
        ...l
      }, n(r[a]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function Bc(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: r = {},
    spacing: o,
    palette: s = {},
    transitions: a = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : yr(20));
  const f = Wu(s), d = el(e);
  let h = hn(d, {
    mixins: qw(d.breakpoints, r),
    palette: f,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: Qw.slice(),
    typography: Xh(f, l),
    transitions: tS(a),
    zIndex: {
      ...nS
    }
  });
  if (h = hn(h, u), h = t.reduce((g, y) => hn(g, y), h), process.env.NODE_ENV !== "production") {
    const g = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], y = (m, b) => {
      let v;
      for (v in m) {
        const E = m[v];
        if (g.includes(v) && Object.keys(E).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const S = wt("", v);
            console.error([`MUI: The \`${b}\` component increases the CSS specificity of the \`${v}\` internal state.`, "You can not override it like this: ", JSON.stringify(m, null, 2), "", `Instead, you need to use the '&.${S}' syntax:`, JSON.stringify({
              root: {
                [`&.${S}`]: E
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          m[v] = {};
        }
      }
    };
    Object.keys(h.components).forEach((m) => {
      const b = h.components[m].styleOverrides;
      b && m.startsWith("Mui") && y(b, m);
    });
  }
  return h.unstable_sxConfig = {
    ...is,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, h.unstable_sx = function(y) {
    return Dr({
      sx: y,
      theme: this
    });
  }, h.toRuntimeSource = Qh, h;
}
function Fc(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const oS = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = Fc(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function Jh(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function Zh(e) {
  return e === "dark" ? oS : [];
}
function iS(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: r,
    ...o
  } = e, s = Wu(t);
  return {
    palette: s,
    opacity: {
      ...Jh(s.mode),
      ...n
    },
    overlays: r || Zh(s.mode),
    ...o
  };
}
function sS(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const aS = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], lS = (e) => (t, n) => {
  const r = e.rootSelector || ":root", o = e.colorSchemeSelector;
  let s = o;
  if (o === "class" && (s = ".%s"), o === "data" && (s = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (s = `[${o}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const a = {};
      return aS(e.cssVarPrefix).forEach((l) => {
        a[l] = n[l], delete n[l];
      }), s === "media" ? {
        [r]: n,
        "@media (prefers-color-scheme: dark)": {
          [r]: a
        }
      } : s ? {
        [s.replace("%s", t)]: a,
        [`${r}, ${s.replace("%s", t)}`]: n
      } : {
        [r]: {
          ...n,
          ...a
        }
      };
    }
    if (s && s !== "media")
      return `${r}, ${s.replace("%s", String(t))}`;
  } else if (t) {
    if (s === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [r]: n
        }
      };
    if (s)
      return s.replace("%s", String(t));
  }
  return r;
};
function cS(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function J(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function vi(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : Ph(e);
}
function pr(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = bi(vi(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function uS(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const Wn = (e) => {
  try {
    return e();
  } catch {
  }
}, dS = (e = "mui") => $w(e);
function Zl(e, t, n, r) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const o = r === "dark" ? "dark" : "light";
  if (!n) {
    e[r] = iS({
      ...t,
      palette: {
        mode: o,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: s,
    ...a
  } = Bc({
    ...n,
    palette: {
      mode: o,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[r] = {
    ...t,
    palette: s,
    opacity: {
      ...Jh(o),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || Zh(o)
  }, a;
}
function fS(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: r,
    disableCssColorScheme: o = !1,
    cssVarPrefix: s = "mui",
    shouldSkipGeneratingVar: a = sS,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    rootSelector: c = ":root",
    ...u
  } = e, f = Object.keys(n)[0], d = r || (n.light && f !== "light" ? "light" : f), h = dS(s), {
    [d]: g,
    light: y,
    dark: m,
    ...b
  } = n, v = {
    ...b
  };
  let E = g;
  if ((d === "dark" && !("dark" in n) || d === "light" && !("light" in n)) && (E = !0), !E)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${d}\` option is either missing or invalid.` : yr(21, d));
  const S = Zl(v, E, u, d);
  y && !v.light && Zl(v, y, void 0, "light"), m && !v.dark && Zl(v, m, void 0, "dark");
  let w = {
    defaultColorScheme: d,
    ...S,
    cssVarPrefix: s,
    colorSchemeSelector: l,
    rootSelector: c,
    getCssVar: h,
    colorSchemes: v,
    font: {
      ...Hw(S.typography),
      ...S.font
    },
    spacing: uS(u.spacing)
  };
  Object.keys(w.colorSchemes).forEach((N) => {
    const p = w.colorSchemes[N].palette, O = ($) => {
      const A = $.split("-"), D = A[1], M = A[2];
      return h($, p[D][M]);
    };
    if (p.mode === "light" && (J(p.common, "background", "#fff"), J(p.common, "onBackground", "#000")), p.mode === "dark" && (J(p.common, "background", "#000"), J(p.common, "onBackground", "#fff")), cS(p, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), p.mode === "light") {
      J(p.Alert, "errorColor", nt(p.error.light, 0.6)), J(p.Alert, "infoColor", nt(p.info.light, 0.6)), J(p.Alert, "successColor", nt(p.success.light, 0.6)), J(p.Alert, "warningColor", nt(p.warning.light, 0.6)), J(p.Alert, "errorFilledBg", O("palette-error-main")), J(p.Alert, "infoFilledBg", O("palette-info-main")), J(p.Alert, "successFilledBg", O("palette-success-main")), J(p.Alert, "warningFilledBg", O("palette-warning-main")), J(p.Alert, "errorFilledColor", Wn(() => p.getContrastText(p.error.main))), J(p.Alert, "infoFilledColor", Wn(() => p.getContrastText(p.info.main))), J(p.Alert, "successFilledColor", Wn(() => p.getContrastText(p.success.main))), J(p.Alert, "warningFilledColor", Wn(() => p.getContrastText(p.warning.main))), J(p.Alert, "errorStandardBg", rt(p.error.light, 0.9)), J(p.Alert, "infoStandardBg", rt(p.info.light, 0.9)), J(p.Alert, "successStandardBg", rt(p.success.light, 0.9)), J(p.Alert, "warningStandardBg", rt(p.warning.light, 0.9)), J(p.Alert, "errorIconColor", O("palette-error-main")), J(p.Alert, "infoIconColor", O("palette-info-main")), J(p.Alert, "successIconColor", O("palette-success-main")), J(p.Alert, "warningIconColor", O("palette-warning-main")), J(p.AppBar, "defaultBg", O("palette-grey-100")), J(p.Avatar, "defaultBg", O("palette-grey-400")), J(p.Button, "inheritContainedBg", O("palette-grey-300")), J(p.Button, "inheritContainedHoverBg", O("palette-grey-A100")), J(p.Chip, "defaultBorder", O("palette-grey-400")), J(p.Chip, "defaultAvatarColor", O("palette-grey-700")), J(p.Chip, "defaultIconColor", O("palette-grey-700")), J(p.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), J(p.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), J(p.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), J(p.LinearProgress, "primaryBg", rt(p.primary.main, 0.62)), J(p.LinearProgress, "secondaryBg", rt(p.secondary.main, 0.62)), J(p.LinearProgress, "errorBg", rt(p.error.main, 0.62)), J(p.LinearProgress, "infoBg", rt(p.info.main, 0.62)), J(p.LinearProgress, "successBg", rt(p.success.main, 0.62)), J(p.LinearProgress, "warningBg", rt(p.warning.main, 0.62)), J(p.Skeleton, "bg", `rgba(${O("palette-text-primaryChannel")} / 0.11)`), J(p.Slider, "primaryTrack", rt(p.primary.main, 0.62)), J(p.Slider, "secondaryTrack", rt(p.secondary.main, 0.62)), J(p.Slider, "errorTrack", rt(p.error.main, 0.62)), J(p.Slider, "infoTrack", rt(p.info.main, 0.62)), J(p.Slider, "successTrack", rt(p.success.main, 0.62)), J(p.Slider, "warningTrack", rt(p.warning.main, 0.62));
      const $ = As(p.background.default, 0.8);
      J(p.SnackbarContent, "bg", $), J(p.SnackbarContent, "color", Wn(() => p.getContrastText($))), J(p.SpeedDialAction, "fabHoverBg", As(p.background.paper, 0.15)), J(p.StepConnector, "border", O("palette-grey-400")), J(p.StepContent, "border", O("palette-grey-400")), J(p.Switch, "defaultColor", O("palette-common-white")), J(p.Switch, "defaultDisabledColor", O("palette-grey-100")), J(p.Switch, "primaryDisabledColor", rt(p.primary.main, 0.62)), J(p.Switch, "secondaryDisabledColor", rt(p.secondary.main, 0.62)), J(p.Switch, "errorDisabledColor", rt(p.error.main, 0.62)), J(p.Switch, "infoDisabledColor", rt(p.info.main, 0.62)), J(p.Switch, "successDisabledColor", rt(p.success.main, 0.62)), J(p.Switch, "warningDisabledColor", rt(p.warning.main, 0.62)), J(p.TableCell, "border", rt(Ns(p.divider, 1), 0.88)), J(p.Tooltip, "bg", Ns(p.grey[700], 0.92));
    }
    if (p.mode === "dark") {
      J(p.Alert, "errorColor", rt(p.error.light, 0.6)), J(p.Alert, "infoColor", rt(p.info.light, 0.6)), J(p.Alert, "successColor", rt(p.success.light, 0.6)), J(p.Alert, "warningColor", rt(p.warning.light, 0.6)), J(p.Alert, "errorFilledBg", O("palette-error-dark")), J(p.Alert, "infoFilledBg", O("palette-info-dark")), J(p.Alert, "successFilledBg", O("palette-success-dark")), J(p.Alert, "warningFilledBg", O("palette-warning-dark")), J(p.Alert, "errorFilledColor", Wn(() => p.getContrastText(p.error.dark))), J(p.Alert, "infoFilledColor", Wn(() => p.getContrastText(p.info.dark))), J(p.Alert, "successFilledColor", Wn(() => p.getContrastText(p.success.dark))), J(p.Alert, "warningFilledColor", Wn(() => p.getContrastText(p.warning.dark))), J(p.Alert, "errorStandardBg", nt(p.error.light, 0.9)), J(p.Alert, "infoStandardBg", nt(p.info.light, 0.9)), J(p.Alert, "successStandardBg", nt(p.success.light, 0.9)), J(p.Alert, "warningStandardBg", nt(p.warning.light, 0.9)), J(p.Alert, "errorIconColor", O("palette-error-main")), J(p.Alert, "infoIconColor", O("palette-info-main")), J(p.Alert, "successIconColor", O("palette-success-main")), J(p.Alert, "warningIconColor", O("palette-warning-main")), J(p.AppBar, "defaultBg", O("palette-grey-900")), J(p.AppBar, "darkBg", O("palette-background-paper")), J(p.AppBar, "darkColor", O("palette-text-primary")), J(p.Avatar, "defaultBg", O("palette-grey-600")), J(p.Button, "inheritContainedBg", O("palette-grey-800")), J(p.Button, "inheritContainedHoverBg", O("palette-grey-700")), J(p.Chip, "defaultBorder", O("palette-grey-700")), J(p.Chip, "defaultAvatarColor", O("palette-grey-300")), J(p.Chip, "defaultIconColor", O("palette-grey-300")), J(p.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), J(p.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), J(p.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), J(p.LinearProgress, "primaryBg", nt(p.primary.main, 0.5)), J(p.LinearProgress, "secondaryBg", nt(p.secondary.main, 0.5)), J(p.LinearProgress, "errorBg", nt(p.error.main, 0.5)), J(p.LinearProgress, "infoBg", nt(p.info.main, 0.5)), J(p.LinearProgress, "successBg", nt(p.success.main, 0.5)), J(p.LinearProgress, "warningBg", nt(p.warning.main, 0.5)), J(p.Skeleton, "bg", `rgba(${O("palette-text-primaryChannel")} / 0.13)`), J(p.Slider, "primaryTrack", nt(p.primary.main, 0.5)), J(p.Slider, "secondaryTrack", nt(p.secondary.main, 0.5)), J(p.Slider, "errorTrack", nt(p.error.main, 0.5)), J(p.Slider, "infoTrack", nt(p.info.main, 0.5)), J(p.Slider, "successTrack", nt(p.success.main, 0.5)), J(p.Slider, "warningTrack", nt(p.warning.main, 0.5));
      const $ = As(p.background.default, 0.98);
      J(p.SnackbarContent, "bg", $), J(p.SnackbarContent, "color", Wn(() => p.getContrastText($))), J(p.SpeedDialAction, "fabHoverBg", As(p.background.paper, 0.15)), J(p.StepConnector, "border", O("palette-grey-600")), J(p.StepContent, "border", O("palette-grey-600")), J(p.Switch, "defaultColor", O("palette-grey-300")), J(p.Switch, "defaultDisabledColor", O("palette-grey-600")), J(p.Switch, "primaryDisabledColor", nt(p.primary.main, 0.55)), J(p.Switch, "secondaryDisabledColor", nt(p.secondary.main, 0.55)), J(p.Switch, "errorDisabledColor", nt(p.error.main, 0.55)), J(p.Switch, "infoDisabledColor", nt(p.info.main, 0.55)), J(p.Switch, "successDisabledColor", nt(p.success.main, 0.55)), J(p.Switch, "warningDisabledColor", nt(p.warning.main, 0.55)), J(p.TableCell, "border", nt(Ns(p.divider, 1), 0.68)), J(p.Tooltip, "bg", Ns(p.grey[700], 0.92));
    }
    pr(p.background, "default"), pr(p.background, "paper"), pr(p.common, "background"), pr(p.common, "onBackground"), pr(p, "divider"), Object.keys(p).forEach(($) => {
      const A = p[$];
      $ !== "tonalOffset" && A && typeof A == "object" && (A.main && J(p[$], "mainChannel", bi(vi(A.main))), A.light && J(p[$], "lightChannel", bi(vi(A.light))), A.dark && J(p[$], "darkChannel", bi(vi(A.dark))), A.contrastText && J(p[$], "contrastTextChannel", bi(vi(A.contrastText))), $ === "text" && (pr(p[$], "primary"), pr(p[$], "secondary")), $ === "action" && (A.active && pr(p[$], "active"), A.selected && pr(p[$], "selected")));
    });
  }), w = t.reduce((N, p) => hn(N, p), w);
  const x = {
    prefix: s,
    disableCssColorScheme: o,
    shouldSkipGeneratingVar: a,
    getSelector: lS(w)
  }, {
    vars: T,
    generateThemeVars: R,
    generateStyleSheets: I
  } = Pw(w, x);
  return w.vars = T, Object.entries(w.colorSchemes[w.defaultColorScheme]).forEach(([N, p]) => {
    w[N] = p;
  }), w.generateThemeVars = R, w.generateStyleSheets = I, w.generateSpacing = function() {
    return bh(u.spacing, Iu(this));
  }, w.getColorSchemeSelector = Nw(l), w.spacing = w.generateSpacing(), w.shouldSkipGeneratingVar = a, w.unstable_sxConfig = {
    ...is,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, w.unstable_sx = function(p) {
    return Dr({
      sx: p,
      theme: this
    });
  }, w.toRuntimeSource = Qh, w;
}
function zf(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: Wu({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function rl(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: r = !1,
    colorSchemes: o = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: s = n == null ? void 0 : n.mode,
    ...a
  } = e, l = s || "light", c = o == null ? void 0 : o[l], u = {
    ...o,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (r === !1) {
    if (!("colorSchemes" in e))
      return Bc(e, ...t);
    let f = n;
    "palette" in e || u[l] && (u[l] !== !0 ? f = u[l].palette : l === "dark" && (f = {
      mode: "dark"
    }));
    const d = Bc({
      ...e,
      palette: f
    }, ...t);
    return d.defaultColorScheme = l, d.colorSchemes = u, d.palette.mode === "light" && (d.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: d.palette
    }, zf(d, "dark", u.dark)), d.palette.mode === "dark" && (d.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: d.palette
    }, zf(d, "light", u.light)), d;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), fS({
    ...a,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof r != "boolean" && r
  }, ...t);
}
const Uu = rl();
function Rr() {
  const e = tl(Uu);
  return process.env.NODE_ENV !== "production" && C.useDebugValue(e), e[jn] || e;
}
function pS(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const ur = (e) => pS(e) && e !== "classes", $e = Oh({
  themeId: jn,
  defaultTheme: Uu,
  rootShouldForwardProp: ur
});
function ec({
  theme: e,
  ...t
}) {
  const n = jn in e ? e[jn] : void 0;
  return /* @__PURE__ */ k(Vi, {
    ...t,
    themeId: n ? jn : void 0,
    theme: n || e
  });
}
const Ms = {
  colorSchemeStorageKey: "mui-color-scheme",
  defaultLightColorScheme: "light",
  defaultDarkColorScheme: "dark",
  modeStorageKey: "mui-mode"
}, {
  CssVarsProvider: mS
} = Rw({
  themeId: jn,
  // @ts-ignore ignore module augmentation tests
  theme: () => rl({
    cssVariables: !0
  }),
  colorSchemeStorageKey: Ms.colorSchemeStorageKey,
  modeStorageKey: Ms.modeStorageKey,
  defaultColorScheme: {
    light: Ms.defaultLightColorScheme,
    dark: Ms.defaultDarkColorScheme
  },
  resolveTheme: (e) => {
    const t = {
      ...e,
      typography: Xh(e.palette, e.typography)
    };
    return t.unstable_sx = function(r) {
      return Dr({
        sx: r,
        theme: this
      });
    }, t;
  }
}), hS = mS;
function gS({
  theme: e,
  ...t
}) {
  if (typeof e == "function")
    return /* @__PURE__ */ k(ec, {
      theme: e,
      ...t
    });
  const n = jn in e ? e[jn] : e;
  return "colorSchemes" in n ? /* @__PURE__ */ k(hS, {
    theme: e,
    ...t
  }) : "vars" in n ? /* @__PURE__ */ k(ec, {
    theme: e,
    ...t
  }) : /* @__PURE__ */ k(ec, {
    theme: {
      ...e,
      vars: null
    },
    ...t
  });
}
function eg(e) {
  return /* @__PURE__ */ k(vh, {
    ...e,
    defaultTheme: Uu,
    themeId: jn
  });
}
process.env.NODE_ENV !== "production" && (eg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool])
});
function Hu(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ k(eg, {
        styles: typeof e == "function" ? (r) => e({
          theme: r,
          ...n
        }) : e
      })
    );
  };
}
function yS() {
  return xh;
}
const lt = vw;
process.env.NODE_ENV !== "production" && (i.node, i.object.isRequired);
function Ct(e) {
  return bw(e);
}
function bS(e) {
  return wt("MuiSvgIcon", e);
}
Et("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const vS = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: r
  } = e, o = {
    root: ["root", t !== "inherit" && `color${ve(t)}`, `fontSize${ve(n)}`]
  };
  return Pt(o, bS, r);
}, xS = $e("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${ve(n.color)}`], t[`fontSize${ve(n.fontSize)}`]];
  }
})(lt(({
  theme: e
}) => {
  var t, n, r, o, s, a, l, c, u, f, d, h, g, y;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (o = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : o.call(t, "fill", {
      duration: (r = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : r.shorter
    }),
    variants: [
      {
        props: (m) => !m.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((a = (s = e.typography) == null ? void 0 : s.pxToRem) == null ? void 0 : a.call(s, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((f = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : f.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, m]) => m && m.main).map(([m]) => {
        var b, v;
        return {
          props: {
            color: m
          },
          style: {
            color: (v = (b = (e.vars ?? e).palette) == null ? void 0 : b[m]) == null ? void 0 : v.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (h = (d = (e.vars ?? e).palette) == null ? void 0 : d.action) == null ? void 0 : h.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (y = (g = (e.vars ?? e).palette) == null ? void 0 : g.action) == null ? void 0 : y.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), Fo = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ct({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: o,
    className: s,
    color: a = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: f = !1,
    titleAccess: d,
    viewBox: h = "0 0 24 24",
    ...g
  } = r, y = /* @__PURE__ */ C.isValidElement(o) && o.type === "svg", m = {
    ...r,
    color: a,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: f,
    viewBox: h,
    hasSvgAsChild: y
  }, b = {};
  f || (b.viewBox = h);
  const v = vS(m);
  return /* @__PURE__ */ Ce(xS, {
    as: l,
    className: ge(v.root, s),
    focusable: "false",
    color: u,
    "aria-hidden": d ? void 0 : !0,
    role: d ? "img" : void 0,
    ref: n,
    ...b,
    ...g,
    ...y && o.props,
    ownerState: m,
    children: [y ? o.props.children : o, d ? /* @__PURE__ */ k("title", {
      children: d
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (Fo.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: i.oneOfType([i.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: i.oneOfType([i.oneOf(["inherit", "large", "medium", "small"]), i.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: i.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: i.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: i.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: i.string
});
Fo.muiName = "SvgIcon";
function cs(e, t) {
  function n(r, o) {
    return /* @__PURE__ */ k(Fo, {
      "data-testid": process.env.NODE_ENV !== "production" ? `${t}Icon` : void 0,
      ref: o,
      ...r,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = Fo.muiName, /* @__PURE__ */ C.memo(/* @__PURE__ */ C.forwardRef(n));
}
function wS(e, t) {
  const n = e.charCodeAt(2);
  return e[0] === "o" && e[1] === "n" && n >= 65 && n <= 90 && typeof t == "function";
}
function qu(e, t) {
  if (!e)
    return t;
  function n(a, l) {
    const c = {};
    return Object.keys(l).forEach((u) => {
      wS(u, l[u]) && typeof a[u] == "function" && (c[u] = (...f) => {
        a[u](...f), l[u](...f);
      });
    }), c;
  }
  if (typeof e == "function" || typeof t == "function")
    return (a) => {
      const l = typeof t == "function" ? t(a) : t, c = typeof e == "function" ? e({
        ...a,
        ...l
      }) : e, u = ge(a == null ? void 0 : a.className, l == null ? void 0 : l.className, c == null ? void 0 : c.className), f = n(c, l);
      return {
        ...l,
        ...c,
        ...f,
        ...!!u && {
          className: u
        },
        ...(l == null ? void 0 : l.style) && (c == null ? void 0 : c.style) && {
          style: {
            ...l.style,
            ...c.style
          }
        },
        ...(l == null ? void 0 : l.sx) && (c == null ? void 0 : c.sx) && {
          sx: [...Array.isArray(l.sx) ? l.sx : [l.sx], ...Array.isArray(c.sx) ? c.sx : [c.sx]]
        }
      };
    };
  const r = t, o = n(e, r), s = ge(r == null ? void 0 : r.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...o,
    ...!!s && {
      className: s
    },
    ...(r == null ? void 0 : r.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...r.style,
        ...e.style
      }
    },
    ...(r == null ? void 0 : r.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(r.sx) ? r.sx : [r.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
function tg(e, t) {
  if (e == null) return {};
  var n = {};
  for (var r in e) if ({}.hasOwnProperty.call(e, r)) {
    if (t.indexOf(r) !== -1) continue;
    n[r] = e[r];
  }
  return n;
}
function jc(e, t) {
  return jc = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, r) {
    return n.__proto__ = r, n;
  }, jc(e, t);
}
function ng(e, t) {
  e.prototype = Object.create(t.prototype), e.prototype.constructor = e, jc(e, t);
}
const Wf = {
  disabled: !1
};
var SS = process.env.NODE_ENV !== "production" ? i.oneOfType([i.number, i.shape({
  enter: i.number,
  exit: i.number,
  appear: i.number
}).isRequired]) : null;
process.env.NODE_ENV !== "production" && i.oneOfType([i.string, i.shape({
  enter: i.string,
  exit: i.string,
  active: i.string
}), i.shape({
  enter: i.string,
  enterDone: i.string,
  enterActive: i.string,
  exit: i.string,
  exitDone: i.string,
  exitActive: i.string
})]);
const ha = F.createContext(null);
var TS = function(t) {
  return t.scrollTop;
}, xi = "unmounted", Jr = "exited", Zr = "entering", Ro = "entered", Lc = "exiting", xn = /* @__PURE__ */ function(e) {
  ng(t, e);
  function t(r, o) {
    var s;
    s = e.call(this, r, o) || this;
    var a = o, l = a && !a.isMounting ? r.enter : r.appear, c;
    return s.appearStatus = null, r.in ? l ? (c = Jr, s.appearStatus = Zr) : c = Ro : r.unmountOnExit || r.mountOnEnter ? c = xi : c = Jr, s.state = {
      status: c
    }, s.nextCallback = null, s;
  }
  t.getDerivedStateFromProps = function(o, s) {
    var a = o.in;
    return a && s.status === xi ? {
      status: Jr
    } : null;
  };
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.updateStatus(!0, this.appearStatus);
  }, n.componentDidUpdate = function(o) {
    var s = null;
    if (o !== this.props) {
      var a = this.state.status;
      this.props.in ? a !== Zr && a !== Ro && (s = Zr) : (a === Zr || a === Ro) && (s = Lc);
    }
    this.updateStatus(!1, s);
  }, n.componentWillUnmount = function() {
    this.cancelNextCallback();
  }, n.getTimeouts = function() {
    var o = this.props.timeout, s, a, l;
    return s = a = l = o, o != null && typeof o != "number" && (s = o.exit, a = o.enter, l = o.appear !== void 0 ? o.appear : a), {
      exit: s,
      enter: a,
      appear: l
    };
  }, n.updateStatus = function(o, s) {
    if (o === void 0 && (o = !1), s !== null)
      if (this.cancelNextCallback(), s === Zr) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var a = this.props.nodeRef ? this.props.nodeRef.current : ko.findDOMNode(this);
          a && TS(a);
        }
        this.performEnter(o);
      } else
        this.performExit();
    else this.props.unmountOnExit && this.state.status === Jr && this.setState({
      status: xi
    });
  }, n.performEnter = function(o) {
    var s = this, a = this.props.enter, l = this.context ? this.context.isMounting : o, c = this.props.nodeRef ? [l] : [ko.findDOMNode(this), l], u = c[0], f = c[1], d = this.getTimeouts(), h = l ? d.appear : d.enter;
    if (!o && !a || Wf.disabled) {
      this.safeSetState({
        status: Ro
      }, function() {
        s.props.onEntered(u);
      });
      return;
    }
    this.props.onEnter(u, f), this.safeSetState({
      status: Zr
    }, function() {
      s.props.onEntering(u, f), s.onTransitionEnd(h, function() {
        s.safeSetState({
          status: Ro
        }, function() {
          s.props.onEntered(u, f);
        });
      });
    });
  }, n.performExit = function() {
    var o = this, s = this.props.exit, a = this.getTimeouts(), l = this.props.nodeRef ? void 0 : ko.findDOMNode(this);
    if (!s || Wf.disabled) {
      this.safeSetState({
        status: Jr
      }, function() {
        o.props.onExited(l);
      });
      return;
    }
    this.props.onExit(l), this.safeSetState({
      status: Lc
    }, function() {
      o.props.onExiting(l), o.onTransitionEnd(a.exit, function() {
        o.safeSetState({
          status: Jr
        }, function() {
          o.props.onExited(l);
        });
      });
    });
  }, n.cancelNextCallback = function() {
    this.nextCallback !== null && (this.nextCallback.cancel(), this.nextCallback = null);
  }, n.safeSetState = function(o, s) {
    s = this.setNextCallback(s), this.setState(o, s);
  }, n.setNextCallback = function(o) {
    var s = this, a = !0;
    return this.nextCallback = function(l) {
      a && (a = !1, s.nextCallback = null, o(l));
    }, this.nextCallback.cancel = function() {
      a = !1;
    }, this.nextCallback;
  }, n.onTransitionEnd = function(o, s) {
    this.setNextCallback(s);
    var a = this.props.nodeRef ? this.props.nodeRef.current : ko.findDOMNode(this), l = o == null && !this.props.addEndListener;
    if (!a || l) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var c = this.props.nodeRef ? [this.nextCallback] : [a, this.nextCallback], u = c[0], f = c[1];
      this.props.addEndListener(u, f);
    }
    o != null && setTimeout(this.nextCallback, o);
  }, n.render = function() {
    var o = this.state.status;
    if (o === xi)
      return null;
    var s = this.props, a = s.children;
    s.in, s.mountOnEnter, s.unmountOnExit, s.appear, s.enter, s.exit, s.timeout, s.addEndListener, s.onEnter, s.onEntering, s.onEntered, s.onExit, s.onExiting, s.onExited, s.nodeRef;
    var l = tg(s, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ F.createElement(ha.Provider, {
        value: null
      }, typeof a == "function" ? a(o, l) : F.cloneElement(F.Children.only(a), l))
    );
  }, t;
}(F.Component);
xn.contextType = ha;
xn.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: i.shape({
    current: typeof Element > "u" ? i.any : function(e, t, n, r, o, s) {
      var a = e[t];
      return i.instanceOf(a && "ownerDocument" in a ? a.ownerDocument.defaultView.Element : Element)(e, t, n, r, o, s);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: i.oneOfType([i.func.isRequired, i.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: i.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: i.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: i.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: i.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: i.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: i.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function(t) {
    var n = SS;
    t.addEndListener || (n = n.isRequired);
    for (var r = arguments.length, o = new Array(r > 1 ? r - 1 : 0), s = 1; s < r; s++)
      o[s - 1] = arguments[s];
    return n.apply(void 0, [t].concat(o));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: i.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: i.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: i.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: i.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: i.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: i.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: i.func
} : {};
function xo() {
}
xn.defaultProps = {
  in: !1,
  mountOnEnter: !1,
  unmountOnExit: !1,
  appear: !1,
  enter: !0,
  exit: !0,
  onEnter: xo,
  onEntering: xo,
  onEntered: xo,
  onExit: xo,
  onExiting: xo,
  onExited: xo
};
xn.UNMOUNTED = xi;
xn.EXITED = Jr;
xn.ENTERING = Zr;
xn.ENTERED = Ro;
xn.EXITING = Lc;
function ES(e) {
  if (e === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function Gu(e, t) {
  var n = function(s) {
    return t && Ks(s) ? t(s) : s;
  }, r = /* @__PURE__ */ Object.create(null);
  return e && wv.map(e, function(o) {
    return o;
  }).forEach(function(o) {
    r[o.key] = n(o);
  }), r;
}
function CS(e, t) {
  e = e || {}, t = t || {};
  function n(f) {
    return f in t ? t[f] : e[f];
  }
  var r = /* @__PURE__ */ Object.create(null), o = [];
  for (var s in e)
    s in t ? o.length && (r[s] = o, o = []) : o.push(s);
  var a, l = {};
  for (var c in t) {
    if (r[c])
      for (a = 0; a < r[c].length; a++) {
        var u = r[c][a];
        l[r[c][a]] = n(u);
      }
    l[c] = n(c);
  }
  for (a = 0; a < o.length; a++)
    l[o[a]] = n(o[a]);
  return l;
}
function eo(e, t, n) {
  return n[t] != null ? n[t] : e.props[t];
}
function OS(e, t) {
  return Gu(e.children, function(n) {
    return Xs(n, {
      onExited: t.bind(null, n),
      in: !0,
      appear: eo(n, "appear", e),
      enter: eo(n, "enter", e),
      exit: eo(n, "exit", e)
    });
  });
}
function RS(e, t, n) {
  var r = Gu(e.children), o = CS(t, r);
  return Object.keys(o).forEach(function(s) {
    var a = o[s];
    if (Ks(a)) {
      var l = s in t, c = s in r, u = t[s], f = Ks(u) && !u.props.in;
      c && (!l || f) ? o[s] = Xs(a, {
        onExited: n.bind(null, a),
        in: !0,
        exit: eo(a, "exit", e),
        enter: eo(a, "enter", e)
      }) : !c && l && !f ? o[s] = Xs(a, {
        in: !1
      }) : c && l && Ks(u) && (o[s] = Xs(a, {
        onExited: n.bind(null, a),
        in: u.props.in,
        exit: eo(a, "exit", e),
        enter: eo(a, "enter", e)
      }));
    }
  }), o;
}
var $S = Object.values || function(e) {
  return Object.keys(e).map(function(t) {
    return e[t];
  });
}, kS = {
  component: "div",
  childFactory: function(t) {
    return t;
  }
}, Yu = /* @__PURE__ */ function(e) {
  ng(t, e);
  function t(r, o) {
    var s;
    s = e.call(this, r, o) || this;
    var a = s.handleExited.bind(ES(s));
    return s.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: a,
      firstRender: !0
    }, s;
  }
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, n.componentWillUnmount = function() {
    this.mounted = !1;
  }, t.getDerivedStateFromProps = function(o, s) {
    var a = s.children, l = s.handleExited, c = s.firstRender;
    return {
      children: c ? OS(o, l) : RS(o, a, l),
      firstRender: !1
    };
  }, n.handleExited = function(o, s) {
    var a = Gu(this.props.children);
    o.key in a || (o.props.onExited && o.props.onExited(s), this.mounted && this.setState(function(l) {
      var c = ca({}, l.children);
      return delete c[o.key], {
        children: c
      };
    }));
  }, n.render = function() {
    var o = this.props, s = o.component, a = o.childFactory, l = tg(o, ["component", "childFactory"]), c = this.state.contextValue, u = $S(this.state.children).map(a);
    return delete l.appear, delete l.enter, delete l.exit, s === null ? /* @__PURE__ */ F.createElement(ha.Provider, {
      value: c
    }, u) : /* @__PURE__ */ F.createElement(ha.Provider, {
      value: c
    }, /* @__PURE__ */ F.createElement(s, l, u));
  }, t;
}(F.Component);
Yu.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: i.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: i.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: i.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: i.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: i.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: i.func
} : {};
Yu.defaultProps = kS;
const Ku = (e) => e.scrollTop;
function jo(e, t) {
  const {
    timeout: n,
    easing: r,
    style: o = {}
  } = e;
  return {
    duration: o.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: o.transitionTimingFunction ?? (typeof r == "object" ? r[t.mode] : r),
    delay: o.transitionDelay
  };
}
function IS(e) {
  return wt("MuiPaper", e);
}
Et("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const PS = (e) => {
  const {
    square: t,
    elevation: n,
    variant: r,
    classes: o
  } = e, s = {
    root: ["root", r, !t && "rounded", r === "elevation" && `elevation${n}`]
  };
  return Pt(s, IS, o);
}, NS = $e("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(lt(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), Jo = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var g;
  const r = Ct({
    props: t,
    name: "MuiPaper"
  }), o = Rr(), {
    className: s,
    component: a = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...f
  } = r, d = {
    ...r,
    component: a,
    elevation: l,
    square: c,
    variant: u
  }, h = PS(d);
  return process.env.NODE_ENV !== "production" && o.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ k(NS, {
    as: a,
    ownerState: d,
    className: ge(h.root, s),
    ref: n,
    ...f,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (o.vars || o).shadows[l],
        ...o.vars && {
          "--Paper-overlay": (g = o.vars.overlays) == null ? void 0 : g[l]
        },
        ...!o.vars && o.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${Vt("#fff", Fc(l))}, ${Vt("#fff", Fc(l))})`
        }
      },
      ...f.style
    }
  });
});
process.env.NODE_ENV !== "production" && (Jo.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: Vr(Bu, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: i.bool,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: i.oneOfType([i.oneOf(["elevation", "outlined"]), i.string])
});
function st(e, t) {
  const {
    className: n,
    elementType: r,
    ownerState: o,
    externalForwardedProps: s,
    internalForwardedProps: a,
    shouldForwardComponentProp: l = !1,
    ...c
  } = t, {
    component: u,
    slots: f = {
      [e]: void 0
    },
    slotProps: d = {
      [e]: void 0
    },
    ...h
  } = s, g = f[e] || r, y = zh(d[e], o), {
    props: {
      component: m,
      ...b
    },
    internalRef: v
  } = Vh({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? h : void 0,
    externalSlotProps: y
  }), E = Kt(v, y == null ? void 0 : y.ref, t.ref), S = e === "root" ? m || u : m, w = jh(g, {
    ...e === "root" && !u && !f[e] && a,
    ...e !== "root" && !f[e] && a,
    ...b,
    ...S && !l && {
      as: S
    },
    ...S && l && {
      component: S
    },
    ref: E
  }, o);
  return [g, w];
}
class ga {
  constructor() {
    $r(this, "mountEffect", () => {
      this.shouldMount && !this.didMount && this.ref.current !== null && (this.didMount = !0, this.mounted.resolve());
    });
    this.ref = {
      current: null
    }, this.mounted = null, this.didMount = !1, this.shouldMount = !1, this.setShouldMount = null;
  }
  /** React ref to the ripple instance */
  /** If the ripple component should be mounted */
  /** Promise that resolves when the ripple component is mounted */
  /** If the ripple component has been mounted */
  /** React state hook setter */
  static create() {
    return new ga();
  }
  static use() {
    const t = Mh(ga.create).current, [n, r] = C.useState(!1);
    return t.shouldMount = n, t.setShouldMount = r, C.useEffect(t.mountEffect, [n]), t;
  }
  mount() {
    return this.mounted || (this.mounted = MS(), this.shouldMount = !0, this.setShouldMount(this.shouldMount)), this.mounted;
  }
  /* Ripple API */
  start(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.start(...t);
    });
  }
  stop(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.stop(...t);
    });
  }
  pulsate(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.pulsate(...t);
    });
  }
}
function AS() {
  return ga.use();
}
function MS() {
  let e, t;
  const n = new Promise((r, o) => {
    e = r, t = o;
  });
  return n.resolve = e, n.reject = t, n;
}
function rg(e) {
  const {
    className: t,
    classes: n,
    pulsate: r = !1,
    rippleX: o,
    rippleY: s,
    rippleSize: a,
    in: l,
    onExited: c,
    timeout: u
  } = e, [f, d] = C.useState(!1), h = ge(t, n.ripple, n.rippleVisible, r && n.ripplePulsate), g = {
    width: a,
    height: a,
    top: -(a / 2) + s,
    left: -(a / 2) + o
  }, y = ge(n.child, f && n.childLeaving, r && n.childPulsate);
  return !l && !f && d(!0), C.useEffect(() => {
    if (!l && c != null) {
      const m = setTimeout(c, u);
      return () => {
        clearTimeout(m);
      };
    }
  }, [c, l, u]), /* @__PURE__ */ k("span", {
    className: h,
    style: g,
    children: /* @__PURE__ */ k("span", {
      className: y
    })
  });
}
process.env.NODE_ENV !== "production" && (rg.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object.isRequired,
  className: i.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: i.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: i.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: i.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: i.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: i.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: i.number,
  /**
   * exit delay
   */
  timeout: i.number.isRequired
});
const Sn = Et("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), Vc = 550, _S = 80, DS = ns`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`, BS = ns`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`, FS = ns`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`, jS = $e("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), LS = $e(rg, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})`
  opacity: 0;
  position: absolute;

  &.${Sn.rippleVisible} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${DS};
    animation-duration: ${Vc}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  &.${Sn.ripplePulsate} {
    animation-duration: ${({
  theme: e
}) => e.transitions.duration.shorter}ms;
  }

  & .${Sn.child} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${Sn.childLeaving} {
    opacity: 0;
    animation-name: ${BS};
    animation-duration: ${Vc}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  & .${Sn.childPulsate} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${FS};
    animation-duration: 2500ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`, og = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ct({
    props: t,
    name: "MuiTouchRipple"
  }), {
    center: o = !1,
    classes: s = {},
    className: a,
    ...l
  } = r, [c, u] = C.useState([]), f = C.useRef(0), d = C.useRef(null);
  C.useEffect(() => {
    d.current && (d.current(), d.current = null);
  }, [c]);
  const h = C.useRef(!1), g = Io(), y = C.useRef(null), m = C.useRef(null), b = C.useCallback((w) => {
    const {
      pulsate: x,
      rippleX: T,
      rippleY: R,
      rippleSize: I,
      cb: N
    } = w;
    u((p) => [...p, /* @__PURE__ */ k(LS, {
      classes: {
        ripple: ge(s.ripple, Sn.ripple),
        rippleVisible: ge(s.rippleVisible, Sn.rippleVisible),
        ripplePulsate: ge(s.ripplePulsate, Sn.ripplePulsate),
        child: ge(s.child, Sn.child),
        childLeaving: ge(s.childLeaving, Sn.childLeaving),
        childPulsate: ge(s.childPulsate, Sn.childPulsate)
      },
      timeout: Vc,
      pulsate: x,
      rippleX: T,
      rippleY: R,
      rippleSize: I
    }, f.current)]), f.current += 1, d.current = N;
  }, [s]), v = C.useCallback((w = {}, x = {}, T = () => {
  }) => {
    const {
      pulsate: R = !1,
      center: I = o || x.pulsate,
      fakeElement: N = !1
      // For test purposes
    } = x;
    if ((w == null ? void 0 : w.type) === "mousedown" && h.current) {
      h.current = !1;
      return;
    }
    (w == null ? void 0 : w.type) === "touchstart" && (h.current = !0);
    const p = N ? null : m.current, O = p ? p.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let $, A, D;
    if (I || w === void 0 || w.clientX === 0 && w.clientY === 0 || !w.clientX && !w.touches)
      $ = Math.round(O.width / 2), A = Math.round(O.height / 2);
    else {
      const {
        clientX: M,
        clientY: _
      } = w.touches && w.touches.length > 0 ? w.touches[0] : w;
      $ = Math.round(M - O.left), A = Math.round(_ - O.top);
    }
    if (I)
      D = Math.sqrt((2 * O.width ** 2 + O.height ** 2) / 3), D % 2 === 0 && (D += 1);
    else {
      const M = Math.max(Math.abs((p ? p.clientWidth : 0) - $), $) * 2 + 2, _ = Math.max(Math.abs((p ? p.clientHeight : 0) - A), A) * 2 + 2;
      D = Math.sqrt(M ** 2 + _ ** 2);
    }
    w != null && w.touches ? y.current === null && (y.current = () => {
      b({
        pulsate: R,
        rippleX: $,
        rippleY: A,
        rippleSize: D,
        cb: T
      });
    }, g.start(_S, () => {
      y.current && (y.current(), y.current = null);
    })) : b({
      pulsate: R,
      rippleX: $,
      rippleY: A,
      rippleSize: D,
      cb: T
    });
  }, [o, b, g]), E = C.useCallback(() => {
    v({}, {
      pulsate: !0
    });
  }, [v]), S = C.useCallback((w, x) => {
    if (g.clear(), (w == null ? void 0 : w.type) === "touchend" && y.current) {
      y.current(), y.current = null, g.start(0, () => {
        S(w, x);
      });
      return;
    }
    y.current = null, u((T) => T.length > 0 ? T.slice(1) : T), d.current = x;
  }, [g]);
  return C.useImperativeHandle(n, () => ({
    pulsate: E,
    start: v,
    stop: S
  }), [E, v, S]), /* @__PURE__ */ k(jS, {
    className: ge(Sn.root, s.root, a),
    ref: m,
    ...l,
    children: /* @__PURE__ */ k(Yu, {
      component: null,
      exit: !0,
      children: c
    })
  });
});
process.env.NODE_ENV !== "production" && (og.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string
});
function VS(e) {
  return wt("MuiButtonBase", e);
}
const zS = Et("MuiButtonBase", ["root", "disabled", "focusVisible"]), WS = (e) => {
  const {
    disabled: t,
    focusVisible: n,
    focusVisibleClassName: r,
    classes: o
  } = e, a = Pt({
    root: ["root", t && "disabled", n && "focusVisible"]
  }, VS, o);
  return n && r && (a.root += ` ${r}`), a;
}, US = $e("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${zS.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), Xu = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ct({
    props: t,
    name: "MuiButtonBase"
  }), {
    action: o,
    centerRipple: s = !1,
    children: a,
    className: l,
    component: c = "button",
    disabled: u = !1,
    disableRipple: f = !1,
    disableTouchRipple: d = !1,
    focusRipple: h = !1,
    focusVisibleClassName: g,
    LinkComponent: y = "a",
    onBlur: m,
    onClick: b,
    onContextMenu: v,
    onDragLeave: E,
    onFocus: S,
    onFocusVisible: w,
    onKeyDown: x,
    onKeyUp: T,
    onMouseDown: R,
    onMouseLeave: I,
    onMouseUp: N,
    onTouchEnd: p,
    onTouchMove: O,
    onTouchStart: $,
    tabIndex: A = 0,
    TouchRippleProps: D,
    touchRippleRef: M,
    type: _,
    ...L
  } = r, U = C.useRef(null), z = AS(), j = Kt(z.ref, M), [V, K] = C.useState(!1);
  u && V && K(!1), C.useImperativeHandle(o, () => ({
    focusVisible: () => {
      K(!0), U.current.focus();
    }
  }), []);
  const Y = z.shouldMount && !f && !u;
  C.useEffect(() => {
    V && h && !f && z.pulsate();
  }, [f, h, V, z]);
  const te = mr(z, "start", R, d), X = mr(z, "stop", v, d), ee = mr(z, "stop", E, d), re = mr(z, "stop", N, d), q = mr(z, "stop", (P) => {
    V && P.preventDefault(), I && I(P);
  }, d), Q = mr(z, "start", $, d), G = mr(z, "stop", p, d), ne = mr(z, "stop", O, d), B = mr(z, "stop", (P) => {
    pa(P.target) || K(!1), m && m(P);
  }, !1), pe = tr((P) => {
    U.current || (U.current = P.currentTarget), pa(P.target) && (K(!0), w && w(P)), S && S(P);
  }), ae = () => {
    const P = U.current;
    return c && c !== "button" && !(P.tagName === "A" && P.href);
  }, me = tr((P) => {
    h && !P.repeat && V && P.key === " " && z.stop(P, () => {
      z.start(P);
    }), P.target === P.currentTarget && ae() && P.key === " " && P.preventDefault(), x && x(P), P.target === P.currentTarget && ae() && P.key === "Enter" && !u && (P.preventDefault(), b && b(P));
  }), Me = tr((P) => {
    h && P.key === " " && V && !P.defaultPrevented && z.stop(P, () => {
      z.pulsate(P);
    }), T && T(P), b && P.target === P.currentTarget && ae() && P.key === " " && !P.defaultPrevented && b(P);
  });
  let Re = c;
  Re === "button" && (L.href || L.to) && (Re = y);
  const Oe = {};
  Re === "button" ? (Oe.type = _ === void 0 ? "button" : _, Oe.disabled = u) : (!L.href && !L.to && (Oe.role = "button"), u && (Oe["aria-disabled"] = u));
  const we = Kt(n, U), Pe = {
    ...r,
    centerRipple: s,
    component: c,
    disabled: u,
    disableRipple: f,
    disableTouchRipple: d,
    focusRipple: h,
    tabIndex: A,
    focusVisible: V
  }, Se = WS(Pe);
  return /* @__PURE__ */ Ce(US, {
    as: Re,
    className: ge(Se.root, l),
    ownerState: Pe,
    onBlur: B,
    onClick: b,
    onContextMenu: X,
    onFocus: pe,
    onKeyDown: me,
    onKeyUp: Me,
    onMouseDown: te,
    onMouseLeave: q,
    onMouseUp: re,
    onDragLeave: ee,
    onTouchEnd: G,
    onTouchMove: ne,
    onTouchStart: Q,
    ref: we,
    tabIndex: u ? -1 : A,
    type: _,
    ...Oe,
    ...L,
    children: [a, Y ? /* @__PURE__ */ k(og, {
      ref: j,
      center: s,
      ...D
    }) : null]
  });
});
function mr(e, t, n, r = !1) {
  return tr((o) => (n && n(o), r || e[t](o), !0));
}
process.env.NODE_ENV !== "production" && (Xu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: Or,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: i.bool,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: Mu,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: i.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: i.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: i.string,
  /**
   * @ignore
   */
  href: i.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: i.elementType,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * @ignore
   */
  onContextMenu: i.func,
  /**
   * @ignore
   */
  onDragLeave: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: i.func,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * @ignore
   */
  onKeyUp: i.func,
  /**
   * @ignore
   */
  onMouseDown: i.func,
  /**
   * @ignore
   */
  onMouseLeave: i.func,
  /**
   * @ignore
   */
  onMouseUp: i.func,
  /**
   * @ignore
   */
  onTouchEnd: i.func,
  /**
   * @ignore
   */
  onTouchMove: i.func,
  /**
   * @ignore
   */
  onTouchStart: i.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * @default 0
   */
  tabIndex: i.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: i.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: i.oneOfType([i.func, i.shape({
    current: i.shape({
      pulsate: i.func.isRequired,
      start: i.func.isRequired,
      stop: i.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: i.oneOfType([i.oneOf(["button", "reset", "submit"]), i.string])
});
function HS(e) {
  return typeof e.main == "string";
}
function qS(e, t = []) {
  if (!HS(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function xr(e = []) {
  return ([, t]) => t && qS(t, e);
}
function GS(e) {
  return wt("MuiCircularProgress", e);
}
Et("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]);
const kr = 44, zc = ns`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`, Wc = ns`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: -126px;
  }
`, YS = typeof zc != "string" ? Ru`
        animation: ${zc} 1.4s linear infinite;
      ` : null, KS = typeof Wc != "string" ? Ru`
        animation: ${Wc} 1.4s ease-in-out infinite;
      ` : null, XS = (e) => {
  const {
    classes: t,
    variant: n,
    color: r,
    disableShrink: o
  } = e, s = {
    root: ["root", n, `color${ve(r)}`],
    svg: ["svg"],
    circle: ["circle", `circle${ve(n)}`, o && "circleDisableShrink"]
  };
  return Pt(s, GS, t);
}, QS = $e("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`color${ve(n.color)}`]];
  }
})(lt(({
  theme: e
}) => ({
  display: "inline-block",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("transform")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: YS || {
      animation: `${zc} 1.4s linear infinite`
    }
  }, ...Object.entries(e.palette).filter(xr()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  }))]
}))), JS = $e("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (e, t) => t.svg
})({
  display: "block"
  // Keeps the progress centered
}), ZS = $e("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.circle, t[`circle${ve(n.variant)}`], n.disableShrink && t.circleDisableShrink];
  }
})(lt(({
  theme: e
}) => ({
  stroke: "currentColor",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("stroke-dashoffset")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: {
      // Some default value that looks fine waiting for the animation to kicks in.
      strokeDasharray: "80px, 200px",
      strokeDashoffset: 0
      // Add the unit to fix a Edge 16 and below bug.
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" && !t.disableShrink,
    style: KS || {
      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
      animation: `${Wc} 1.4s ease-in-out infinite`
    }
  }]
}))), ig = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ct({
    props: t,
    name: "MuiCircularProgress"
  }), {
    className: o,
    color: s = "primary",
    disableShrink: a = !1,
    size: l = 40,
    style: c,
    thickness: u = 3.6,
    value: f = 0,
    variant: d = "indeterminate",
    ...h
  } = r, g = {
    ...r,
    color: s,
    disableShrink: a,
    size: l,
    thickness: u,
    value: f,
    variant: d
  }, y = XS(g), m = {}, b = {}, v = {};
  if (d === "determinate") {
    const E = 2 * Math.PI * ((kr - u) / 2);
    m.strokeDasharray = E.toFixed(3), v["aria-valuenow"] = Math.round(f), m.strokeDashoffset = `${((100 - f) / 100 * E).toFixed(3)}px`, b.transform = "rotate(-90deg)";
  }
  return /* @__PURE__ */ k(QS, {
    className: ge(y.root, o),
    style: {
      width: l,
      height: l,
      ...b,
      ...c
    },
    ownerState: g,
    ref: n,
    role: "progressbar",
    ...v,
    ...h,
    children: /* @__PURE__ */ k(JS, {
      className: y.svg,
      ownerState: g,
      viewBox: `${kr / 2} ${kr / 2} ${kr} ${kr}`,
      children: /* @__PURE__ */ k(ZS, {
        className: y.circle,
        style: m,
        ownerState: g,
        cx: kr,
        cy: kr,
        r: (kr - u) / 2,
        fill: "none",
        strokeWidth: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (ig.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: Vr(i.bool, (e) => e.disableShrink && e.variant && e.variant !== "indeterminate" ? new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.") : null),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, for example '3rem'.
   * @default 40
   */
  size: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: i.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: i.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: i.oneOf(["determinate", "indeterminate"])
});
function eT(e) {
  return wt("MuiTypography", e);
}
Et("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]);
const tT = {
  primary: !0,
  secondary: !0,
  error: !0,
  info: !0,
  success: !0,
  warning: !0,
  textPrimary: !0,
  textSecondary: !0,
  textDisabled: !0
}, nT = yS(), rT = (e) => {
  const {
    align: t,
    gutterBottom: n,
    noWrap: r,
    paragraph: o,
    variant: s,
    classes: a
  } = e, l = {
    root: ["root", s, e.align !== "inherit" && `align${ve(t)}`, n && "gutterBottom", r && "noWrap", o && "paragraph"]
  };
  return Pt(l, eT, a);
}, oT = $e("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.variant && t[n.variant], n.align !== "inherit" && t[`align${ve(n.align)}`], n.noWrap && t.noWrap, n.gutterBottom && t.gutterBottom, n.paragraph && t.paragraph];
  }
})(lt(({
  theme: e
}) => {
  var t;
  return {
    margin: 0,
    variants: [{
      props: {
        variant: "inherit"
      },
      style: {
        // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
        font: "inherit",
        lineHeight: "inherit",
        letterSpacing: "inherit"
      }
    }, ...Object.entries(e.typography).filter(([n, r]) => n !== "inherit" && r && typeof r == "object").map(([n, r]) => ({
      props: {
        variant: n
      },
      style: r
    })), ...Object.entries(e.palette).filter(xr()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main
      }
    })), ...Object.entries(((t = e.palette) == null ? void 0 : t.text) || {}).filter(([, n]) => typeof n == "string").map(([n]) => ({
      props: {
        color: `text${ve(n)}`
      },
      style: {
        color: (e.vars || e).palette.text[n]
      }
    })), {
      props: ({
        ownerState: n
      }) => n.align !== "inherit",
      style: {
        textAlign: "var(--Typography-textAlign)"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.noWrap,
      style: {
        overflow: "hidden",
        textOverflow: "ellipsis",
        whiteSpace: "nowrap"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.gutterBottom,
      style: {
        marginBottom: "0.35em"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.paragraph,
      style: {
        marginBottom: 16
      }
    }]
  };
})), Uf = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
}, sg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    color: r,
    ...o
  } = Ct({
    props: t,
    name: "MuiTypography"
  }), s = !tT[r], a = nT({
    ...o,
    ...s && {
      color: r
    }
  }), {
    align: l = "inherit",
    className: c,
    component: u,
    gutterBottom: f = !1,
    noWrap: d = !1,
    paragraph: h = !1,
    variant: g = "body1",
    variantMapping: y = Uf,
    ...m
  } = a, b = {
    ...a,
    align: l,
    color: r,
    className: c,
    component: u,
    gutterBottom: f,
    noWrap: d,
    paragraph: h,
    variant: g,
    variantMapping: y
  }, v = u || (h ? "p" : y[g] || Uf[g]) || "span", E = rT(b);
  return /* @__PURE__ */ k(oT, {
    as: v,
    ref: n,
    className: ge(E.root, c),
    ...m,
    ownerState: b,
    style: {
      ...l !== "inherit" && {
        "--Typography-textAlign": l
      },
      ...m.style
    }
  });
});
process.env.NODE_ENV !== "production" && (sg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: i.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "success", "error", "info", "warning", "textPrimary", "textSecondary", "textDisabled"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: i.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: i.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   * @deprecated Use the `component` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  paragraph: i.bool,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: i.oneOfType([i.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), i.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: i.object
});
var sn = "top", In = "bottom", Pn = "right", an = "left", Qu = "auto", us = [sn, In, Pn, an], Lo = "start", zi = "end", iT = "clippingParents", ag = "viewport", si = "popper", sT = "reference", Hf = /* @__PURE__ */ us.reduce(function(e, t) {
  return e.concat([t + "-" + Lo, t + "-" + zi]);
}, []), lg = /* @__PURE__ */ [].concat(us, [Qu]).reduce(function(e, t) {
  return e.concat([t, t + "-" + Lo, t + "-" + zi]);
}, []), aT = "beforeRead", lT = "read", cT = "afterRead", uT = "beforeMain", dT = "main", fT = "afterMain", pT = "beforeWrite", mT = "write", hT = "afterWrite", gT = [aT, lT, cT, uT, dT, fT, pT, mT, hT];
function ar(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function vn(e) {
  if (e == null)
    return window;
  if (e.toString() !== "[object Window]") {
    var t = e.ownerDocument;
    return t && t.defaultView || window;
  }
  return e;
}
function so(e) {
  var t = vn(e).Element;
  return e instanceof t || e instanceof Element;
}
function kn(e) {
  var t = vn(e).HTMLElement;
  return e instanceof t || e instanceof HTMLElement;
}
function Ju(e) {
  if (typeof ShadowRoot > "u")
    return !1;
  var t = vn(e).ShadowRoot;
  return e instanceof t || e instanceof ShadowRoot;
}
function yT(e) {
  var t = e.state;
  Object.keys(t.elements).forEach(function(n) {
    var r = t.styles[n] || {}, o = t.attributes[n] || {}, s = t.elements[n];
    !kn(s) || !ar(s) || (Object.assign(s.style, r), Object.keys(o).forEach(function(a) {
      var l = o[a];
      l === !1 ? s.removeAttribute(a) : s.setAttribute(a, l === !0 ? "" : l);
    }));
  });
}
function bT(e) {
  var t = e.state, n = {
    popper: {
      position: t.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(t.elements.popper.style, n.popper), t.styles = n, t.elements.arrow && Object.assign(t.elements.arrow.style, n.arrow), function() {
    Object.keys(t.elements).forEach(function(r) {
      var o = t.elements[r], s = t.attributes[r] || {}, a = Object.keys(t.styles.hasOwnProperty(r) ? t.styles[r] : n[r]), l = a.reduce(function(c, u) {
        return c[u] = "", c;
      }, {});
      !kn(o) || !ar(o) || (Object.assign(o.style, l), Object.keys(s).forEach(function(c) {
        o.removeAttribute(c);
      }));
    });
  };
}
const vT = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: yT,
  effect: bT,
  requires: ["computeStyles"]
};
function nr(e) {
  return e.split("-")[0];
}
var oo = Math.max, ya = Math.min, Vo = Math.round;
function Uc() {
  var e = navigator.userAgentData;
  return e != null && e.brands && Array.isArray(e.brands) ? e.brands.map(function(t) {
    return t.brand + "/" + t.version;
  }).join(" ") : navigator.userAgent;
}
function cg() {
  return !/^((?!chrome|android).)*safari/i.test(Uc());
}
function zo(e, t, n) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  var r = e.getBoundingClientRect(), o = 1, s = 1;
  t && kn(e) && (o = e.offsetWidth > 0 && Vo(r.width) / e.offsetWidth || 1, s = e.offsetHeight > 0 && Vo(r.height) / e.offsetHeight || 1);
  var a = so(e) ? vn(e) : window, l = a.visualViewport, c = !cg() && n, u = (r.left + (c && l ? l.offsetLeft : 0)) / o, f = (r.top + (c && l ? l.offsetTop : 0)) / s, d = r.width / o, h = r.height / s;
  return {
    width: d,
    height: h,
    top: f,
    right: u + d,
    bottom: f + h,
    left: u,
    x: u,
    y: f
  };
}
function Zu(e) {
  var t = zo(e), n = e.offsetWidth, r = e.offsetHeight;
  return Math.abs(t.width - n) <= 1 && (n = t.width), Math.abs(t.height - r) <= 1 && (r = t.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: n,
    height: r
  };
}
function ug(e, t) {
  var n = t.getRootNode && t.getRootNode();
  if (e.contains(t))
    return !0;
  if (n && Ju(n)) {
    var r = t;
    do {
      if (r && e.isSameNode(r))
        return !0;
      r = r.parentNode || r.host;
    } while (r);
  }
  return !1;
}
function wr(e) {
  return vn(e).getComputedStyle(e);
}
function xT(e) {
  return ["table", "td", "th"].indexOf(ar(e)) >= 0;
}
function Wr(e) {
  return ((so(e) ? e.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e.document
  )) || window.document).documentElement;
}
function ol(e) {
  return ar(e) === "html" ? e : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    (Ju(e) ? e.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    Wr(e)
  );
}
function qf(e) {
  return !kn(e) || // https://github.com/popperjs/popper-core/issues/837
  wr(e).position === "fixed" ? null : e.offsetParent;
}
function wT(e) {
  var t = /firefox/i.test(Uc()), n = /Trident/i.test(Uc());
  if (n && kn(e)) {
    var r = wr(e);
    if (r.position === "fixed")
      return null;
  }
  var o = ol(e);
  for (Ju(o) && (o = o.host); kn(o) && ["html", "body"].indexOf(ar(o)) < 0; ) {
    var s = wr(o);
    if (s.transform !== "none" || s.perspective !== "none" || s.contain === "paint" || ["transform", "perspective"].indexOf(s.willChange) !== -1 || t && s.willChange === "filter" || t && s.filter && s.filter !== "none")
      return o;
    o = o.parentNode;
  }
  return null;
}
function ds(e) {
  for (var t = vn(e), n = qf(e); n && xT(n) && wr(n).position === "static"; )
    n = qf(n);
  return n && (ar(n) === "html" || ar(n) === "body" && wr(n).position === "static") ? t : n || wT(e) || t;
}
function ed(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function Oi(e, t, n) {
  return oo(e, ya(t, n));
}
function ST(e, t, n) {
  var r = Oi(e, t, n);
  return r > n ? n : r;
}
function dg() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function fg(e) {
  return Object.assign({}, dg(), e);
}
function pg(e, t) {
  return t.reduce(function(n, r) {
    return n[r] = e, n;
  }, {});
}
var TT = function(t, n) {
  return t = typeof t == "function" ? t(Object.assign({}, n.rects, {
    placement: n.placement
  })) : t, fg(typeof t != "number" ? t : pg(t, us));
};
function ET(e) {
  var t, n = e.state, r = e.name, o = e.options, s = n.elements.arrow, a = n.modifiersData.popperOffsets, l = nr(n.placement), c = ed(l), u = [an, Pn].indexOf(l) >= 0, f = u ? "height" : "width";
  if (!(!s || !a)) {
    var d = TT(o.padding, n), h = Zu(s), g = c === "y" ? sn : an, y = c === "y" ? In : Pn, m = n.rects.reference[f] + n.rects.reference[c] - a[c] - n.rects.popper[f], b = a[c] - n.rects.reference[c], v = ds(s), E = v ? c === "y" ? v.clientHeight || 0 : v.clientWidth || 0 : 0, S = m / 2 - b / 2, w = d[g], x = E - h[f] - d[y], T = E / 2 - h[f] / 2 + S, R = Oi(w, T, x), I = c;
    n.modifiersData[r] = (t = {}, t[I] = R, t.centerOffset = R - T, t);
  }
}
function CT(e) {
  var t = e.state, n = e.options, r = n.element, o = r === void 0 ? "[data-popper-arrow]" : r;
  o != null && (typeof o == "string" && (o = t.elements.popper.querySelector(o), !o) || ug(t.elements.popper, o) && (t.elements.arrow = o));
}
const OT = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: ET,
  effect: CT,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function Wo(e) {
  return e.split("-")[1];
}
var RT = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function $T(e, t) {
  var n = e.x, r = e.y, o = t.devicePixelRatio || 1;
  return {
    x: Vo(n * o) / o || 0,
    y: Vo(r * o) / o || 0
  };
}
function Gf(e) {
  var t, n = e.popper, r = e.popperRect, o = e.placement, s = e.variation, a = e.offsets, l = e.position, c = e.gpuAcceleration, u = e.adaptive, f = e.roundOffsets, d = e.isFixed, h = a.x, g = h === void 0 ? 0 : h, y = a.y, m = y === void 0 ? 0 : y, b = typeof f == "function" ? f({
    x: g,
    y: m
  }) : {
    x: g,
    y: m
  };
  g = b.x, m = b.y;
  var v = a.hasOwnProperty("x"), E = a.hasOwnProperty("y"), S = an, w = sn, x = window;
  if (u) {
    var T = ds(n), R = "clientHeight", I = "clientWidth";
    if (T === vn(n) && (T = Wr(n), wr(T).position !== "static" && l === "absolute" && (R = "scrollHeight", I = "scrollWidth")), T = T, o === sn || (o === an || o === Pn) && s === zi) {
      w = In;
      var N = d && T === x && x.visualViewport ? x.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        T[R]
      );
      m -= N - r.height, m *= c ? 1 : -1;
    }
    if (o === an || (o === sn || o === In) && s === zi) {
      S = Pn;
      var p = d && T === x && x.visualViewport ? x.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        T[I]
      );
      g -= p - r.width, g *= c ? 1 : -1;
    }
  }
  var O = Object.assign({
    position: l
  }, u && RT), $ = f === !0 ? $T({
    x: g,
    y: m
  }, vn(n)) : {
    x: g,
    y: m
  };
  if (g = $.x, m = $.y, c) {
    var A;
    return Object.assign({}, O, (A = {}, A[w] = E ? "0" : "", A[S] = v ? "0" : "", A.transform = (x.devicePixelRatio || 1) <= 1 ? "translate(" + g + "px, " + m + "px)" : "translate3d(" + g + "px, " + m + "px, 0)", A));
  }
  return Object.assign({}, O, (t = {}, t[w] = E ? m + "px" : "", t[S] = v ? g + "px" : "", t.transform = "", t));
}
function kT(e) {
  var t = e.state, n = e.options, r = n.gpuAcceleration, o = r === void 0 ? !0 : r, s = n.adaptive, a = s === void 0 ? !0 : s, l = n.roundOffsets, c = l === void 0 ? !0 : l, u = {
    placement: nr(t.placement),
    variation: Wo(t.placement),
    popper: t.elements.popper,
    popperRect: t.rects.popper,
    gpuAcceleration: o,
    isFixed: t.options.strategy === "fixed"
  };
  t.modifiersData.popperOffsets != null && (t.styles.popper = Object.assign({}, t.styles.popper, Gf(Object.assign({}, u, {
    offsets: t.modifiersData.popperOffsets,
    position: t.options.strategy,
    adaptive: a,
    roundOffsets: c
  })))), t.modifiersData.arrow != null && (t.styles.arrow = Object.assign({}, t.styles.arrow, Gf(Object.assign({}, u, {
    offsets: t.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: c
  })))), t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-placement": t.placement
  });
}
const IT = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: kT,
  data: {}
};
var _s = {
  passive: !0
};
function PT(e) {
  var t = e.state, n = e.instance, r = e.options, o = r.scroll, s = o === void 0 ? !0 : o, a = r.resize, l = a === void 0 ? !0 : a, c = vn(t.elements.popper), u = [].concat(t.scrollParents.reference, t.scrollParents.popper);
  return s && u.forEach(function(f) {
    f.addEventListener("scroll", n.update, _s);
  }), l && c.addEventListener("resize", n.update, _s), function() {
    s && u.forEach(function(f) {
      f.removeEventListener("scroll", n.update, _s);
    }), l && c.removeEventListener("resize", n.update, _s);
  };
}
const NT = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: PT,
  data: {}
};
var AT = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function ta(e) {
  return e.replace(/left|right|bottom|top/g, function(t) {
    return AT[t];
  });
}
var MT = {
  start: "end",
  end: "start"
};
function Yf(e) {
  return e.replace(/start|end/g, function(t) {
    return MT[t];
  });
}
function td(e) {
  var t = vn(e), n = t.pageXOffset, r = t.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: r
  };
}
function nd(e) {
  return zo(Wr(e)).left + td(e).scrollLeft;
}
function _T(e, t) {
  var n = vn(e), r = Wr(e), o = n.visualViewport, s = r.clientWidth, a = r.clientHeight, l = 0, c = 0;
  if (o) {
    s = o.width, a = o.height;
    var u = cg();
    (u || !u && t === "fixed") && (l = o.offsetLeft, c = o.offsetTop);
  }
  return {
    width: s,
    height: a,
    x: l + nd(e),
    y: c
  };
}
function DT(e) {
  var t, n = Wr(e), r = td(e), o = (t = e.ownerDocument) == null ? void 0 : t.body, s = oo(n.scrollWidth, n.clientWidth, o ? o.scrollWidth : 0, o ? o.clientWidth : 0), a = oo(n.scrollHeight, n.clientHeight, o ? o.scrollHeight : 0, o ? o.clientHeight : 0), l = -r.scrollLeft + nd(e), c = -r.scrollTop;
  return wr(o || n).direction === "rtl" && (l += oo(n.clientWidth, o ? o.clientWidth : 0) - s), {
    width: s,
    height: a,
    x: l,
    y: c
  };
}
function rd(e) {
  var t = wr(e), n = t.overflow, r = t.overflowX, o = t.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + o + r);
}
function mg(e) {
  return ["html", "body", "#document"].indexOf(ar(e)) >= 0 ? e.ownerDocument.body : kn(e) && rd(e) ? e : mg(ol(e));
}
function Ri(e, t) {
  var n;
  t === void 0 && (t = []);
  var r = mg(e), o = r === ((n = e.ownerDocument) == null ? void 0 : n.body), s = vn(r), a = o ? [s].concat(s.visualViewport || [], rd(r) ? r : []) : r, l = t.concat(a);
  return o ? l : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    l.concat(Ri(ol(a)))
  );
}
function Hc(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function BT(e, t) {
  var n = zo(e, !1, t === "fixed");
  return n.top = n.top + e.clientTop, n.left = n.left + e.clientLeft, n.bottom = n.top + e.clientHeight, n.right = n.left + e.clientWidth, n.width = e.clientWidth, n.height = e.clientHeight, n.x = n.left, n.y = n.top, n;
}
function Kf(e, t, n) {
  return t === ag ? Hc(_T(e, n)) : so(t) ? BT(t, n) : Hc(DT(Wr(e)));
}
function FT(e) {
  var t = Ri(ol(e)), n = ["absolute", "fixed"].indexOf(wr(e).position) >= 0, r = n && kn(e) ? ds(e) : e;
  return so(r) ? t.filter(function(o) {
    return so(o) && ug(o, r) && ar(o) !== "body";
  }) : [];
}
function jT(e, t, n, r) {
  var o = t === "clippingParents" ? FT(e) : [].concat(t), s = [].concat(o, [n]), a = s[0], l = s.reduce(function(c, u) {
    var f = Kf(e, u, r);
    return c.top = oo(f.top, c.top), c.right = ya(f.right, c.right), c.bottom = ya(f.bottom, c.bottom), c.left = oo(f.left, c.left), c;
  }, Kf(e, a, r));
  return l.width = l.right - l.left, l.height = l.bottom - l.top, l.x = l.left, l.y = l.top, l;
}
function hg(e) {
  var t = e.reference, n = e.element, r = e.placement, o = r ? nr(r) : null, s = r ? Wo(r) : null, a = t.x + t.width / 2 - n.width / 2, l = t.y + t.height / 2 - n.height / 2, c;
  switch (o) {
    case sn:
      c = {
        x: a,
        y: t.y - n.height
      };
      break;
    case In:
      c = {
        x: a,
        y: t.y + t.height
      };
      break;
    case Pn:
      c = {
        x: t.x + t.width,
        y: l
      };
      break;
    case an:
      c = {
        x: t.x - n.width,
        y: l
      };
      break;
    default:
      c = {
        x: t.x,
        y: t.y
      };
  }
  var u = o ? ed(o) : null;
  if (u != null) {
    var f = u === "y" ? "height" : "width";
    switch (s) {
      case Lo:
        c[u] = c[u] - (t[f] / 2 - n[f] / 2);
        break;
      case zi:
        c[u] = c[u] + (t[f] / 2 - n[f] / 2);
        break;
    }
  }
  return c;
}
function Wi(e, t) {
  t === void 0 && (t = {});
  var n = t, r = n.placement, o = r === void 0 ? e.placement : r, s = n.strategy, a = s === void 0 ? e.strategy : s, l = n.boundary, c = l === void 0 ? iT : l, u = n.rootBoundary, f = u === void 0 ? ag : u, d = n.elementContext, h = d === void 0 ? si : d, g = n.altBoundary, y = g === void 0 ? !1 : g, m = n.padding, b = m === void 0 ? 0 : m, v = fg(typeof b != "number" ? b : pg(b, us)), E = h === si ? sT : si, S = e.rects.popper, w = e.elements[y ? E : h], x = jT(so(w) ? w : w.contextElement || Wr(e.elements.popper), c, f, a), T = zo(e.elements.reference), R = hg({
    reference: T,
    element: S,
    placement: o
  }), I = Hc(Object.assign({}, S, R)), N = h === si ? I : T, p = {
    top: x.top - N.top + v.top,
    bottom: N.bottom - x.bottom + v.bottom,
    left: x.left - N.left + v.left,
    right: N.right - x.right + v.right
  }, O = e.modifiersData.offset;
  if (h === si && O) {
    var $ = O[o];
    Object.keys(p).forEach(function(A) {
      var D = [Pn, In].indexOf(A) >= 0 ? 1 : -1, M = [sn, In].indexOf(A) >= 0 ? "y" : "x";
      p[A] += $[M] * D;
    });
  }
  return p;
}
function LT(e, t) {
  t === void 0 && (t = {});
  var n = t, r = n.placement, o = n.boundary, s = n.rootBoundary, a = n.padding, l = n.flipVariations, c = n.allowedAutoPlacements, u = c === void 0 ? lg : c, f = Wo(r), d = f ? l ? Hf : Hf.filter(function(y) {
    return Wo(y) === f;
  }) : us, h = d.filter(function(y) {
    return u.indexOf(y) >= 0;
  });
  h.length === 0 && (h = d);
  var g = h.reduce(function(y, m) {
    return y[m] = Wi(e, {
      placement: m,
      boundary: o,
      rootBoundary: s,
      padding: a
    })[nr(m)], y;
  }, {});
  return Object.keys(g).sort(function(y, m) {
    return g[y] - g[m];
  });
}
function VT(e) {
  if (nr(e) === Qu)
    return [];
  var t = ta(e);
  return [Yf(e), t, Yf(t)];
}
function zT(e) {
  var t = e.state, n = e.options, r = e.name;
  if (!t.modifiersData[r]._skip) {
    for (var o = n.mainAxis, s = o === void 0 ? !0 : o, a = n.altAxis, l = a === void 0 ? !0 : a, c = n.fallbackPlacements, u = n.padding, f = n.boundary, d = n.rootBoundary, h = n.altBoundary, g = n.flipVariations, y = g === void 0 ? !0 : g, m = n.allowedAutoPlacements, b = t.options.placement, v = nr(b), E = v === b, S = c || (E || !y ? [ta(b)] : VT(b)), w = [b].concat(S).reduce(function(te, X) {
      return te.concat(nr(X) === Qu ? LT(t, {
        placement: X,
        boundary: f,
        rootBoundary: d,
        padding: u,
        flipVariations: y,
        allowedAutoPlacements: m
      }) : X);
    }, []), x = t.rects.reference, T = t.rects.popper, R = /* @__PURE__ */ new Map(), I = !0, N = w[0], p = 0; p < w.length; p++) {
      var O = w[p], $ = nr(O), A = Wo(O) === Lo, D = [sn, In].indexOf($) >= 0, M = D ? "width" : "height", _ = Wi(t, {
        placement: O,
        boundary: f,
        rootBoundary: d,
        altBoundary: h,
        padding: u
      }), L = D ? A ? Pn : an : A ? In : sn;
      x[M] > T[M] && (L = ta(L));
      var U = ta(L), z = [];
      if (s && z.push(_[$] <= 0), l && z.push(_[L] <= 0, _[U] <= 0), z.every(function(te) {
        return te;
      })) {
        N = O, I = !1;
        break;
      }
      R.set(O, z);
    }
    if (I)
      for (var j = y ? 3 : 1, V = function(X) {
        var ee = w.find(function(re) {
          var q = R.get(re);
          if (q)
            return q.slice(0, X).every(function(Q) {
              return Q;
            });
        });
        if (ee)
          return N = ee, "break";
      }, K = j; K > 0; K--) {
        var Y = V(K);
        if (Y === "break") break;
      }
    t.placement !== N && (t.modifiersData[r]._skip = !0, t.placement = N, t.reset = !0);
  }
}
const WT = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: zT,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function Xf(e, t, n) {
  return n === void 0 && (n = {
    x: 0,
    y: 0
  }), {
    top: e.top - t.height - n.y,
    right: e.right - t.width + n.x,
    bottom: e.bottom - t.height + n.y,
    left: e.left - t.width - n.x
  };
}
function Qf(e) {
  return [sn, Pn, In, an].some(function(t) {
    return e[t] >= 0;
  });
}
function UT(e) {
  var t = e.state, n = e.name, r = t.rects.reference, o = t.rects.popper, s = t.modifiersData.preventOverflow, a = Wi(t, {
    elementContext: "reference"
  }), l = Wi(t, {
    altBoundary: !0
  }), c = Xf(a, r), u = Xf(l, o, s), f = Qf(c), d = Qf(u);
  t.modifiersData[n] = {
    referenceClippingOffsets: c,
    popperEscapeOffsets: u,
    isReferenceHidden: f,
    hasPopperEscaped: d
  }, t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-reference-hidden": f,
    "data-popper-escaped": d
  });
}
const HT = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: UT
};
function qT(e, t, n) {
  var r = nr(e), o = [an, sn].indexOf(r) >= 0 ? -1 : 1, s = typeof n == "function" ? n(Object.assign({}, t, {
    placement: e
  })) : n, a = s[0], l = s[1];
  return a = a || 0, l = (l || 0) * o, [an, Pn].indexOf(r) >= 0 ? {
    x: l,
    y: a
  } : {
    x: a,
    y: l
  };
}
function GT(e) {
  var t = e.state, n = e.options, r = e.name, o = n.offset, s = o === void 0 ? [0, 0] : o, a = lg.reduce(function(f, d) {
    return f[d] = qT(d, t.rects, s), f;
  }, {}), l = a[t.placement], c = l.x, u = l.y;
  t.modifiersData.popperOffsets != null && (t.modifiersData.popperOffsets.x += c, t.modifiersData.popperOffsets.y += u), t.modifiersData[r] = a;
}
const YT = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: GT
};
function KT(e) {
  var t = e.state, n = e.name;
  t.modifiersData[n] = hg({
    reference: t.rects.reference,
    element: t.rects.popper,
    placement: t.placement
  });
}
const XT = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: KT,
  data: {}
};
function QT(e) {
  return e === "x" ? "y" : "x";
}
function JT(e) {
  var t = e.state, n = e.options, r = e.name, o = n.mainAxis, s = o === void 0 ? !0 : o, a = n.altAxis, l = a === void 0 ? !1 : a, c = n.boundary, u = n.rootBoundary, f = n.altBoundary, d = n.padding, h = n.tether, g = h === void 0 ? !0 : h, y = n.tetherOffset, m = y === void 0 ? 0 : y, b = Wi(t, {
    boundary: c,
    rootBoundary: u,
    padding: d,
    altBoundary: f
  }), v = nr(t.placement), E = Wo(t.placement), S = !E, w = ed(v), x = QT(w), T = t.modifiersData.popperOffsets, R = t.rects.reference, I = t.rects.popper, N = typeof m == "function" ? m(Object.assign({}, t.rects, {
    placement: t.placement
  })) : m, p = typeof N == "number" ? {
    mainAxis: N,
    altAxis: N
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, N), O = t.modifiersData.offset ? t.modifiersData.offset[t.placement] : null, $ = {
    x: 0,
    y: 0
  };
  if (T) {
    if (s) {
      var A, D = w === "y" ? sn : an, M = w === "y" ? In : Pn, _ = w === "y" ? "height" : "width", L = T[w], U = L + b[D], z = L - b[M], j = g ? -I[_] / 2 : 0, V = E === Lo ? R[_] : I[_], K = E === Lo ? -I[_] : -R[_], Y = t.elements.arrow, te = g && Y ? Zu(Y) : {
        width: 0,
        height: 0
      }, X = t.modifiersData["arrow#persistent"] ? t.modifiersData["arrow#persistent"].padding : dg(), ee = X[D], re = X[M], q = Oi(0, R[_], te[_]), Q = S ? R[_] / 2 - j - q - ee - p.mainAxis : V - q - ee - p.mainAxis, G = S ? -R[_] / 2 + j + q + re + p.mainAxis : K + q + re + p.mainAxis, ne = t.elements.arrow && ds(t.elements.arrow), B = ne ? w === "y" ? ne.clientTop || 0 : ne.clientLeft || 0 : 0, pe = (A = O == null ? void 0 : O[w]) != null ? A : 0, ae = L + Q - pe - B, me = L + G - pe, Me = Oi(g ? ya(U, ae) : U, L, g ? oo(z, me) : z);
      T[w] = Me, $[w] = Me - L;
    }
    if (l) {
      var Re, Oe = w === "x" ? sn : an, we = w === "x" ? In : Pn, Pe = T[x], Se = x === "y" ? "height" : "width", P = Pe + b[Oe], W = Pe - b[we], H = [sn, an].indexOf(v) !== -1, le = (Re = O == null ? void 0 : O[x]) != null ? Re : 0, se = H ? P : Pe - R[Se] - I[Se] - le + p.altAxis, ie = H ? Pe + R[Se] + I[Se] - le - p.altAxis : W, ue = g && H ? ST(se, Pe, ie) : Oi(g ? se : P, Pe, g ? ie : W);
      T[x] = ue, $[x] = ue - Pe;
    }
    t.modifiersData[r] = $;
  }
}
const ZT = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: JT,
  requiresIfExists: ["offset"]
};
function e1(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function t1(e) {
  return e === vn(e) || !kn(e) ? td(e) : e1(e);
}
function n1(e) {
  var t = e.getBoundingClientRect(), n = Vo(t.width) / e.offsetWidth || 1, r = Vo(t.height) / e.offsetHeight || 1;
  return n !== 1 || r !== 1;
}
function r1(e, t, n) {
  n === void 0 && (n = !1);
  var r = kn(t), o = kn(t) && n1(t), s = Wr(t), a = zo(e, o, n), l = {
    scrollLeft: 0,
    scrollTop: 0
  }, c = {
    x: 0,
    y: 0
  };
  return (r || !r && !n) && ((ar(t) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  rd(s)) && (l = t1(t)), kn(t) ? (c = zo(t, !0), c.x += t.clientLeft, c.y += t.clientTop) : s && (c.x = nd(s))), {
    x: a.left + l.scrollLeft - c.x,
    y: a.top + l.scrollTop - c.y,
    width: a.width,
    height: a.height
  };
}
function o1(e) {
  var t = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), r = [];
  e.forEach(function(s) {
    t.set(s.name, s);
  });
  function o(s) {
    n.add(s.name);
    var a = [].concat(s.requires || [], s.requiresIfExists || []);
    a.forEach(function(l) {
      if (!n.has(l)) {
        var c = t.get(l);
        c && o(c);
      }
    }), r.push(s);
  }
  return e.forEach(function(s) {
    n.has(s.name) || o(s);
  }), r;
}
function i1(e) {
  var t = o1(e);
  return gT.reduce(function(n, r) {
    return n.concat(t.filter(function(o) {
      return o.phase === r;
    }));
  }, []);
}
function s1(e) {
  var t;
  return function() {
    return t || (t = new Promise(function(n) {
      Promise.resolve().then(function() {
        t = void 0, n(e());
      });
    })), t;
  };
}
function a1(e) {
  var t = e.reduce(function(n, r) {
    var o = n[r.name];
    return n[r.name] = o ? Object.assign({}, o, r, {
      options: Object.assign({}, o.options, r.options),
      data: Object.assign({}, o.data, r.data)
    }) : r, n;
  }, {});
  return Object.keys(t).map(function(n) {
    return t[n];
  });
}
var Jf = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function Zf() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return !t.some(function(r) {
    return !(r && typeof r.getBoundingClientRect == "function");
  });
}
function l1(e) {
  e === void 0 && (e = {});
  var t = e, n = t.defaultModifiers, r = n === void 0 ? [] : n, o = t.defaultOptions, s = o === void 0 ? Jf : o;
  return function(l, c, u) {
    u === void 0 && (u = s);
    var f = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, Jf, s),
      modifiersData: {},
      elements: {
        reference: l,
        popper: c
      },
      attributes: {},
      styles: {}
    }, d = [], h = !1, g = {
      state: f,
      setOptions: function(v) {
        var E = typeof v == "function" ? v(f.options) : v;
        m(), f.options = Object.assign({}, s, f.options, E), f.scrollParents = {
          reference: so(l) ? Ri(l) : l.contextElement ? Ri(l.contextElement) : [],
          popper: Ri(c)
        };
        var S = i1(a1([].concat(r, f.options.modifiers)));
        return f.orderedModifiers = S.filter(function(w) {
          return w.enabled;
        }), y(), g.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!h) {
          var v = f.elements, E = v.reference, S = v.popper;
          if (Zf(E, S)) {
            f.rects = {
              reference: r1(E, ds(S), f.options.strategy === "fixed"),
              popper: Zu(S)
            }, f.reset = !1, f.placement = f.options.placement, f.orderedModifiers.forEach(function(p) {
              return f.modifiersData[p.name] = Object.assign({}, p.data);
            });
            for (var w = 0; w < f.orderedModifiers.length; w++) {
              if (f.reset === !0) {
                f.reset = !1, w = -1;
                continue;
              }
              var x = f.orderedModifiers[w], T = x.fn, R = x.options, I = R === void 0 ? {} : R, N = x.name;
              typeof T == "function" && (f = T({
                state: f,
                options: I,
                name: N,
                instance: g
              }) || f);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: s1(function() {
        return new Promise(function(b) {
          g.forceUpdate(), b(f);
        });
      }),
      destroy: function() {
        m(), h = !0;
      }
    };
    if (!Zf(l, c))
      return g;
    g.setOptions(u).then(function(b) {
      !h && u.onFirstUpdate && u.onFirstUpdate(b);
    });
    function y() {
      f.orderedModifiers.forEach(function(b) {
        var v = b.name, E = b.options, S = E === void 0 ? {} : E, w = b.effect;
        if (typeof w == "function") {
          var x = w({
            state: f,
            name: v,
            instance: g,
            options: S
          }), T = function() {
          };
          d.push(x || T);
        }
      });
    }
    function m() {
      d.forEach(function(b) {
        return b();
      }), d = [];
    }
    return g;
  };
}
var c1 = [NT, XT, IT, vT, YT, WT, ZT, OT, HT], u1 = /* @__PURE__ */ l1({
  defaultModifiers: c1
});
function d1(e) {
  return typeof e == "function" ? e() : e;
}
const Ui = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    children: r,
    container: o,
    disablePortal: s = !1
  } = t, [a, l] = C.useState(null), c = Kt(/* @__PURE__ */ C.isValidElement(r) ? uo(r) : null, n);
  if (ir(() => {
    s || l(d1(o) || document.body);
  }, [o, s]), ir(() => {
    if (a && !s)
      return _c(n, a), () => {
        _c(n, null);
      };
  }, [n, a, s]), s) {
    if (/* @__PURE__ */ C.isValidElement(r)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ C.cloneElement(r, u);
    }
    return r;
  }
  return a && /* @__PURE__ */ Jm.createPortal(r, a);
});
process.env.NODE_ENV !== "production" && (Ui.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: i.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([vr, i.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool
});
process.env.NODE_ENV !== "production" && (Ui.propTypes = ls(Ui.propTypes));
function f1(e) {
  return wt("MuiPopper", e);
}
Et("MuiPopper", ["root"]);
function p1(e, t) {
  if (t === "ltr")
    return e;
  switch (e) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return e;
  }
}
function ba(e) {
  return typeof e == "function" ? e() : e;
}
function il(e) {
  return e.nodeType !== void 0;
}
function m1(e) {
  return !il(e);
}
const h1 = (e) => {
  const {
    classes: t
  } = e;
  return Pt({
    root: ["root"]
  }, f1, t);
}, g1 = {}, y1 = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    anchorEl: r,
    children: o,
    direction: s,
    disablePortal: a,
    modifiers: l,
    open: c,
    placement: u,
    popperOptions: f,
    popperRef: d,
    slotProps: h = {},
    slots: g = {},
    TransitionProps: y,
    // @ts-ignore internal logic
    ownerState: m,
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
    ...b
  } = t, v = C.useRef(null), E = Kt(v, n), S = C.useRef(null), w = Kt(S, d), x = C.useRef(w);
  ir(() => {
    x.current = w;
  }, [w]), C.useImperativeHandle(d, () => S.current, []);
  const T = p1(u, s), [R, I] = C.useState(T), [N, p] = C.useState(ba(r));
  C.useEffect(() => {
    S.current && S.current.forceUpdate();
  }), C.useEffect(() => {
    r && p(ba(r));
  }, [r]), ir(() => {
    if (!N || !c)
      return;
    const M = (U) => {
      I(U.placement);
    };
    if (process.env.NODE_ENV !== "production" && N && il(N) && N.nodeType === 1) {
      const U = N.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && U.top === 0 && U.left === 0 && U.right === 0 && U.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    let _ = [{
      name: "preventOverflow",
      options: {
        altBoundary: a
      }
    }, {
      name: "flip",
      options: {
        altBoundary: a
      }
    }, {
      name: "onUpdate",
      enabled: !0,
      phase: "afterWrite",
      fn: ({
        state: U
      }) => {
        M(U);
      }
    }];
    l != null && (_ = _.concat(l)), f && f.modifiers != null && (_ = _.concat(f.modifiers));
    const L = u1(N, v.current, {
      placement: T,
      ...f,
      modifiers: _
    });
    return x.current(L), () => {
      L.destroy(), x.current(null);
    };
  }, [N, a, l, c, f, T]);
  const O = {
    placement: R
  };
  y !== null && (O.TransitionProps = y);
  const $ = h1(t), A = g.root ?? "div", D = pw({
    elementType: A,
    externalSlotProps: h.root,
    externalForwardedProps: b,
    additionalProps: {
      role: "tooltip",
      ref: E
    },
    ownerState: t,
    className: $.root
  });
  return /* @__PURE__ */ k(A, {
    ...D,
    children: typeof o == "function" ? o(O) : o
  });
}), gg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    anchorEl: r,
    children: o,
    container: s,
    direction: a = "ltr",
    disablePortal: l = !1,
    keepMounted: c = !1,
    modifiers: u,
    open: f,
    placement: d = "bottom",
    popperOptions: h = g1,
    popperRef: g,
    style: y,
    transition: m = !1,
    slotProps: b = {},
    slots: v = {},
    ...E
  } = t, [S, w] = C.useState(!0), x = () => {
    w(!1);
  }, T = () => {
    w(!0);
  };
  if (!c && !f && (!m || S))
    return null;
  let R;
  if (s)
    R = s;
  else if (r) {
    const p = ba(r);
    R = p && il(p) ? on(p).body : on(null).body;
  }
  const I = !f && c && (!m || S) ? "none" : void 0, N = m ? {
    in: f,
    onEnter: x,
    onExited: T
  } : void 0;
  return /* @__PURE__ */ k(Ui, {
    disablePortal: l,
    container: R,
    children: /* @__PURE__ */ k(y1, {
      anchorEl: r,
      direction: a,
      disablePortal: l,
      modifiers: u,
      ref: n,
      open: m ? !S : f,
      placement: d,
      popperOptions: h,
      popperRef: g,
      slotProps: b,
      slots: v,
      ...E,
      style: {
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: I,
        ...y
      },
      TransitionProps: N,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (gg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: Vr(i.oneOfType([vr, i.object, i.func]), (e) => {
    if (e.open) {
      const t = ba(e.anchorEl);
      if (t && il(t) && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || m1(t) && t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join(`
`));
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: i.oneOfType([i.node, i.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([vr, i.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: i.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: i.arrayOf(i.shape({
    data: i.object,
    effect: i.func,
    enabled: i.bool,
    fn: i.func,
    name: i.any,
    options: i.object,
    phase: i.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: i.arrayOf(i.string),
    requiresIfExists: i.arrayOf(i.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: i.shape({
    modifiers: i.array,
    onFirstUpdate: i.func,
    placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: i.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Or,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: i.bool
});
const b1 = $e(gg, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), sl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Lu(), o = Ct({
    props: t,
    name: "MuiPopper"
  }), {
    anchorEl: s,
    component: a,
    components: l,
    componentsProps: c,
    container: u,
    disablePortal: f,
    keepMounted: d,
    modifiers: h,
    open: g,
    placement: y,
    popperOptions: m,
    popperRef: b,
    transition: v,
    slots: E,
    slotProps: S,
    ...w
  } = o, x = (E == null ? void 0 : E.root) ?? (l == null ? void 0 : l.Root), T = {
    anchorEl: s,
    container: u,
    disablePortal: f,
    keepMounted: d,
    modifiers: h,
    open: g,
    placement: y,
    popperOptions: m,
    popperRef: b,
    transition: v,
    ...w
  };
  return /* @__PURE__ */ k(b1, {
    as: a,
    direction: r ? "rtl" : "ltr",
    slots: {
      root: x
    },
    slotProps: S ?? c,
    ...T,
    ref: n
  });
});
process.env.NODE_ENV !== "production" && (sl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: i.oneOfType([vr, i.object, i.func]),
  /**
   * Popper render function or node.
   */
  children: i.oneOfType([i.node, i.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  components: i.shape({
    Root: i.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  componentsProps: i.shape({
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([vr, i.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: i.arrayOf(i.shape({
    data: i.object,
    effect: i.func,
    enabled: i.bool,
    fn: i.func,
    name: i.any,
    options: i.object,
    phase: i.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: i.arrayOf(i.string),
    requiresIfExists: i.arrayOf(i.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: i.shape({
    modifiers: i.array,
    onFirstUpdate: i.func,
    placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: i.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: Or,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: i.bool
});
function Ds(e) {
  return parseInt(e, 10) || 0;
}
const v1 = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function x1(e) {
  for (const t in e)
    return !1;
  return !0;
}
function ep(e) {
  return x1(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const yg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    onChange: r,
    maxRows: o,
    minRows: s = 1,
    style: a,
    value: l,
    ...c
  } = t, {
    current: u
  } = C.useRef(l != null), f = C.useRef(null), d = Kt(n, f), h = C.useRef(null), g = C.useRef(null), y = C.useCallback(() => {
    const S = f.current, w = g.current;
    if (!S || !w)
      return;
    const T = sr(S).getComputedStyle(S);
    if (T.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    w.style.width = T.width, w.value = S.value || t.placeholder || "x", w.value.slice(-1) === `
` && (w.value += " ");
    const R = T.boxSizing, I = Ds(T.paddingBottom) + Ds(T.paddingTop), N = Ds(T.borderBottomWidth) + Ds(T.borderTopWidth), p = w.scrollHeight;
    w.value = "x";
    const O = w.scrollHeight;
    let $ = p;
    s && ($ = Math.max(Number(s) * O, $)), o && ($ = Math.min(Number(o) * O, $)), $ = Math.max($, O);
    const A = $ + (R === "border-box" ? I + N : 0), D = Math.abs($ - p) <= 1;
    return {
      outerHeightStyle: A,
      overflowing: D
    };
  }, [o, s, t.placeholder]), m = tr(() => {
    const S = f.current, w = y();
    if (!S || !w || ep(w))
      return !1;
    const x = w.outerHeightStyle;
    return h.current != null && h.current !== x;
  }), b = C.useCallback(() => {
    const S = f.current, w = y();
    if (!S || !w || ep(w))
      return;
    const x = w.outerHeightStyle;
    h.current !== x && (h.current = x, S.style.height = `${x}px`), S.style.overflow = w.overflowing ? "hidden" : "";
  }, [y]), v = C.useRef(-1);
  ir(() => {
    const S = _u(b), w = f == null ? void 0 : f.current;
    if (!w)
      return;
    const x = sr(w);
    x.addEventListener("resize", S);
    let T;
    return typeof ResizeObserver < "u" && (T = new ResizeObserver(() => {
      m() && (T.unobserve(w), cancelAnimationFrame(v.current), b(), v.current = requestAnimationFrame(() => {
        T.observe(w);
      }));
    }), T.observe(w)), () => {
      S.clear(), cancelAnimationFrame(v.current), x.removeEventListener("resize", S), T && T.disconnect();
    };
  }, [y, b, m]), ir(() => {
    b();
  });
  const E = (S) => {
    u || b(), r && r(S);
  };
  return /* @__PURE__ */ Ce(C.Fragment, {
    children: [/* @__PURE__ */ k("textarea", {
      value: l,
      onChange: E,
      ref: d,
      rows: s,
      style: a,
      ...c
    }), /* @__PURE__ */ k("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: g,
      tabIndex: -1,
      style: {
        ...v1.shadow,
        ...a,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (yg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: i.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  onChange: i.func,
  /**
   * @ignore
   */
  placeholder: i.string,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * @ignore
   */
  value: i.oneOfType([i.arrayOf(i.string), i.number, i.string])
});
function qc(e) {
  return typeof e == "string";
}
function bg({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((r, o) => (r[o] = e[o], n && typeof e[o] > "u" && (r[o] = n[o]), r), {});
}
const od = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (od.displayName = "FormControlContext");
function al() {
  return C.useContext(od);
}
function tp(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function w1(e, t = !1) {
  return e && (tp(e.value) && e.value !== "" || t && tp(e.defaultValue) && e.defaultValue !== "");
}
function S1(e) {
  return wt("MuiInputBase", e);
}
const va = Et("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var np;
const vg = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${ve(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, xg = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, T1 = (e) => {
  const {
    classes: t,
    color: n,
    disabled: r,
    error: o,
    endAdornment: s,
    focused: a,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: f,
    readOnly: d,
    size: h,
    startAdornment: g,
    type: y
  } = e, m = {
    root: ["root", `color${ve(n)}`, r && "disabled", o && "error", c && "fullWidth", a && "focused", l && "formControl", h && h !== "medium" && `size${ve(h)}`, f && "multiline", g && "adornedStart", s && "adornedEnd", u && "hiddenLabel", d && "readOnly"],
    input: ["input", r && "disabled", y === "search" && "inputTypeSearch", f && "inputMultiline", h === "small" && "inputSizeSmall", u && "inputHiddenLabel", g && "inputAdornedStart", s && "inputAdornedEnd", d && "readOnly"]
  };
  return Pt(m, S1, t);
}, wg = $e("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: vg
})(lt(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${va.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), Sg = $e("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: xg
})(lt(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, r = {
    opacity: "0 !important"
  }, o = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${va.formControl} &`]: {
      "&::-webkit-input-placeholder": r,
      "&::-moz-placeholder": r,
      // Firefox 19+
      "&::-ms-input-placeholder": r,
      // Edge
      "&:focus::-webkit-input-placeholder": o,
      "&:focus::-moz-placeholder": o,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": o
      // Edge
    },
    [`&.${va.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: s
      }) => !s.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), rp = Hu({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), Tg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ct({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": o,
    autoComplete: s,
    autoFocus: a,
    className: l,
    color: c,
    components: u = {},
    componentsProps: f = {},
    defaultValue: d,
    disabled: h,
    disableInjectingGlobalStyles: g,
    endAdornment: y,
    error: m,
    fullWidth: b = !1,
    id: v,
    inputComponent: E = "input",
    inputProps: S = {},
    inputRef: w,
    margin: x,
    maxRows: T,
    minRows: R,
    multiline: I = !1,
    name: N,
    onBlur: p,
    onChange: O,
    onClick: $,
    onFocus: A,
    onKeyDown: D,
    onKeyUp: M,
    placeholder: _,
    readOnly: L,
    renderSuffix: U,
    rows: z,
    size: j,
    slotProps: V = {},
    slots: K = {},
    startAdornment: Y,
    type: te = "text",
    value: X,
    ...ee
  } = r, re = S.value != null ? S.value : X, {
    current: q
  } = C.useRef(re != null), Q = C.useRef(), G = C.useCallback((oe) => {
    process.env.NODE_ENV !== "production" && oe && oe.nodeName !== "INPUT" && !oe.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), ne = Kt(Q, w, S.ref, G), [B, pe] = C.useState(!1), ae = al();
  process.env.NODE_ENV !== "production" && C.useEffect(() => {
    if (ae)
      return ae.registerEffect();
  }, [ae]);
  const me = bg({
    props: r,
    muiFormControl: ae,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  me.focused = ae ? ae.focused : B, C.useEffect(() => {
    !ae && h && B && (pe(!1), p && p());
  }, [ae, h, B, p]);
  const Me = ae && ae.onFilled, Re = ae && ae.onEmpty, Oe = C.useCallback((oe) => {
    w1(oe) ? Me && Me() : Re && Re();
  }, [Me, Re]);
  ir(() => {
    q && Oe({
      value: re
    });
  }, [re, Oe, q]);
  const we = (oe) => {
    A && A(oe), S.onFocus && S.onFocus(oe), ae && ae.onFocus ? ae.onFocus(oe) : pe(!0);
  }, Pe = (oe) => {
    p && p(oe), S.onBlur && S.onBlur(oe), ae && ae.onBlur ? ae.onBlur(oe) : pe(!1);
  }, Se = (oe, ...Le) => {
    if (!q) {
      const Ve = oe.target || Q.current;
      if (Ve == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : yr(1));
      Oe({
        value: Ve.value
      });
    }
    S.onChange && S.onChange(oe, ...Le), O && O(oe, ...Le);
  };
  C.useEffect(() => {
    Oe(Q.current);
  }, []);
  const P = (oe) => {
    Q.current && oe.currentTarget === oe.target && Q.current.focus(), $ && $(oe);
  };
  let W = E, H = S;
  I && W === "input" && (z ? (process.env.NODE_ENV !== "production" && (R || T) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), H = {
    type: void 0,
    minRows: z,
    maxRows: z,
    ...H
  }) : H = {
    type: void 0,
    maxRows: T,
    minRows: R,
    ...H
  }, W = yg);
  const le = (oe) => {
    Oe(oe.animationName === "mui-auto-fill-cancel" ? Q.current : {
      value: "x"
    });
  };
  C.useEffect(() => {
    ae && ae.setAdornedStart(!!Y);
  }, [ae, Y]);
  const se = {
    ...r,
    color: me.color || "primary",
    disabled: me.disabled,
    endAdornment: y,
    error: me.error,
    focused: me.focused,
    formControl: ae,
    fullWidth: b,
    hiddenLabel: me.hiddenLabel,
    multiline: I,
    size: me.size,
    startAdornment: Y,
    type: te
  }, ie = T1(se), ue = K.root || u.Root || wg, be = V.root || f.root || {}, xe = K.input || u.Input || Sg;
  return H = {
    ...H,
    ...V.input ?? f.input
  }, /* @__PURE__ */ Ce(C.Fragment, {
    children: [!g && typeof rp == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (np || (np = /* @__PURE__ */ k(rp, {}))), /* @__PURE__ */ Ce(ue, {
      ...be,
      ref: n,
      onClick: P,
      ...ee,
      ...!qc(ue) && {
        ownerState: {
          ...se,
          ...be.ownerState
        }
      },
      className: ge(ie.root, be.className, l, L && "MuiInputBase-readOnly"),
      children: [Y, /* @__PURE__ */ k(od.Provider, {
        value: null,
        children: /* @__PURE__ */ k(xe, {
          "aria-invalid": me.error,
          "aria-describedby": o,
          autoComplete: s,
          autoFocus: a,
          defaultValue: d,
          disabled: me.disabled,
          id: v,
          onAnimationStart: le,
          name: N,
          placeholder: _,
          readOnly: L,
          required: me.required,
          rows: z,
          value: re,
          onKeyDown: D,
          onKeyUp: M,
          type: te,
          ...H,
          ...!qc(xe) && {
            as: W,
            ownerState: {
              ...se,
              ...H.ownerState
            }
          },
          ref: ne,
          className: ge(ie.input, H.className, L && "MuiInputBase-readOnly"),
          onBlur: Pe,
          onChange: Se,
          onFocus: we
        })
      }), y, U ? U({
        ...me,
        startAdornment: Y
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (Tg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": i.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: Mu,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Or,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: i.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: i.func,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * @ignore
   */
  onKeyUp: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * @ignore
   */
  renderSuffix: i.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The size of the component.
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
function E1(e) {
  return wt("MuiOutlinedInput", e);
}
const Un = {
  ...va,
  ...Et("MuiOutlinedInput", ["root", "notchedOutline", "input"])
}, C1 = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, Uo = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Rr(), o = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: s,
    appear: a = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: f,
    onEntered: d,
    onEntering: h,
    onExit: g,
    onExited: y,
    onExiting: m,
    style: b,
    timeout: v = o,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: E = xn,
    ...S
  } = t, w = C.useRef(null), x = Kt(w, uo(l), n), T = (D) => (M) => {
    if (D) {
      const _ = w.current;
      M === void 0 ? D(_) : D(_, M);
    }
  }, R = T(h), I = T((D, M) => {
    Ku(D);
    const _ = jo({
      style: b,
      timeout: v,
      easing: c
    }, {
      mode: "enter"
    });
    D.style.webkitTransition = r.transitions.create("opacity", _), D.style.transition = r.transitions.create("opacity", _), f && f(D, M);
  }), N = T(d), p = T(m), O = T((D) => {
    const M = jo({
      style: b,
      timeout: v,
      easing: c
    }, {
      mode: "exit"
    });
    D.style.webkitTransition = r.transitions.create("opacity", M), D.style.transition = r.transitions.create("opacity", M), g && g(D);
  }), $ = T(y);
  return /* @__PURE__ */ k(E, {
    appear: a,
    in: u,
    nodeRef: w,
    onEnter: I,
    onEntered: N,
    onEntering: R,
    onExit: O,
    onExited: $,
    onExiting: p,
    addEndListener: (D) => {
      s && s(w.current, D);
    },
    timeout: v,
    ...S,
    children: (D, {
      ownerState: M,
      ..._
    }) => /* @__PURE__ */ C.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: D === "exited" && !u ? "hidden" : void 0,
        ...C1[D],
        ...b,
        ...l.props.style
      },
      ref: x,
      ..._
    })
  });
});
process.env.NODE_ENV !== "production" && (Uo.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: zr.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function O1(e) {
  return wt("MuiBackdrop", e);
}
Et("MuiBackdrop", ["root", "invisible"]);
const R1 = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return Pt({
    root: ["root", n && "invisible"]
  }, O1, t);
}, $1 = $e("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), id = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ct({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: o,
    className: s,
    component: a = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: f = {},
    slotProps: d = {},
    slots: h = {},
    TransitionComponent: g,
    transitionDuration: y,
    ...m
  } = r, b = {
    ...r,
    component: a,
    invisible: l
  }, v = R1(b), E = {
    transition: g,
    root: u.Root,
    ...h
  }, S = {
    ...f,
    ...d
  }, w = {
    slots: E,
    slotProps: S
  }, [x, T] = st("root", {
    elementType: $1,
    externalForwardedProps: w,
    className: ge(v.root, s),
    ownerState: b
  }), [R, I] = st("transition", {
    elementType: Uo,
    externalForwardedProps: w,
    ownerState: b
  });
  return /* @__PURE__ */ k(R, {
    in: c,
    timeout: y,
    ...m,
    ...I,
    children: /* @__PURE__ */ k(x, {
      "aria-hidden": !0,
      ...T,
      classes: v,
      ref: n,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (id.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    root: i.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: i.bool,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: i.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
const k1 = Et("MuiBox", ["root"]), I1 = rl(), Sr = Bx({
  themeId: jn,
  defaultTheme: I1,
  defaultClassName: k1.root,
  generateClassName: wh.generate
});
process.env.NODE_ENV !== "production" && (Sr.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function P1(e) {
  return wt("MuiButton", e);
}
const Xr = Et("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorSuccess", "colorError", "colorInfo", "colorWarning", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "icon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge", "loading", "loadingWrapper", "loadingIconPlaceholder", "loadingIndicator", "loadingPositionCenter", "loadingPositionStart", "loadingPositionEnd"]), Eg = /* @__PURE__ */ C.createContext({});
process.env.NODE_ENV !== "production" && (Eg.displayName = "ButtonGroupContext");
const Cg = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (Cg.displayName = "ButtonGroupButtonContext");
const N1 = (e) => {
  const {
    color: t,
    disableElevation: n,
    fullWidth: r,
    size: o,
    variant: s,
    loading: a,
    loadingPosition: l,
    classes: c
  } = e, u = {
    root: ["root", a && "loading", s, `${s}${ve(t)}`, `size${ve(o)}`, `${s}Size${ve(o)}`, `color${ve(t)}`, n && "disableElevation", r && "fullWidth", a && `loadingPosition${ve(l)}`],
    startIcon: ["icon", "startIcon", `iconSize${ve(o)}`],
    endIcon: ["icon", "endIcon", `iconSize${ve(o)}`],
    loadingIndicator: ["loadingIndicator"],
    loadingWrapper: ["loadingWrapper"]
  }, f = Pt(u, P1, c);
  return {
    ...c,
    // forward the focused, disabled, etc. classes to the ButtonBase
    ...f
  };
}, Og = [{
  props: {
    size: "small"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 18
    }
  }
}, {
  props: {
    size: "medium"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 20
    }
  }
}, {
  props: {
    size: "large"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 22
    }
  }
}], A1 = $e(Xu, {
  shouldForwardProp: (e) => ur(e) || e === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`${n.variant}${ve(n.color)}`], t[`size${ve(n.size)}`], t[`${n.variant}Size${ve(n.size)}`], n.color === "inherit" && t.colorInherit, n.disableElevation && t.disableElevation, n.fullWidth && t.fullWidth, n.loading && t.loading];
  }
})(lt(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[300] : e.palette.grey[800], n = e.palette.mode === "light" ? e.palette.grey.A100 : e.palette.grey[700];
  return {
    ...e.typography.button,
    minWidth: 64,
    padding: "6px 16px",
    border: 0,
    borderRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e.transitions.duration.short
    }),
    "&:hover": {
      textDecoration: "none"
    },
    [`&.${Xr.disabled}`]: {
      color: (e.vars || e).palette.action.disabled
    },
    variants: [{
      props: {
        variant: "contained"
      },
      style: {
        color: "var(--variant-containedColor)",
        backgroundColor: "var(--variant-containedBg)",
        boxShadow: (e.vars || e).shadows[2],
        "&:hover": {
          boxShadow: (e.vars || e).shadows[4],
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            boxShadow: (e.vars || e).shadows[2]
          }
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[8]
        },
        [`&.${Xr.focusVisible}`]: {
          boxShadow: (e.vars || e).shadows[6]
        },
        [`&.${Xr.disabled}`]: {
          color: (e.vars || e).palette.action.disabled,
          boxShadow: (e.vars || e).shadows[0],
          backgroundColor: (e.vars || e).palette.action.disabledBackground
        }
      }
    }, {
      props: {
        variant: "outlined"
      },
      style: {
        padding: "5px 15px",
        border: "1px solid currentColor",
        borderColor: "var(--variant-outlinedBorder, currentColor)",
        backgroundColor: "var(--variant-outlinedBg)",
        color: "var(--variant-outlinedColor)",
        [`&.${Xr.disabled}`]: {
          border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
        }
      }
    }, {
      props: {
        variant: "text"
      },
      style: {
        padding: "6px 8px",
        color: "var(--variant-textColor)",
        backgroundColor: "var(--variant-textBg)"
      }
    }, ...Object.entries(e.palette).filter(xr()).map(([r]) => ({
      props: {
        color: r
      },
      style: {
        "--variant-textColor": (e.vars || e).palette[r].main,
        "--variant-outlinedColor": (e.vars || e).palette[r].main,
        "--variant-outlinedBorder": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / 0.5)` : Vt(e.palette[r].main, 0.5),
        "--variant-containedColor": (e.vars || e).palette[r].contrastText,
        "--variant-containedBg": (e.vars || e).palette[r].main,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": (e.vars || e).palette[r].dark,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Vt(e.palette[r].main, e.palette.action.hoverOpacity),
            "--variant-outlinedBorder": (e.vars || e).palette[r].main,
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette[r].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Vt(e.palette[r].main, e.palette.action.hoverOpacity)
          }
        }
      }
    })), {
      props: {
        color: "inherit"
      },
      style: {
        color: "inherit",
        borderColor: "currentColor",
        "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedBg : t,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedHoverBg : n,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : Vt(e.palette.text.primary, e.palette.action.hoverOpacity),
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : Vt(e.palette.text.primary, e.palette.action.hoverOpacity)
          }
        }
      }
    }, {
      props: {
        size: "small",
        variant: "text"
      },
      style: {
        padding: "4px 5px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "text"
      },
      style: {
        padding: "8px 11px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "outlined"
      },
      style: {
        padding: "3px 9px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "outlined"
      },
      style: {
        padding: "7px 21px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "contained"
      },
      style: {
        padding: "4px 10px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "contained"
      },
      style: {
        padding: "8px 22px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        disableElevation: !0
      },
      style: {
        boxShadow: "none",
        "&:hover": {
          boxShadow: "none"
        },
        [`&.${Xr.focusVisible}`]: {
          boxShadow: "none"
        },
        "&:active": {
          boxShadow: "none"
        },
        [`&.${Xr.disabled}`]: {
          boxShadow: "none"
        }
      }
    }, {
      props: {
        fullWidth: !0
      },
      style: {
        width: "100%"
      }
    }, {
      props: {
        loadingPosition: "center"
      },
      style: {
        transition: e.transitions.create(["background-color", "box-shadow", "border-color"], {
          duration: e.transitions.duration.short
        }),
        [`&.${Xr.loading}`]: {
          color: "transparent"
        }
      }
    }]
  };
})), M1 = $e("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.startIcon, n.loading && t.startIconLoadingStart, t[`iconSize${ve(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginLeft: -2
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "start",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginRight: -8
    }
  }, ...Og]
})), _1 = $e("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.endIcon, n.loading && t.endIconLoadingEnd, t[`iconSize${ve(n.size)}`]];
  }
})(({
  theme: e
}) => ({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginRight: -2
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0
    },
    style: {
      transition: e.transitions.create(["opacity"], {
        duration: e.transitions.duration.short
      }),
      opacity: 0
    }
  }, {
    props: {
      loadingPosition: "end",
      loading: !0,
      fullWidth: !0
    },
    style: {
      marginLeft: -8
    }
  }, ...Og]
})), D1 = $e("span", {
  name: "MuiButton",
  slot: "LoadingIndicator",
  overridesResolver: (e, t) => t.loadingIndicator
})(({
  theme: e
}) => ({
  display: "none",
  position: "absolute",
  visibility: "visible",
  variants: [{
    props: {
      loading: !0
    },
    style: {
      display: "flex"
    }
  }, {
    props: {
      loadingPosition: "start"
    },
    style: {
      left: 14
    }
  }, {
    props: {
      loadingPosition: "start",
      size: "small"
    },
    style: {
      left: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "start"
    },
    style: {
      left: 6
    }
  }, {
    props: {
      loadingPosition: "center"
    },
    style: {
      left: "50%",
      transform: "translate(-50%)",
      color: (e.vars || e).palette.action.disabled
    }
  }, {
    props: {
      loadingPosition: "end"
    },
    style: {
      right: 14
    }
  }, {
    props: {
      loadingPosition: "end",
      size: "small"
    },
    style: {
      right: 10
    }
  }, {
    props: {
      variant: "text",
      loadingPosition: "end"
    },
    style: {
      right: 6
    }
  }, {
    props: {
      loadingPosition: "start",
      fullWidth: !0
    },
    style: {
      position: "relative",
      left: -10
    }
  }, {
    props: {
      loadingPosition: "end",
      fullWidth: !0
    },
    style: {
      position: "relative",
      right: -10
    }
  }]
})), op = $e("span", {
  name: "MuiButton",
  slot: "LoadingIconPlaceholder",
  overridesResolver: (e, t) => t.loadingIconPlaceholder
})({
  display: "inline-block",
  width: "1em",
  height: "1em"
}), sd = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = C.useContext(Eg), o = C.useContext(Cg), s = Li(r, t), a = Ct({
    props: s,
    name: "MuiButton"
  }), {
    children: l,
    color: c = "primary",
    component: u = "button",
    className: f,
    disabled: d = !1,
    disableElevation: h = !1,
    disableFocusRipple: g = !1,
    endIcon: y,
    focusVisibleClassName: m,
    fullWidth: b = !1,
    id: v,
    loading: E = null,
    loadingIndicator: S,
    loadingPosition: w = "center",
    size: x = "medium",
    startIcon: T,
    type: R,
    variant: I = "text",
    ...N
  } = a, p = Du(v), O = S ?? /* @__PURE__ */ k(ig, {
    "aria-labelledby": p,
    color: "inherit",
    size: 16
  }), $ = {
    ...a,
    color: c,
    component: u,
    disabled: d,
    disableElevation: h,
    disableFocusRipple: g,
    fullWidth: b,
    loading: E,
    loadingIndicator: O,
    loadingPosition: w,
    size: x,
    type: R,
    variant: I
  }, A = N1($), D = (T || E && w === "start") && /* @__PURE__ */ k(M1, {
    className: A.startIcon,
    ownerState: $,
    children: T || /* @__PURE__ */ k(op, {
      className: A.loadingIconPlaceholder,
      ownerState: $
    })
  }), M = (y || E && w === "end") && /* @__PURE__ */ k(_1, {
    className: A.endIcon,
    ownerState: $,
    children: y || /* @__PURE__ */ k(op, {
      className: A.loadingIconPlaceholder,
      ownerState: $
    })
  }), _ = o || "", L = typeof E == "boolean" ? (
    // use plain HTML span to minimize the runtime overhead
    /* @__PURE__ */ k("span", {
      className: A.loadingWrapper,
      style: {
        display: "contents"
      },
      children: E && /* @__PURE__ */ k(D1, {
        className: A.loadingIndicator,
        ownerState: $,
        children: O
      })
    })
  ) : null;
  return /* @__PURE__ */ Ce(A1, {
    ownerState: $,
    className: ge(r.className, A.root, f, _),
    component: u,
    disabled: d || E,
    focusRipple: !g,
    focusVisibleClassName: ge(A.focusVisible, m),
    ref: n,
    type: R,
    id: E ? p : v,
    ...N,
    classes: A,
    children: [D, w !== "end" && L, l, w === "end" && L, M]
  });
});
process.env.NODE_ENV !== "production" && (sd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: i.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * Element placed after the children.
   */
  endIcon: i.node,
  /**
   * @ignore
   */
  focusVisibleClassName: i.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: i.string,
  /**
   * @ignore
   */
  id: i.string,
  /**
   * If `true`, the loading indicator is visible and the button is disabled.
   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).
   * @default null
   */
  loading: i.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default, it renders a `CircularProgress` that is labeled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: i.node,
  /**
   * The loading indicator can be positioned on the start, end, or the center of the button.
   * @default 'center'
   */
  loadingPosition: i.oneOf(["center", "end", "start"]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["small", "medium", "large"]), i.string]),
  /**
   * Element placed before the children.
   */
  startIcon: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * @ignore
   */
  type: i.oneOfType([i.oneOf(["button", "reset", "submit"]), i.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: i.oneOfType([i.oneOf(["contained", "outlined", "text"]), i.string])
});
function B1(e) {
  return wt("PrivateSwitchBase", e);
}
Et("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
const F1 = (e) => {
  const {
    classes: t,
    checked: n,
    disabled: r,
    edge: o
  } = e, s = {
    root: ["root", n && "checked", r && "disabled", o && `edge${ve(o)}`],
    input: ["input"]
  };
  return Pt(s, B1, t);
}, j1 = $e(Xu)({
  padding: 9,
  borderRadius: "50%",
  variants: [{
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "start" && t.size !== "small",
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "end" && t.size !== "small",
    style: {
      marginRight: -12
    }
  }]
}), L1 = $e("input", {
  shouldForwardProp: ur
})({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
}), ll = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    autoFocus: r,
    checked: o,
    checkedIcon: s,
    defaultChecked: a,
    disabled: l,
    disableFocusRipple: c = !1,
    edge: u = !1,
    icon: f,
    id: d,
    inputProps: h,
    inputRef: g,
    name: y,
    onBlur: m,
    onChange: b,
    onFocus: v,
    readOnly: E,
    required: S = !1,
    tabIndex: w,
    type: x,
    value: T,
    slots: R = {},
    slotProps: I = {},
    ...N
  } = t, [p, O] = Ah({
    controlled: o,
    default: !!a,
    name: "SwitchBase",
    state: "checked"
  }), $ = al(), A = (X) => {
    v && v(X), $ && $.onFocus && $.onFocus(X);
  }, D = (X) => {
    m && m(X), $ && $.onBlur && $.onBlur(X);
  }, M = (X) => {
    if (X.nativeEvent.defaultPrevented)
      return;
    const ee = X.target.checked;
    O(ee), b && b(X, ee);
  };
  let _ = l;
  $ && typeof _ > "u" && (_ = $.disabled);
  const L = x === "checkbox" || x === "radio", U = {
    ...t,
    checked: p,
    disabled: _,
    disableFocusRipple: c,
    edge: u
  }, z = F1(U), j = {
    slots: R,
    slotProps: {
      input: h,
      ...I
    }
  }, [V, K] = st("root", {
    ref: n,
    elementType: j1,
    className: z.root,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...j,
      component: "span",
      ...N
    },
    getSlotProps: (X) => ({
      ...X,
      onFocus: (ee) => {
        var re;
        (re = X.onFocus) == null || re.call(X, ee), A(ee);
      },
      onBlur: (ee) => {
        var re;
        (re = X.onBlur) == null || re.call(X, ee), D(ee);
      }
    }),
    ownerState: U,
    additionalProps: {
      centerRipple: !0,
      focusRipple: !c,
      disabled: _,
      role: void 0,
      tabIndex: null
    }
  }), [Y, te] = st("input", {
    ref: g,
    elementType: L1,
    className: z.input,
    externalForwardedProps: j,
    getSlotProps: (X) => ({
      ...X,
      onChange: (ee) => {
        var re;
        (re = X.onChange) == null || re.call(X, ee), M(ee);
      }
    }),
    ownerState: U,
    additionalProps: {
      autoFocus: r,
      checked: o,
      defaultChecked: a,
      disabled: _,
      id: L ? d : void 0,
      name: y,
      readOnly: E,
      required: S,
      tabIndex: w,
      type: x,
      ...x === "checkbox" && T === void 0 ? {} : {
        value: T
      }
    }
  });
  return /* @__PURE__ */ Ce(V, {
    ...K,
    children: [/* @__PURE__ */ k(Y, {
      ...te
    }), p ? s : f]
  });
});
process.env.NODE_ENV !== "production" && (ll.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: i.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * @ignore
   */
  defaultChecked: i.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: i.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: i.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: i.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Or,
  /*
   * @ignore
   */
  name: i.string,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: i.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.object,
  /**
   * @ignore
   */
  tabIndex: i.oneOfType([i.number, i.string]),
  /**
   * The input component prop `type`.
   */
  type: i.string.isRequired,
  /**
   * The value of the component.
   */
  value: i.any
});
const V1 = cs(/* @__PURE__ */ k("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank"), z1 = cs(/* @__PURE__ */ k("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox"), W1 = cs(/* @__PURE__ */ k("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");
function U1(e) {
  return wt("MuiCheckbox", e);
}
const tc = Et("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]), H1 = (e) => {
  const {
    classes: t,
    indeterminate: n,
    color: r,
    size: o
  } = e, s = {
    root: ["root", n && "indeterminate", `color${ve(r)}`, `size${ve(o)}`]
  }, a = Pt(s, U1, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...a
  };
}, q1 = $e(ll, {
  shouldForwardProp: (e) => ur(e) || e === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.indeterminate && t.indeterminate, t[`size${ve(n.size)}`], n.color !== "default" && t[`color${ve(n.color)}`]];
  }
})(lt(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  variants: [{
    props: {
      color: "default",
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Vt(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(xr()).map(([t]) => ({
    props: {
      color: t,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Vt(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(xr()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${tc.checked}, &.${tc.indeterminate}`]: {
        color: (e.vars || e).palette[t].main
      },
      [`&.${tc.disabled}`]: {
        color: (e.vars || e).palette.action.disabled
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
}))), G1 = /* @__PURE__ */ k(z1, {}), Y1 = /* @__PURE__ */ k(V1, {}), K1 = /* @__PURE__ */ k(W1, {}), Rg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ct({
    props: t,
    name: "MuiCheckbox"
  }), {
    checkedIcon: o = G1,
    color: s = "primary",
    icon: a = Y1,
    indeterminate: l = !1,
    indeterminateIcon: c = K1,
    inputProps: u,
    size: f = "medium",
    disableRipple: d = !1,
    className: h,
    slots: g = {},
    slotProps: y = {},
    ...m
  } = r, b = l ? c : a, v = l ? c : o, E = {
    ...r,
    disableRipple: d,
    color: s,
    indeterminate: l,
    size: f
  }, S = H1(E), w = y.input ?? u, [x, T] = st("root", {
    ref: n,
    elementType: q1,
    className: ge(S.root, h),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: g,
      slotProps: y,
      ...m
    },
    ownerState: E,
    additionalProps: {
      type: "checkbox",
      icon: /* @__PURE__ */ C.cloneElement(b, {
        fontSize: b.props.fontSize ?? f
      }),
      checkedIcon: /* @__PURE__ */ C.cloneElement(v, {
        fontSize: v.props.fontSize ?? f
      }),
      disableRipple: d,
      slots: g,
      slotProps: {
        input: qu(typeof w == "function" ? w(E) : w, {
          "data-indeterminate": l
        })
      }
    }
  });
  return /* @__PURE__ */ k(x, {
    ...T,
    classes: S
  });
});
process.env.NODE_ENV !== "production" && (Rg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: i.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: i.node,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: i.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: i.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: i.any
});
function ip(e) {
  return e.substring(2).toLowerCase();
}
function X1(e, t) {
  return t.documentElement.clientWidth < e.clientX || t.documentElement.clientHeight < e.clientY;
}
function xa(e) {
  const {
    children: t,
    disableReactTree: n = !1,
    mouseEvent: r = "onClick",
    onClickAway: o,
    touchEvent: s = "onTouchEnd"
  } = e, a = C.useRef(!1), l = C.useRef(null), c = C.useRef(!1), u = C.useRef(!1);
  C.useEffect(() => (setTimeout(() => {
    c.current = !0;
  }, 0), () => {
    c.current = !1;
  }), []);
  const f = Kt(uo(t), l), d = tr((y) => {
    const m = u.current;
    u.current = !1;
    const b = on(l.current);
    if (!c.current || !l.current || "clientX" in y && X1(y, b))
      return;
    if (a.current) {
      a.current = !1;
      return;
    }
    let v;
    y.composedPath ? v = y.composedPath().includes(l.current) : v = !b.documentElement.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      y.target
    ) || l.current.contains(
      // @ts-expect-error returns `false` as intended when not dispatched from a Node
      y.target
    ), !v && (n || !m) && o(y);
  }), h = (y) => (m) => {
    u.current = !0;
    const b = t.props[y];
    b && b(m);
  }, g = {
    ref: f
  };
  return s !== !1 && (g[s] = h(s)), C.useEffect(() => {
    if (s !== !1) {
      const y = ip(s), m = on(l.current), b = () => {
        a.current = !0;
      };
      return m.addEventListener(y, d), m.addEventListener("touchmove", b), () => {
        m.removeEventListener(y, d), m.removeEventListener("touchmove", b);
      };
    }
  }, [d, s]), r !== !1 && (g[r] = h(r)), C.useEffect(() => {
    if (r !== !1) {
      const y = ip(r), m = on(l.current);
      return m.addEventListener(y, d), () => {
        m.removeEventListener(y, d);
      };
    }
  }, [d, r]), /* @__PURE__ */ C.cloneElement(t, g);
}
process.env.NODE_ENV !== "production" && (xa.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The wrapped element.
   */
  children: zr.isRequired,
  /**
   * If `true`, the React tree is ignored and only the DOM tree is considered.
   * This prop changes how portaled elements are handled.
   * @default false
   */
  disableReactTree: i.bool,
  /**
   * The mouse event to listen to. You can disable the listener by providing `false`.
   * @default 'onClick'
   */
  mouseEvent: i.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", !1]),
  /**
   * Callback fired when a "click away" event is detected.
   */
  onClickAway: i.func.isRequired,
  /**
   * The touch event to listen to. You can disable the listener by providing `false`.
   * @default 'onTouchEnd'
   */
  touchEvent: i.oneOf(["onTouchEnd", "onTouchStart", !1])
});
process.env.NODE_ENV !== "production" && (xa.propTypes = ls(xa.propTypes));
const $g = Bw({
  createStyledComponent: $e("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (e, t) => {
      const {
        ownerState: n
      } = e;
      return [t.root, t[`maxWidth${ve(String(n.maxWidth))}`], n.fixed && t.fixed, n.disableGutters && t.disableGutters];
    }
  }),
  useThemeProps: (e) => Ct({
    props: e,
    name: "MuiContainer"
  })
});
process.env.NODE_ENV !== "production" && ($g.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: i.bool,
  /**
   * Set the max-width to match the min-width of the current breakpoint.
   * This is useful if you'd prefer to design for a fixed set of sizes
   * instead of trying to accommodate a fully fluid viewport.
   * It's fluid by default.
   * @default false
   */
  fixed: i.bool,
  /**
   * Determine the max-width of the container.
   * The container width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'lg'
   */
  maxWidth: i.oneOfType([i.oneOf(["xs", "sm", "md", "lg", "xl", !1]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
const Gc = typeof Hu({}) == "function", Q1 = (e, t) => ({
  WebkitFontSmoothing: "antialiased",
  // Antialiasing.
  MozOsxFontSmoothing: "grayscale",
  // Antialiasing.
  // Change from `box-sizing: content-box` so that `width`
  // is not affected by `padding` or `border`.
  boxSizing: "border-box",
  // Fix font resize problem in iOS
  WebkitTextSizeAdjust: "100%",
  // When used under CssVarsProvider, colorScheme should not be applied dynamically because it will generate the stylesheet twice for server-rendered applications.
  ...t && !e.vars && {
    colorScheme: e.palette.mode
  }
}), J1 = (e) => ({
  color: (e.vars || e).palette.text.primary,
  ...e.typography.body1,
  backgroundColor: (e.vars || e).palette.background.default,
  "@media print": {
    // Save printer ink.
    backgroundColor: (e.vars || e).palette.common.white
  }
}), kg = (e, t = !1) => {
  var s, a;
  const n = {};
  t && e.colorSchemes && typeof e.getColorSchemeSelector == "function" && Object.entries(e.colorSchemes).forEach(([l, c]) => {
    var f, d;
    const u = e.getColorSchemeSelector(l);
    u.startsWith("@") ? n[u] = {
      ":root": {
        colorScheme: (f = c.palette) == null ? void 0 : f.mode
      }
    } : n[u.replace(/\s*&/, "")] = {
      colorScheme: (d = c.palette) == null ? void 0 : d.mode
    };
  });
  let r = {
    html: Q1(e, t),
    "*, *::before, *::after": {
      boxSizing: "inherit"
    },
    "strong, b": {
      fontWeight: e.typography.fontWeightBold
    },
    body: {
      margin: 0,
      // Remove the margin in all browsers.
      ...J1(e),
      // Add support for document.body.requestFullScreen().
      // Other elements, if background transparent, are not supported.
      "&::backdrop": {
        backgroundColor: (e.vars || e).palette.background.default
      }
    },
    ...n
  };
  const o = (a = (s = e.components) == null ? void 0 : s.MuiCssBaseline) == null ? void 0 : a.styleOverrides;
  return o && (r = [r, o]), r;
}, na = "mui-ecs", Z1 = (e) => {
  const t = kg(e, !1), n = Array.isArray(t) ? t[0] : t;
  return !e.vars && n && (n.html[`:root:has(${na})`] = {
    colorScheme: e.palette.mode
  }), e.colorSchemes && Object.entries(e.colorSchemes).forEach(([r, o]) => {
    var a, l;
    const s = e.getColorSchemeSelector(r);
    s.startsWith("@") ? n[s] = {
      [`:root:not(:has(.${na}))`]: {
        colorScheme: (a = o.palette) == null ? void 0 : a.mode
      }
    } : n[s.replace(/\s*&/, "")] = {
      [`&:not(:has(.${na}))`]: {
        colorScheme: (l = o.palette) == null ? void 0 : l.mode
      }
    };
  }), t;
}, eE = Hu(Gc ? ({
  theme: e,
  enableColorScheme: t
}) => kg(e, t) : ({
  theme: e
}) => Z1(e));
function Ig(e) {
  const t = Ct({
    props: e,
    name: "MuiCssBaseline"
  }), {
    children: n,
    enableColorScheme: r = !1
  } = t;
  return /* @__PURE__ */ Ce(C.Fragment, {
    children: [Gc && /* @__PURE__ */ k(eE, {
      enableColorScheme: r
    }), !Gc && !r && /* @__PURE__ */ k("span", {
      className: na,
      style: {
        display: "none"
      }
    }), n]
  });
}
process.env.NODE_ENV !== "production" && (Ig.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * You can wrap a node.
   */
  children: i.node,
  /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */
  enableColorScheme: i.bool
});
function tE(e) {
  const t = on(e);
  return t.body === e ? sr(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function $i(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function sp(e) {
  return parseInt(sr(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function nE(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), r = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || r;
}
function ap(e, t, n, r, o) {
  const s = [t, n, ...r];
  [].forEach.call(e.children, (a) => {
    const l = !s.includes(a), c = !nE(a);
    l && c && $i(a, o);
  });
}
function nc(e, t) {
  let n = -1;
  return e.some((r, o) => t(r) ? (n = o, !0) : !1), n;
}
function rE(e, t) {
  const n = [], r = e.container;
  if (!t.disableScrollLock) {
    if (tE(r)) {
      const a = uw(sr(r));
      n.push({
        value: r.style.paddingRight,
        property: "padding-right",
        el: r
      }), r.style.paddingRight = `${sp(r) + a}px`;
      const l = on(r).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${sp(c) + a}px`;
      });
    }
    let s;
    if (r.parentNode instanceof DocumentFragment)
      s = on(r).body;
    else {
      const a = r.parentElement, l = sr(r);
      s = (a == null ? void 0 : a.nodeName) === "HTML" && l.getComputedStyle(a).overflowY === "scroll" ? a : r;
    }
    n.push({
      value: s.style.overflow,
      property: "overflow",
      el: s
    }, {
      value: s.style.overflowX,
      property: "overflow-x",
      el: s
    }, {
      value: s.style.overflowY,
      property: "overflow-y",
      el: s
    }), s.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: s,
      el: a,
      property: l
    }) => {
      s ? a.style.setProperty(l, s) : a.style.removeProperty(l);
    });
  };
}
function oE(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
let iE = class {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let r = this.modals.indexOf(t);
    if (r !== -1)
      return r;
    r = this.modals.length, this.modals.push(t), t.modalRef && $i(t.modalRef, !1);
    const o = oE(n);
    ap(n, t.mount, t.modalRef, o, !0);
    const s = nc(this.containers, (a) => a.container === n);
    return s !== -1 ? (this.containers[s].modals.push(t), r) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: o
    }), r);
  }
  mount(t, n) {
    const r = nc(this.containers, (s) => s.modals.includes(t)), o = this.containers[r];
    o.restore || (o.restore = rE(o, n));
  }
  remove(t, n = !0) {
    const r = this.modals.indexOf(t);
    if (r === -1)
      return r;
    const o = nc(this.containers, (a) => a.modals.includes(t)), s = this.containers[o];
    if (s.modals.splice(s.modals.indexOf(t), 1), this.modals.splice(r, 1), s.modals.length === 0)
      s.restore && s.restore(), t.modalRef && $i(t.modalRef, n), ap(s.container, t.mount, t.modalRef, s.hiddenSiblings, !1), this.containers.splice(o, 1);
    else {
      const a = s.modals[s.modals.length - 1];
      a.modalRef && $i(a.modalRef, !1);
    }
    return r;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
};
const sE = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function aE(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function lE(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (r) => e.ownerDocument.querySelector(`input[type="radio"]${r}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function cE(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || lE(e));
}
function uE(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(sE)).forEach((r, o) => {
    const s = aE(r);
    s === -1 || !cE(r) || (s === 0 ? t.push(r) : n.push({
      documentOrder: o,
      tabIndex: s,
      node: r
    }));
  }), n.sort((r, o) => r.tabIndex === o.tabIndex ? r.documentOrder - o.documentOrder : r.tabIndex - o.tabIndex).map((r) => r.node).concat(t);
}
function dE() {
  return !0;
}
function wa(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: r = !1,
    disableRestoreFocus: o = !1,
    getTabbable: s = uE,
    isEnabled: a = dE,
    open: l
  } = e, c = C.useRef(!1), u = C.useRef(null), f = C.useRef(null), d = C.useRef(null), h = C.useRef(null), g = C.useRef(!1), y = C.useRef(null), m = Kt(uo(t), y), b = C.useRef(null);
  C.useEffect(() => {
    !l || !y.current || (g.current = !n);
  }, [n, l]), C.useEffect(() => {
    if (!l || !y.current)
      return;
    const S = on(y.current);
    return y.current.contains(S.activeElement) || (y.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), y.current.setAttribute("tabIndex", "-1")), g.current && y.current.focus()), () => {
      o || (d.current && d.current.focus && (c.current = !0, d.current.focus()), d.current = null);
    };
  }, [l]), C.useEffect(() => {
    if (!l || !y.current)
      return;
    const S = on(y.current), w = (R) => {
      b.current = R, !(r || !a() || R.key !== "Tab") && S.activeElement === y.current && R.shiftKey && (c.current = !0, f.current && f.current.focus());
    }, x = () => {
      var N, p;
      const R = y.current;
      if (R === null)
        return;
      if (!S.hasFocus() || !a() || c.current) {
        c.current = !1;
        return;
      }
      if (R.contains(S.activeElement) || r && S.activeElement !== u.current && S.activeElement !== f.current)
        return;
      if (S.activeElement !== h.current)
        h.current = null;
      else if (h.current !== null)
        return;
      if (!g.current)
        return;
      let I = [];
      if ((S.activeElement === u.current || S.activeElement === f.current) && (I = s(y.current)), I.length > 0) {
        const O = !!((N = b.current) != null && N.shiftKey && ((p = b.current) == null ? void 0 : p.key) === "Tab"), $ = I[0], A = I[I.length - 1];
        typeof $ != "string" && typeof A != "string" && (O ? A.focus() : $.focus());
      } else
        R.focus();
    };
    S.addEventListener("focusin", x), S.addEventListener("keydown", w, !0);
    const T = setInterval(() => {
      S.activeElement && S.activeElement.tagName === "BODY" && x();
    }, 50);
    return () => {
      clearInterval(T), S.removeEventListener("focusin", x), S.removeEventListener("keydown", w, !0);
    };
  }, [n, r, o, a, l, s]);
  const v = (S) => {
    d.current === null && (d.current = S.relatedTarget), g.current = !0, h.current = S.target;
    const w = t.props.onFocus;
    w && w(S);
  }, E = (S) => {
    d.current === null && (d.current = S.relatedTarget), g.current = !0;
  };
  return /* @__PURE__ */ Ce(C.Fragment, {
    children: [/* @__PURE__ */ k("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ C.cloneElement(t, {
      ref: m,
      onFocus: v
    }), /* @__PURE__ */ k("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: f,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (wa.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: zr,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: i.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: i.func,
  /**
   * If `true`, focus is locked.
   */
  open: i.bool.isRequired
});
process.env.NODE_ENV !== "production" && (wa.propTypes = ls(wa.propTypes));
function fE(e) {
  return typeof e == "function" ? e() : e;
}
function pE(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const lp = () => {
}, Bs = new iE();
function mE(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: r = !1,
    closeAfterTransition: o = !1,
    onTransitionEnter: s,
    onTransitionExited: a,
    children: l,
    onClose: c,
    open: u,
    rootRef: f
  } = e, d = C.useRef({}), h = C.useRef(null), g = C.useRef(null), y = Kt(g, f), [m, b] = C.useState(!u), v = pE(l);
  let E = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (E = !1);
  const S = () => on(h.current), w = () => (d.current.modalRef = g.current, d.current.mount = h.current, d.current), x = () => {
    Bs.mount(w(), {
      disableScrollLock: r
    }), g.current && (g.current.scrollTop = 0);
  }, T = tr(() => {
    const M = fE(t) || S().body;
    Bs.add(w(), M), g.current && x();
  }), R = () => Bs.isTopModal(w()), I = tr((M) => {
    h.current = M, M && (u && R() ? x() : g.current && $i(g.current, E));
  }), N = C.useCallback(() => {
    Bs.remove(w(), E);
  }, [E]);
  C.useEffect(() => () => {
    N();
  }, [N]), C.useEffect(() => {
    u ? T() : (!v || !o) && N();
  }, [u, N, v, o, T]);
  const p = (M) => (_) => {
    var L;
    (L = M.onKeyDown) == null || L.call(M, _), !(_.key !== "Escape" || _.which === 229 || // Wait until IME is settled.
    !R()) && (n || (_.stopPropagation(), c && c(_, "escapeKeyDown")));
  }, O = (M) => (_) => {
    var L;
    (L = M.onClick) == null || L.call(M, _), _.target === _.currentTarget && c && c(_, "backdropClick");
  };
  return {
    getRootProps: (M = {}) => {
      const _ = Lh(e);
      delete _.onTransitionEnter, delete _.onTransitionExited;
      const L = {
        ..._,
        ...M
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...L,
        onKeyDown: p(L),
        ref: y
      };
    },
    getBackdropProps: (M = {}) => {
      const _ = M;
      return {
        "aria-hidden": !0,
        ..._,
        onClick: O(_),
        open: u
      };
    },
    getTransitionProps: () => {
      const M = () => {
        b(!1), s && s();
      }, _ = () => {
        b(!0), a && a(), o && N();
      };
      return {
        onEnter: Mc(M, (l == null ? void 0 : l.props.onEnter) ?? lp),
        onExited: Mc(_, (l == null ? void 0 : l.props.onExited) ?? lp)
      };
    },
    rootRef: y,
    portalRef: I,
    isTopModal: R,
    exited: m,
    hasTransition: v
  };
}
function hE(e) {
  return wt("MuiModal", e);
}
Et("MuiModal", ["root", "hidden", "backdrop"]);
const gE = (e) => {
  const {
    open: t,
    exited: n,
    classes: r
  } = e;
  return Pt({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, hE, r);
}, yE = $e("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(lt(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), bE = $e(id, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), cl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ct({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: o = bE,
    BackdropProps: s,
    classes: a,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: f,
    component: d,
    components: h = {},
    componentsProps: g = {},
    disableAutoFocus: y = !1,
    disableEnforceFocus: m = !1,
    disableEscapeKeyDown: b = !1,
    disablePortal: v = !1,
    disableRestoreFocus: E = !1,
    disableScrollLock: S = !1,
    hideBackdrop: w = !1,
    keepMounted: x = !1,
    onClose: T,
    onTransitionEnter: R,
    onTransitionExited: I,
    open: N,
    slotProps: p = {},
    slots: O = {},
    // eslint-disable-next-line react/prop-types
    theme: $,
    ...A
  } = r, D = {
    ...r,
    closeAfterTransition: c,
    disableAutoFocus: y,
    disableEnforceFocus: m,
    disableEscapeKeyDown: b,
    disablePortal: v,
    disableRestoreFocus: E,
    disableScrollLock: S,
    hideBackdrop: w,
    keepMounted: x
  }, {
    getRootProps: M,
    getBackdropProps: _,
    getTransitionProps: L,
    portalRef: U,
    isTopModal: z,
    exited: j,
    hasTransition: V
  } = mE({
    ...D,
    rootRef: n
  }), K = {
    ...D,
    exited: j
  }, Y = gE(K), te = {};
  if (u.props.tabIndex === void 0 && (te.tabIndex = "-1"), V) {
    const {
      onEnter: G,
      onExited: ne
    } = L();
    te.onEnter = G, te.onExited = ne;
  }
  const X = {
    slots: {
      root: h.Root,
      backdrop: h.Backdrop,
      ...O
    },
    slotProps: {
      ...g,
      ...p
    }
  }, [ee, re] = st("root", {
    ref: n,
    elementType: yE,
    externalForwardedProps: {
      ...X,
      ...A,
      component: d
    },
    getSlotProps: M,
    ownerState: K,
    className: ge(l, Y == null ? void 0 : Y.root, !K.open && K.exited && (Y == null ? void 0 : Y.hidden))
  }), [q, Q] = st("backdrop", {
    ref: s == null ? void 0 : s.ref,
    elementType: o,
    externalForwardedProps: X,
    shouldForwardComponentProp: !0,
    additionalProps: s,
    getSlotProps: (G) => _({
      ...G,
      onClick: (ne) => {
        G != null && G.onClick && G.onClick(ne);
      }
    }),
    className: ge(s == null ? void 0 : s.className, Y == null ? void 0 : Y.backdrop),
    ownerState: K
  });
  return !x && !N && (!V || j) ? null : /* @__PURE__ */ k(Ui, {
    ref: U,
    container: f,
    disablePortal: v,
    children: /* @__PURE__ */ Ce(ee, {
      ...re,
      children: [!w && o ? /* @__PURE__ */ k(q, {
        ...Q
      }) : null, /* @__PURE__ */ k(wa, {
        disableEnforceFocus: m,
        disableAutoFocus: y,
        disableRestoreFocus: E,
        isEnabled: z,
        open: N,
        children: /* @__PURE__ */ C.cloneElement(u, te)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (cl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: i.object,
  /**
   * A single child content element.
   */
  children: zr.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: i.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Backdrop: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([vr, i.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: i.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: i.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function vE(e) {
  return wt("MuiDialog", e);
}
const rc = Et("MuiDialog", ["root", "scrollPaper", "scrollBody", "container", "paper", "paperScrollPaper", "paperScrollBody", "paperWidthFalse", "paperWidthXs", "paperWidthSm", "paperWidthMd", "paperWidthLg", "paperWidthXl", "paperFullWidth", "paperFullScreen"]), Pg = /* @__PURE__ */ C.createContext({});
process.env.NODE_ENV !== "production" && (Pg.displayName = "DialogContext");
const xE = $e(id, {
  name: "MuiDialog",
  slot: "Backdrop",
  overrides: (e, t) => t.backdrop
})({
  // Improve scrollable dialog support.
  zIndex: -1
}), wE = (e) => {
  const {
    classes: t,
    scroll: n,
    maxWidth: r,
    fullWidth: o,
    fullScreen: s
  } = e, a = {
    root: ["root"],
    container: ["container", `scroll${ve(n)}`],
    paper: ["paper", `paperScroll${ve(n)}`, `paperWidth${ve(String(r))}`, o && "paperFullWidth", s && "paperFullScreen"]
  };
  return Pt(a, vE, t);
}, SE = $e(cl, {
  name: "MuiDialog",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  "@media print": {
    // Use !important to override the Modal inline-style.
    position: "absolute !important"
  }
}), TE = $e("div", {
  name: "MuiDialog",
  slot: "Container",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.container, t[`scroll${ve(n.scroll)}`]];
  }
})({
  height: "100%",
  "@media print": {
    height: "auto"
  },
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      overflowY: "auto",
      overflowX: "hidden",
      textAlign: "center",
      "&::after": {
        content: '""',
        display: "inline-block",
        verticalAlign: "middle",
        height: "100%",
        width: "0"
      }
    }
  }]
}), EE = $e(Jo, {
  name: "MuiDialog",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`scrollPaper${ve(n.scroll)}`], t[`paperWidth${ve(String(n.maxWidth))}`], n.fullWidth && t.paperFullWidth, n.fullScreen && t.paperFullScreen];
  }
})(lt(({
  theme: e
}) => ({
  margin: 32,
  position: "relative",
  overflowY: "auto",
  "@media print": {
    overflowY: "visible",
    boxShadow: "none"
  },
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      flexDirection: "column",
      maxHeight: "calc(100% - 64px)"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      display: "inline-block",
      verticalAlign: "middle",
      textAlign: "initial"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.maxWidth,
    style: {
      maxWidth: "calc(100% - 64px)"
    }
  }, {
    props: {
      maxWidth: "xs"
    },
    style: {
      maxWidth: e.breakpoints.unit === "px" ? Math.max(e.breakpoints.values.xs, 444) : `max(${e.breakpoints.values.xs}${e.breakpoints.unit}, 444px)`,
      [`&.${rc.paperScrollBody}`]: {
        [e.breakpoints.down(Math.max(e.breakpoints.values.xs, 444) + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  }, ...Object.keys(e.breakpoints.values).filter((t) => t !== "xs").map((t) => ({
    props: {
      maxWidth: t
    },
    style: {
      maxWidth: `${e.breakpoints.values[t]}${e.breakpoints.unit}`,
      [`&.${rc.paperScrollBody}`]: {
        [e.breakpoints.down(e.breakpoints.values[t] + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  })), {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "calc(100% - 64px)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullScreen,
    style: {
      margin: 0,
      width: "100%",
      maxWidth: "100%",
      height: "100%",
      maxHeight: "none",
      borderRadius: 0,
      [`&.${rc.paperScrollBody}`]: {
        margin: 0,
        maxWidth: "100%"
      }
    }
  }]
}))), Ng = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ct({
    props: t,
    name: "MuiDialog"
  }), o = Rr(), s = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    "aria-describedby": a,
    "aria-labelledby": l,
    "aria-modal": c = !0,
    BackdropComponent: u,
    BackdropProps: f,
    children: d,
    className: h,
    disableEscapeKeyDown: g = !1,
    fullScreen: y = !1,
    fullWidth: m = !1,
    maxWidth: b = "sm",
    onClick: v,
    onClose: E,
    open: S,
    PaperComponent: w = Jo,
    PaperProps: x = {},
    scroll: T = "paper",
    slots: R = {},
    slotProps: I = {},
    TransitionComponent: N = Uo,
    transitionDuration: p = s,
    TransitionProps: O,
    ...$
  } = r, A = {
    ...r,
    disableEscapeKeyDown: g,
    fullScreen: y,
    fullWidth: m,
    maxWidth: b,
    scroll: T
  }, D = wE(A), M = C.useRef(), _ = (pe) => {
    M.current = pe.target === pe.currentTarget;
  }, L = (pe) => {
    v && v(pe), M.current && (M.current = null, E && E(pe, "backdropClick"));
  }, U = Du(l), z = C.useMemo(() => ({
    titleId: U
  }), [U]), j = {
    transition: N,
    ...R
  }, V = {
    transition: O,
    paper: x,
    backdrop: f,
    ...I
  }, K = {
    slots: j,
    slotProps: V
  }, [Y, te] = st("root", {
    elementType: SE,
    shouldForwardComponentProp: !0,
    externalForwardedProps: K,
    ownerState: A,
    className: ge(D.root, h),
    ref: n
  }), [X, ee] = st("backdrop", {
    elementType: xE,
    shouldForwardComponentProp: !0,
    externalForwardedProps: K,
    ownerState: A
  }), [re, q] = st("paper", {
    elementType: EE,
    shouldForwardComponentProp: !0,
    externalForwardedProps: K,
    ownerState: A,
    className: ge(D.paper, x.className)
  }), [Q, G] = st("container", {
    elementType: TE,
    externalForwardedProps: K,
    ownerState: A,
    className: ge(D.container)
  }), [ne, B] = st("transition", {
    elementType: Uo,
    externalForwardedProps: K,
    ownerState: A,
    additionalProps: {
      appear: !0,
      in: S,
      timeout: p,
      role: "presentation"
    }
  });
  return /* @__PURE__ */ k(Y, {
    closeAfterTransition: !0,
    slots: {
      backdrop: X
    },
    slotProps: {
      backdrop: {
        transitionDuration: p,
        as: u,
        ...ee
      }
    },
    disableEscapeKeyDown: g,
    onClose: E,
    open: S,
    onClick: L,
    ...te,
    ...$,
    children: /* @__PURE__ */ k(ne, {
      ...B,
      children: /* @__PURE__ */ k(Q, {
        onMouseDown: _,
        ...G,
        children: /* @__PURE__ */ k(re, {
          as: w,
          elevation: 24,
          role: "dialog",
          "aria-describedby": a,
          "aria-labelledby": U,
          "aria-modal": c,
          ...q,
          children: /* @__PURE__ */ k(Pg.Provider, {
            value: z,
            children: d
          })
        })
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Ng.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The id(s) of the element(s) that describe the dialog.
   */
  "aria-describedby": i.string,
  /**
   * The id(s) of the element(s) that label the dialog.
   */
  "aria-labelledby": i.string,
  /**
   * Informs assistive technologies that the element is modal.
   * It's added on the element with role="dialog".
   * @default true
   */
  "aria-modal": i.oneOfType([i.oneOf(["false", "true"]), i.bool]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * @ignore
   */
  BackdropProps: i.object,
  /**
   * Dialog children, usually the included sub-components.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: i.bool,
  /**
   * If `true`, the dialog is full-screen.
   * @default false
   */
  fullScreen: i.bool,
  /**
   * If `true`, the dialog stretches to `maxWidth`.
   *
   * Notice that the dialog width grow is limited by the default margin.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * Determine the max-width of the dialog.
   * The dialog width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'sm'
   */
  maxWidth: i.oneOfType([i.oneOf(["xs", "sm", "md", "lg", "xl", !1]), i.string]),
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The component used to render the body of the dialog.
   * @default Paper
   */
  PaperComponent: i.elementType,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @default {}
   * @deprecated Use `slotProps.paper` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PaperProps: i.object,
  /**
   * Determine the container for scrolling the dialog.
   * @default 'paper'
   */
  scroll: i.oneOf(["body", "paper"]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    container: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    container: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: i.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated Use `slotProps.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionProps: i.object
});
function CE(e, t, n) {
  const r = t.getBoundingClientRect(), o = n && n.getBoundingClientRect(), s = sr(t);
  let a;
  if (t.fakeTransform)
    a = t.fakeTransform;
  else {
    const u = s.getComputedStyle(t);
    a = u.getPropertyValue("-webkit-transform") || u.getPropertyValue("transform");
  }
  let l = 0, c = 0;
  if (a && a !== "none" && typeof a == "string") {
    const u = a.split("(")[1].split(")")[0].split(",");
    l = parseInt(u[4], 10), c = parseInt(u[5], 10);
  }
  return e === "left" ? o ? `translateX(${o.right + l - r.left}px)` : `translateX(${s.innerWidth + l - r.left}px)` : e === "right" ? o ? `translateX(-${r.right - o.left - l}px)` : `translateX(-${r.left + r.width - l}px)` : e === "up" ? o ? `translateY(${o.bottom + c - r.top}px)` : `translateY(${s.innerHeight + c - r.top}px)` : o ? `translateY(-${r.top - o.top + r.height - c}px)` : `translateY(-${r.top + r.height - c}px)`;
}
function Ag(e) {
  return typeof e == "function" ? e() : e;
}
function Fs(e, t, n) {
  const r = Ag(n), o = CE(e, t, r);
  o && (t.style.webkitTransform = o, t.style.transform = o);
}
const Mg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Rr(), o = {
    enter: r.transitions.easing.easeOut,
    exit: r.transitions.easing.sharp
  }, s = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: a,
    appear: l = !0,
    children: c,
    container: u,
    direction: f = "down",
    easing: d = o,
    in: h,
    onEnter: g,
    onEntered: y,
    onEntering: m,
    onExit: b,
    onExited: v,
    onExiting: E,
    style: S,
    timeout: w = s,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: x = xn,
    ...T
  } = t, R = C.useRef(null), I = Kt(uo(c), R, n), N = (U) => (z) => {
    U && (z === void 0 ? U(R.current) : U(R.current, z));
  }, p = N((U, z) => {
    Fs(f, U, u), Ku(U), g && g(U, z);
  }), O = N((U, z) => {
    const j = jo({
      timeout: w,
      style: S,
      easing: d
    }, {
      mode: "enter"
    });
    U.style.webkitTransition = r.transitions.create("-webkit-transform", {
      ...j
    }), U.style.transition = r.transitions.create("transform", {
      ...j
    }), U.style.webkitTransform = "none", U.style.transform = "none", m && m(U, z);
  }), $ = N(y), A = N(E), D = N((U) => {
    const z = jo({
      timeout: w,
      style: S,
      easing: d
    }, {
      mode: "exit"
    });
    U.style.webkitTransition = r.transitions.create("-webkit-transform", z), U.style.transition = r.transitions.create("transform", z), Fs(f, U, u), b && b(U);
  }), M = N((U) => {
    U.style.webkitTransition = "", U.style.transition = "", v && v(U);
  }), _ = (U) => {
    a && a(R.current, U);
  }, L = C.useCallback(() => {
    R.current && Fs(f, R.current, u);
  }, [f, u]);
  return C.useEffect(() => {
    if (h || f === "down" || f === "right")
      return;
    const U = _u(() => {
      R.current && Fs(f, R.current, u);
    }), z = sr(R.current);
    return z.addEventListener("resize", U), () => {
      U.clear(), z.removeEventListener("resize", U);
    };
  }, [f, h, u]), C.useEffect(() => {
    h || L();
  }, [h, L]), /* @__PURE__ */ k(x, {
    nodeRef: R,
    onEnter: p,
    onEntered: $,
    onEntering: O,
    onExit: D,
    onExited: M,
    onExiting: A,
    addEndListener: _,
    appear: l,
    in: h,
    timeout: w,
    ...T,
    children: (U, {
      ownerState: z,
      ...j
    }) => /* @__PURE__ */ C.cloneElement(c, {
      ref: I,
      style: {
        visibility: U === "exited" && !h ? "hidden" : void 0,
        ...S,
        ...c.props.style
      },
      ...j
    })
  });
});
process.env.NODE_ENV !== "production" && (Mg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: zr.isRequired,
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the container the Slide is transitioning from.
   */
  container: Vr(i.oneOfType([vr, i.func]), (e) => {
    if (e.open) {
      const t = Ag(e.container);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `container` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `container` prop provided to the component is invalid.", "It should be an HTML element instance."].join(`
`));
    }
    return null;
  }),
  /**
   * Direction the child node will enter from.
   * @default 'down'
   */
  direction: i.oneOf(["down", "left", "right", "up"]),
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   * @default {
   *   enter: theme.transitions.easing.easeOut,
   *   exit: theme.transitions.easing.sharp,
   * }
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function OE(e) {
  return wt("MuiDrawer", e);
}
Et("MuiDrawer", ["root", "docked", "paper", "anchorLeft", "anchorRight", "anchorTop", "anchorBottom", "paperAnchorLeft", "paperAnchorRight", "paperAnchorTop", "paperAnchorBottom", "paperAnchorDockedLeft", "paperAnchorDockedRight", "paperAnchorDockedTop", "paperAnchorDockedBottom", "modal"]);
const _g = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, (n.variant === "permanent" || n.variant === "persistent") && t.docked, t.modal];
}, RE = (e) => {
  const {
    classes: t,
    anchor: n,
    variant: r
  } = e, o = {
    root: ["root", `anchor${ve(n)}`],
    docked: [(r === "permanent" || r === "persistent") && "docked"],
    modal: ["modal"],
    paper: ["paper", `paperAnchor${ve(n)}`, r !== "temporary" && `paperAnchorDocked${ve(n)}`]
  };
  return Pt(o, OE, t);
}, $E = $e(cl, {
  name: "MuiDrawer",
  slot: "Root",
  overridesResolver: _g
})(lt(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.drawer
}))), kE = $e("div", {
  shouldForwardProp: ur,
  name: "MuiDrawer",
  slot: "Docked",
  skipVariantsResolver: !1,
  overridesResolver: _g
})({
  flex: "0 0 auto"
}), IE = $e(Jo, {
  name: "MuiDrawer",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`paperAnchor${ve(n.anchor)}`], n.variant !== "temporary" && t[`paperAnchorDocked${ve(n.anchor)}`]];
  }
})(lt(({
  theme: e
}) => ({
  overflowY: "auto",
  display: "flex",
  flexDirection: "column",
  height: "100%",
  flex: "1 0 auto",
  zIndex: (e.vars || e).zIndex.drawer,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  // temporary style
  position: "fixed",
  top: 0,
  // We disable the focus ring for mouse, touch and keyboard users.
  // At some point, it would be better to keep it for keyboard users.
  // :focus-ring CSS pseudo-class will help.
  outline: 0,
  variants: [{
    props: {
      anchor: "left"
    },
    style: {
      left: 0
    }
  }, {
    props: {
      anchor: "top"
    },
    style: {
      top: 0,
      left: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: {
      anchor: "right"
    },
    style: {
      right: 0
    }
  }, {
    props: {
      anchor: "bottom"
    },
    style: {
      top: "auto",
      left: 0,
      bottom: 0,
      right: 0,
      height: "auto",
      maxHeight: "100%"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "left" && t.variant !== "temporary",
    style: {
      borderRight: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "top" && t.variant !== "temporary",
    style: {
      borderBottom: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "right" && t.variant !== "temporary",
    style: {
      borderLeft: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchor === "bottom" && t.variant !== "temporary",
    style: {
      borderTop: `1px solid ${(e.vars || e).palette.divider}`
    }
  }]
}))), Dg = {
  left: "right",
  right: "left",
  top: "down",
  bottom: "up"
};
function PE(e) {
  return ["left", "right"].includes(e);
}
function NE({
  direction: e
}, t) {
  return e === "rtl" && PE(t) ? Dg[t] : t;
}
const Bg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ct({
    props: t,
    name: "MuiDrawer"
  }), o = Rr(), s = Lu(), a = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    anchor: l = "left",
    BackdropProps: c,
    children: u,
    className: f,
    elevation: d = 16,
    hideBackdrop: h = !1,
    ModalProps: {
      BackdropProps: g,
      ...y
    } = {},
    onClose: m,
    open: b = !1,
    PaperProps: v = {},
    SlideProps: E,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: S,
    transitionDuration: w = a,
    variant: x = "temporary",
    slots: T = {},
    slotProps: R = {},
    ...I
  } = r, N = C.useRef(!1);
  C.useEffect(() => {
    N.current = !0;
  }, []);
  const p = NE({
    direction: s ? "rtl" : "ltr"
  }, l), $ = {
    ...r,
    anchor: l,
    elevation: d,
    open: b,
    variant: x,
    ...I
  }, A = RE($), D = {
    slots: {
      transition: S,
      ...T
    },
    slotProps: {
      paper: v,
      transition: E,
      ...R,
      backdrop: qu(R.backdrop || {
        ...c,
        ...g
      }, {
        transitionDuration: w
      })
    }
  }, [M, _] = st("root", {
    ref: n,
    elementType: $E,
    className: ge(A.root, A.modal, f),
    shouldForwardComponentProp: !0,
    ownerState: $,
    externalForwardedProps: {
      ...D,
      ...I,
      ...y
    },
    additionalProps: {
      open: b,
      onClose: m,
      hideBackdrop: h,
      slots: {
        backdrop: D.slots.backdrop
      },
      slotProps: {
        backdrop: D.slotProps.backdrop
      }
    }
  }), [L, U] = st("paper", {
    elementType: IE,
    shouldForwardComponentProp: !0,
    className: ge(A.paper, v.className),
    ownerState: $,
    externalForwardedProps: D,
    additionalProps: {
      elevation: x === "temporary" ? d : 0,
      square: !0
    }
  }), [z, j] = st("docked", {
    elementType: kE,
    ref: n,
    className: ge(A.root, A.docked, f),
    ownerState: $,
    externalForwardedProps: D,
    additionalProps: I
    // pass `other` here because `DockedSlot` is also a root slot for some variants
  }), [V, K] = st("transition", {
    elementType: Mg,
    ownerState: $,
    externalForwardedProps: D,
    additionalProps: {
      in: b,
      direction: Dg[p],
      timeout: w,
      appear: N.current
    }
  }), Y = /* @__PURE__ */ k(L, {
    ...U,
    children: u
  });
  if (x === "permanent")
    return /* @__PURE__ */ k(z, {
      ...j,
      children: Y
    });
  const te = /* @__PURE__ */ k(V, {
    ...K,
    children: Y
  });
  return x === "persistent" ? /* @__PURE__ */ k(z, {
    ...j,
    children: te
  }) : /* @__PURE__ */ k(M, {
    ..._,
    children: te
  });
});
process.env.NODE_ENV !== "production" && (Bg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Side from which the drawer will appear.
   * @default 'left'
   */
  anchor: i.oneOf(["bottom", "left", "right", "top"]),
  /**
   * @ignore
   */
  BackdropProps: i.object,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The elevation of the drawer.
   * @default 16
   */
  elevation: Bu,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: i.bool,
  /**
   * Props applied to the [`Modal`](https://mui.com/material-ui/api/modal/) element.
   * @default {}
   */
  ModalProps: i.object,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   * @default false
   */
  open: i.bool,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @deprecated use the `slotProps.paper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PaperProps: i.object,
  /**
   * Props applied to the [`Slide`](https://mui.com/material-ui/api/slide/) element.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SlideProps: i.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    docked: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    docked: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * The variant to use.
   * @default 'temporary'
   */
  variant: i.oneOf(["permanent", "persistent", "temporary"])
});
function Yc(e) {
  return `scale(${e}, ${e ** 2})`;
}
const AE = {
  entering: {
    opacity: 1,
    transform: Yc(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, oc = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), Hi = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    addEndListener: r,
    appear: o = !0,
    children: s,
    easing: a,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: f,
    onExit: d,
    onExited: h,
    onExiting: g,
    style: y,
    timeout: m = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: b = xn,
    ...v
  } = t, E = Io(), S = C.useRef(), w = Rr(), x = C.useRef(null), T = Kt(x, uo(s), n), R = (M) => (_) => {
    if (M) {
      const L = x.current;
      _ === void 0 ? M(L) : M(L, _);
    }
  }, I = R(f), N = R((M, _) => {
    Ku(M);
    const {
      duration: L,
      delay: U,
      easing: z
    } = jo({
      style: y,
      timeout: m,
      easing: a
    }, {
      mode: "enter"
    });
    let j;
    m === "auto" ? (j = w.transitions.getAutoHeightDuration(M.clientHeight), S.current = j) : j = L, M.style.transition = [w.transitions.create("opacity", {
      duration: j,
      delay: U
    }), w.transitions.create("transform", {
      duration: oc ? j : j * 0.666,
      delay: U,
      easing: z
    })].join(","), c && c(M, _);
  }), p = R(u), O = R(g), $ = R((M) => {
    const {
      duration: _,
      delay: L,
      easing: U
    } = jo({
      style: y,
      timeout: m,
      easing: a
    }, {
      mode: "exit"
    });
    let z;
    m === "auto" ? (z = w.transitions.getAutoHeightDuration(M.clientHeight), S.current = z) : z = _, M.style.transition = [w.transitions.create("opacity", {
      duration: z,
      delay: L
    }), w.transitions.create("transform", {
      duration: oc ? z : z * 0.666,
      delay: oc ? L : L || z * 0.333,
      easing: U
    })].join(","), M.style.opacity = 0, M.style.transform = Yc(0.75), d && d(M);
  }), A = R(h);
  return /* @__PURE__ */ k(b, {
    appear: o,
    in: l,
    nodeRef: x,
    onEnter: N,
    onEntered: p,
    onEntering: I,
    onExit: $,
    onExited: A,
    onExiting: O,
    addEndListener: (M) => {
      m === "auto" && E.start(S.current || 0, M), r && r(x.current, M);
    },
    timeout: m === "auto" ? null : m,
    ...v,
    children: (M, {
      ownerState: _,
      ...L
    }) => /* @__PURE__ */ C.cloneElement(s, {
      style: {
        opacity: 0,
        transform: Yc(0.75),
        visibility: M === "exited" && !l ? "hidden" : void 0,
        ...AE[M],
        ...y,
        ...s.props.style
      },
      ref: T,
      ...L
    })
  });
});
process.env.NODE_ENV !== "production" && (Hi.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: zr.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
Hi && (Hi.muiSupportAuto = !0);
function ME(e) {
  return wt("MuiPopover", e);
}
Et("MuiPopover", ["root", "paper"]);
function cp(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function up(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function dp(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function wi(e) {
  return typeof e == "function" ? e() : e;
}
const _E = (e) => {
  const {
    classes: t
  } = e;
  return Pt({
    root: ["root"],
    paper: ["paper"]
  }, ME, t);
}, DE = $e(cl, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), BE = $e(Jo, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), Fg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ct({
    props: t,
    name: "MuiPopover"
  }), {
    action: o,
    anchorEl: s,
    anchorOrigin: a = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: f,
    container: d,
    elevation: h = 8,
    marginThreshold: g = 16,
    open: y,
    PaperProps: m = {},
    // TODO: remove in v7
    slots: b = {},
    slotProps: v = {},
    transformOrigin: E = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: S,
    // TODO: remove in v7
    transitionDuration: w = "auto",
    TransitionProps: x = {},
    // TODO: remove in v7
    disableScrollLock: T = !1,
    ...R
  } = r, I = C.useRef(), N = {
    ...r,
    anchorOrigin: a,
    anchorReference: c,
    elevation: h,
    marginThreshold: g,
    transformOrigin: E,
    TransitionComponent: S,
    transitionDuration: w,
    TransitionProps: x
  }, p = _E(N), O = C.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const G = wi(s), ne = G && G.nodeType === 1 ? G : on(I.current).body, B = ne.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const pe = ne.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && pe.top === 0 && pe.left === 0 && pe.right === 0 && pe.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: B.top + cp(B, a.vertical),
      left: B.left + up(B, a.horizontal)
    };
  }, [s, a.horizontal, a.vertical, l, c]), $ = C.useCallback((G) => ({
    vertical: cp(G, E.vertical),
    horizontal: up(G, E.horizontal)
  }), [E.horizontal, E.vertical]), A = C.useCallback((G) => {
    const ne = {
      width: G.offsetWidth,
      height: G.offsetHeight
    }, B = $(ne);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: dp(B)
      };
    const pe = O();
    let ae = pe.top - B.vertical, me = pe.left - B.horizontal;
    const Me = ae + ne.height, Re = me + ne.width, Oe = sr(wi(s)), we = Oe.innerHeight - g, Pe = Oe.innerWidth - g;
    if (g !== null && ae < g) {
      const Se = ae - g;
      ae -= Se, B.vertical += Se;
    } else if (g !== null && Me > we) {
      const Se = Me - we;
      ae -= Se, B.vertical += Se;
    }
    if (process.env.NODE_ENV !== "production" && ne.height > we && ne.height && we && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${ne.height - we}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), g !== null && me < g) {
      const Se = me - g;
      me -= Se, B.horizontal += Se;
    } else if (Re > Pe) {
      const Se = Re - Pe;
      me -= Se, B.horizontal += Se;
    }
    return {
      top: `${Math.round(ae)}px`,
      left: `${Math.round(me)}px`,
      transformOrigin: dp(B)
    };
  }, [s, c, O, $, g]), [D, M] = C.useState(y), _ = C.useCallback(() => {
    const G = I.current;
    if (!G)
      return;
    const ne = A(G);
    ne.top !== null && G.style.setProperty("top", ne.top), ne.left !== null && (G.style.left = ne.left), G.style.transformOrigin = ne.transformOrigin, M(!0);
  }, [A]);
  C.useEffect(() => (T && window.addEventListener("scroll", _), () => window.removeEventListener("scroll", _)), [s, T, _]);
  const L = () => {
    _();
  }, U = () => {
    M(!1);
  };
  C.useEffect(() => {
    y && _();
  }), C.useImperativeHandle(o, () => y ? {
    updatePosition: () => {
      _();
    }
  } : null, [y, _]), C.useEffect(() => {
    if (!y)
      return;
    const G = _u(() => {
      _();
    }), ne = sr(wi(s));
    return ne.addEventListener("resize", G), () => {
      G.clear(), ne.removeEventListener("resize", G);
    };
  }, [s, y, _]);
  let z = w;
  const j = {
    slots: {
      transition: S,
      ...b
    },
    slotProps: {
      transition: x,
      paper: m,
      ...v
    }
  }, [V, K] = st("transition", {
    elementType: Hi,
    externalForwardedProps: j,
    ownerState: N,
    getSlotProps: (G) => ({
      ...G,
      onEntering: (ne, B) => {
        var pe;
        (pe = G.onEntering) == null || pe.call(G, ne, B), L();
      },
      onExited: (ne) => {
        var B;
        (B = G.onExited) == null || B.call(G, ne), U();
      }
    }),
    additionalProps: {
      appear: !0,
      in: y
    }
  });
  w === "auto" && !V.muiSupportAuto && (z = void 0);
  const Y = d || (s ? on(wi(s)).body : void 0), [te, {
    slots: X,
    slotProps: ee,
    ...re
  }] = st("root", {
    ref: n,
    elementType: DE,
    externalForwardedProps: {
      ...j,
      ...R
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: b.backdrop
      },
      slotProps: {
        backdrop: qu(typeof v.backdrop == "function" ? v.backdrop(N) : v.backdrop, {
          invisible: !0
        })
      },
      container: Y,
      open: y
    },
    ownerState: N,
    className: ge(p.root, f)
  }), [q, Q] = st("paper", {
    ref: I,
    className: p.paper,
    elementType: BE,
    externalForwardedProps: j,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: h,
      style: D ? void 0 : {
        opacity: 0
      }
    },
    ownerState: N
  });
  return /* @__PURE__ */ k(te, {
    ...re,
    ...!qc(te) && {
      slots: X,
      slotProps: ee,
      disableScrollLock: T
    },
    children: /* @__PURE__ */ k(V, {
      ...K,
      timeout: z,
      children: /* @__PURE__ */ k(q, {
        ...Q,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Fg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: Or,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: Vr(i.oneOfType([vr, i.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = wi(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: i.shape({
    left: i.number.isRequired,
    top: i.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: i.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: i.object,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([vr, i.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: Bu,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: i.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: i.shape({
    component: Mu
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: i.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: i.object
});
var fp;
const FE = $e("fieldset", {
  shouldForwardProp: ur
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), jE = $e("legend", {
  shouldForwardProp: ur
})(lt(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function jg(e) {
  const {
    children: t,
    classes: n,
    className: r,
    label: o,
    notched: s,
    ...a
  } = e, l = o != null && o !== "", c = {
    ...e,
    notched: s,
    withLabel: l
  };
  return /* @__PURE__ */ k(FE, {
    "aria-hidden": !0,
    className: r,
    ownerState: c,
    ...a,
    children: /* @__PURE__ */ k(jE, {
      ownerState: c,
      children: l ? /* @__PURE__ */ k("span", {
        children: o
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        fp || (fp = /* @__PURE__ */ k("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (jg.propTypes = {
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The label.
   */
  label: i.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool.isRequired,
  /**
   * @ignore
   */
  style: i.object
});
const LE = (e) => {
  const {
    classes: t
  } = e, r = Pt({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, E1, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, VE = $e(wg, {
  shouldForwardProp: (e) => ur(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: vg
})(lt(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${Un.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${Un.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${Un.focused} .${Un.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(xr()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${Un.focused} .${Un.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${Un.error} .${Un.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${Un.disabled} .${Un.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: r
      }) => n.multiline && r === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), zE = $e(jg, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(lt(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), WE = $e(Sg, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: xg
})(lt(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), ad = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var r;
  const o = Ct({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: s = {},
    fullWidth: a = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: f,
    slots: d = {},
    type: h = "text",
    ...g
  } = o, y = LE(o), m = al(), b = bg({
    props: o,
    muiFormControl: m,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), v = {
    ...o,
    color: b.color || "primary",
    disabled: b.disabled,
    error: b.error,
    focused: b.focused,
    formControl: m,
    fullWidth: a,
    hiddenLabel: b.hiddenLabel,
    multiline: u,
    size: b.size,
    type: h
  }, E = d.root ?? s.Root ?? VE, S = d.input ?? s.Input ?? WE;
  return /* @__PURE__ */ k(Tg, {
    slots: {
      root: E,
      input: S
    },
    renderSuffix: (w) => /* @__PURE__ */ k(zE, {
      ownerState: v,
      className: y.notchedOutline,
      label: c != null && c !== "" && b.required ? r || (r = /* @__PURE__ */ Ce(C.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof f < "u" ? f : !!(w.startAdornment || w.filled || w.focused)
    }),
    fullWidth: a,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: h,
    ...g,
    classes: {
      ...y,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (ad.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Or,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: i.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
ad.muiName = "Input";
const UE = cs(/* @__PURE__ */ k("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "RadioButtonUnchecked"), HE = cs(/* @__PURE__ */ k("path", {
  d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), "RadioButtonChecked"), qE = $e("span", {
  shouldForwardProp: ur
})({
  position: "relative",
  display: "flex"
}), GE = $e(UE)({
  // Scale applied to prevent dot misalignment in Safari
  transform: "scale(1)"
}), YE = $e(HE)(lt(({
  theme: e
}) => ({
  left: 0,
  position: "absolute",
  transform: "scale(0)",
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeIn,
    duration: e.transitions.duration.shortest
  }),
  variants: [{
    props: {
      checked: !0
    },
    style: {
      transform: "scale(1)",
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeOut,
        duration: e.transitions.duration.shortest
      })
    }
  }]
})));
function ld(e) {
  const {
    checked: t = !1,
    classes: n = {},
    fontSize: r
  } = e, o = {
    ...e,
    checked: t
  };
  return /* @__PURE__ */ Ce(qE, {
    className: n.root,
    ownerState: o,
    children: [/* @__PURE__ */ k(GE, {
      fontSize: r,
      className: n.background,
      ownerState: o
    }), /* @__PURE__ */ k(YE, {
      fontSize: r,
      className: n.dot,
      ownerState: o
    })]
  });
}
process.env.NODE_ENV !== "production" && (ld.propTypes = {
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   */
  fontSize: i.oneOf(["small", "medium"])
});
const Lg = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (Lg.displayName = "RadioGroupContext");
function KE() {
  return C.useContext(Lg);
}
function XE(e) {
  return wt("MuiRadio", e);
}
const pp = Et("MuiRadio", ["root", "checked", "disabled", "colorPrimary", "colorSecondary", "sizeSmall"]), QE = (e) => {
  const {
    classes: t,
    color: n,
    size: r
  } = e, o = {
    root: ["root", `color${ve(n)}`, r !== "medium" && `size${ve(r)}`]
  };
  return {
    ...t,
    ...Pt(o, XE, t)
  };
}, JE = $e(ll, {
  shouldForwardProp: (e) => ur(e) || e === "classes",
  name: "MuiRadio",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size !== "medium" && t[`size${ve(n.size)}`], t[`color${ve(n.color)}`]];
  }
})(lt(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  [`&.${pp.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: {
      color: "default",
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Vt(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(xr()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Vt(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(xr()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1
    },
    style: {
      [`&.${pp.checked}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
})));
function ZE(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
const eC = /* @__PURE__ */ k(ld, {
  checked: !0
}), tC = /* @__PURE__ */ k(ld, {}), Vg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ct({
    props: t,
    name: "MuiRadio"
  }), {
    checked: o,
    checkedIcon: s = eC,
    color: a = "primary",
    icon: l = tC,
    name: c,
    onChange: u,
    size: f = "medium",
    className: d,
    disabled: h,
    disableRipple: g = !1,
    slots: y = {},
    slotProps: m = {},
    inputProps: b,
    ...v
  } = r, E = al();
  let S = h;
  E && typeof S > "u" && (S = E.disabled), S ?? (S = !1);
  const w = {
    ...r,
    disabled: S,
    disableRipple: g,
    color: a,
    size: f
  }, x = QE(w), T = KE();
  let R = o;
  const I = Mc(u, T && T.onChange);
  let N = c;
  T && (typeof R > "u" && (R = ZE(T.value, r.value)), typeof N > "u" && (N = T.name));
  const p = m.input ?? b, [O, $] = st("root", {
    ref: n,
    elementType: JE,
    className: ge(x.root, d),
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      slots: y,
      slotProps: m,
      ...v
    },
    getSlotProps: (A) => ({
      ...A,
      onChange: (D, ...M) => {
        var _;
        (_ = A.onChange) == null || _.call(A, D, ...M), I(D, ...M);
      }
    }),
    ownerState: w,
    additionalProps: {
      type: "radio",
      icon: /* @__PURE__ */ C.cloneElement(l, {
        fontSize: l.props.fontSize ?? f
      }),
      checkedIcon: /* @__PURE__ */ C.cloneElement(s, {
        fontSize: s.props.fontSize ?? f
      }),
      disabled: S,
      name: N,
      checked: R,
      slots: y,
      slotProps: {
        // Do not forward `slotProps.root` again because it's already handled by the `RootSlot` in this file.
        input: typeof p == "function" ? p(w) : p
      }
    }
  });
  return /* @__PURE__ */ k(O, {
    ...$,
    classes: x
  });
});
process.env.NODE_ENV !== "production" && (Vg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   * @default <RadioButtonIcon checked />
   */
  checkedIcon: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <RadioButtonIcon />
   */
  icon: i.node,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputRef: Or,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   */
  value: i.any
});
function nC(e) {
  return wt("MuiTooltip", e);
}
const xt = Et("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]);
function rC(e) {
  return Math.round(e * 1e5) / 1e5;
}
const oC = (e) => {
  const {
    classes: t,
    disableInteractive: n,
    arrow: r,
    touch: o,
    placement: s
  } = e, a = {
    popper: ["popper", !n && "popperInteractive", r && "popperArrow"],
    tooltip: ["tooltip", r && "tooltipArrow", o && "touch", `tooltipPlacement${ve(s.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return Pt(a, nC, t);
}, iC = $e(sl, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popper, !n.disableInteractive && t.popperInteractive, n.arrow && t.popperArrow, !n.open && t.popperClose];
  }
})(lt(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.tooltip,
  pointerEvents: "none",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableInteractive,
    style: {
      pointerEvents: "auto"
    }
  }, {
    props: ({
      open: t
    }) => !t,
    style: {
      pointerEvents: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      [`&[data-popper-placement*="bottom"] .${xt.arrow}`]: {
        top: 0,
        marginTop: "-0.71em",
        "&::before": {
          transformOrigin: "0 100%"
        }
      },
      [`&[data-popper-placement*="top"] .${xt.arrow}`]: {
        bottom: 0,
        marginBottom: "-0.71em",
        "&::before": {
          transformOrigin: "100% 0"
        }
      },
      [`&[data-popper-placement*="right"] .${xt.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "100% 100%"
        }
      },
      [`&[data-popper-placement*="left"] .${xt.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "0 0"
        }
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${xt.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${xt.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${xt.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${xt.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }]
}))), sC = $e("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.tooltip, n.touch && t.touch, n.arrow && t.tooltipArrow, t[`tooltipPlacement${ve(n.placement.split("-")[0])}`]];
  }
})(lt(({
  theme: e
}) => ({
  backgroundColor: e.vars ? e.vars.palette.Tooltip.bg : Vt(e.palette.grey[700], 0.92),
  borderRadius: (e.vars || e).shape.borderRadius,
  color: (e.vars || e).palette.common.white,
  fontFamily: e.typography.fontFamily,
  padding: "4px 8px",
  fontSize: e.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: e.typography.fontWeightMedium,
  [`.${xt.popper}[data-popper-placement*="left"] &`]: {
    transformOrigin: "right center"
  },
  [`.${xt.popper}[data-popper-placement*="right"] &`]: {
    transformOrigin: "left center"
  },
  [`.${xt.popper}[data-popper-placement*="top"] &`]: {
    transformOrigin: "center bottom",
    marginBottom: "14px"
  },
  [`.${xt.popper}[data-popper-placement*="bottom"] &`]: {
    transformOrigin: "center top",
    marginTop: "14px"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      position: "relative",
      margin: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      padding: "8px 16px",
      fontSize: e.typography.pxToRem(14),
      lineHeight: `${rC(16 / 14)}em`,
      fontWeight: e.typography.fontWeightRegular
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl,
    style: {
      [`.${xt.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "14px"
      },
      [`.${xt.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl && t.touch,
    style: {
      [`.${xt.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "24px"
      },
      [`.${xt.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl,
    style: {
      [`.${xt.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "14px"
      },
      [`.${xt.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl && t.touch,
    style: {
      [`.${xt.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "24px"
      },
      [`.${xt.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${xt.popper}[data-popper-placement*="top"] &`]: {
        marginBottom: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${xt.popper}[data-popper-placement*="bottom"] &`]: {
        marginTop: "24px"
      }
    }
  }]
}))), aC = $e("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (e, t) => t.arrow
})(lt(({
  theme: e
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: e.vars ? e.vars.palette.Tooltip.bg : Vt(e.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
})));
let js = !1;
const mp = new _h();
let ai = {
  x: 0,
  y: 0
};
function Ls(e, t) {
  return (n, ...r) => {
    t && t(n, ...r), e(n, ...r);
  };
}
const ul = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ct({
    props: t,
    name: "MuiTooltip"
  }), {
    arrow: o = !1,
    children: s,
    classes: a,
    components: l = {},
    componentsProps: c = {},
    describeChild: u = !1,
    disableFocusListener: f = !1,
    disableHoverListener: d = !1,
    disableInteractive: h = !1,
    disableTouchListener: g = !1,
    enterDelay: y = 100,
    enterNextDelay: m = 0,
    enterTouchDelay: b = 700,
    followCursor: v = !1,
    id: E,
    leaveDelay: S = 0,
    leaveTouchDelay: w = 1500,
    onClose: x,
    onOpen: T,
    open: R,
    placement: I = "bottom",
    PopperComponent: N,
    PopperProps: p = {},
    slotProps: O = {},
    slots: $ = {},
    title: A,
    TransitionComponent: D,
    TransitionProps: M,
    ..._
  } = r, L = /* @__PURE__ */ C.isValidElement(s) ? s : /* @__PURE__ */ k("span", {
    children: s
  }), U = Rr(), z = Lu(), [j, V] = C.useState(), [K, Y] = C.useState(null), te = C.useRef(!1), X = h || v, ee = Io(), re = Io(), q = Io(), Q = Io(), [G, ne] = Ah({
    controlled: R,
    default: !1,
    name: "Tooltip",
    state: "open"
  });
  let B = G;
  if (process.env.NODE_ENV !== "production") {
    const {
      current: Te
    } = C.useRef(R !== void 0);
    C.useEffect(() => {
      j && j.disabled && !Te && A !== "" && j.tagName.toLowerCase() === "button" && console.warn(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join(`
`));
    }, [A, j, Te]);
  }
  const pe = Du(E), ae = C.useRef(), me = tr(() => {
    ae.current !== void 0 && (document.body.style.WebkitUserSelect = ae.current, ae.current = void 0), Q.clear();
  });
  C.useEffect(() => me, [me]);
  const Me = (Te) => {
    mp.clear(), js = !0, ne(!0), T && !B && T(Te);
  }, Re = tr(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    (Te) => {
      mp.start(800 + S, () => {
        js = !1;
      }), ne(!1), x && B && x(Te), ee.start(U.transitions.duration.shortest, () => {
        te.current = !1;
      });
    }
  ), Oe = (Te) => {
    te.current && Te.type !== "touchstart" || (j && j.removeAttribute("title"), re.clear(), q.clear(), y || js && m ? re.start(js ? m : y, () => {
      Me(Te);
    }) : Me(Te));
  }, we = (Te) => {
    re.clear(), q.start(S, () => {
      Re(Te);
    });
  }, [, Pe] = C.useState(!1), Se = (Te) => {
    pa(Te.target) || (Pe(!1), we(Te));
  }, P = (Te) => {
    j || V(Te.currentTarget), pa(Te.target) && (Pe(!0), Oe(Te));
  }, W = (Te) => {
    te.current = !0;
    const Ut = L.props;
    Ut.onTouchStart && Ut.onTouchStart(Te);
  }, H = (Te) => {
    W(Te), q.clear(), ee.clear(), me(), ae.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", Q.start(b, () => {
      document.body.style.WebkitUserSelect = ae.current, Oe(Te);
    });
  }, le = (Te) => {
    L.props.onTouchEnd && L.props.onTouchEnd(Te), me(), q.start(w, () => {
      Re(Te);
    });
  };
  C.useEffect(() => {
    if (!B)
      return;
    function Te(Ut) {
      Ut.key === "Escape" && Re(Ut);
    }
    return document.addEventListener("keydown", Te), () => {
      document.removeEventListener("keydown", Te);
    };
  }, [Re, B]);
  const se = Kt(uo(L), V, n);
  !A && A !== 0 && (B = !1);
  const ie = C.useRef(), ue = (Te) => {
    const Ut = L.props;
    Ut.onMouseMove && Ut.onMouseMove(Te), ai = {
      x: Te.clientX,
      y: Te.clientY
    }, ie.current && ie.current.update();
  }, be = {}, xe = typeof A == "string";
  u ? (be.title = !B && xe && !d ? A : null, be["aria-describedby"] = B ? pe : null) : (be["aria-label"] = xe ? A : null, be["aria-labelledby"] = B && !xe ? pe : null);
  const oe = {
    ...be,
    ..._,
    ...L.props,
    className: ge(_.className, L.props.className),
    onTouchStart: W,
    ref: se,
    ...v ? {
      onMouseMove: ue
    } : {}
  };
  process.env.NODE_ENV !== "production" && (oe["data-mui-internal-clone-element"] = !0, C.useEffect(() => {
    j && !j.getAttribute("data-mui-internal-clone-element") && console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join(`
`));
  }, [j]));
  const Le = {};
  g || (oe.onTouchStart = H, oe.onTouchEnd = le), d || (oe.onMouseOver = Ls(Oe, oe.onMouseOver), oe.onMouseLeave = Ls(we, oe.onMouseLeave), X || (Le.onMouseOver = Oe, Le.onMouseLeave = we)), f || (oe.onFocus = Ls(P, oe.onFocus), oe.onBlur = Ls(Se, oe.onBlur), X || (Le.onFocus = P, Le.onBlur = Se)), process.env.NODE_ENV !== "production" && L.props.title && console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${L.props.title}\` or the Tooltip component.`].join(`
`));
  const Ve = {
    ...r,
    isRtl: z,
    arrow: o,
    disableInteractive: X,
    placement: I,
    PopperComponentProp: N,
    touch: te.current
  }, We = typeof O.popper == "function" ? O.popper(Ve) : O.popper, _n = C.useMemo(() => {
    var Ut, $t;
    let Te = [{
      name: "arrow",
      enabled: !!K,
      options: {
        element: K,
        padding: 4
      }
    }];
    return (Ut = p.popperOptions) != null && Ut.modifiers && (Te = Te.concat(p.popperOptions.modifiers)), ($t = We == null ? void 0 : We.popperOptions) != null && $t.modifiers && (Te = Te.concat(We.popperOptions.modifiers)), {
      ...p.popperOptions,
      ...We == null ? void 0 : We.popperOptions,
      modifiers: Te
    };
  }, [K, p.popperOptions, We == null ? void 0 : We.popperOptions]), ye = oC(Ve), Fe = typeof O.transition == "function" ? O.transition(Ve) : O.transition, Je = {
    slots: {
      popper: l.Popper,
      transition: l.Transition ?? D,
      tooltip: l.Tooltip,
      arrow: l.Arrow,
      ...$
    },
    slotProps: {
      arrow: O.arrow ?? c.arrow,
      popper: {
        ...p,
        ...We ?? c.popper
      },
      // resolvedPopperProps can be spread because it's already an object
      tooltip: O.tooltip ?? c.tooltip,
      transition: {
        ...M,
        ...Fe ?? c.transition
      }
    }
  }, [jt, mo] = st("popper", {
    elementType: iC,
    externalForwardedProps: Je,
    ownerState: Ve,
    className: ge(ye.popper, p == null ? void 0 : p.className)
  }), [Vl, Es] = st("transition", {
    elementType: Hi,
    externalForwardedProps: Je,
    ownerState: Ve
  }), [Cs, Ae] = st("tooltip", {
    elementType: sC,
    className: ye.tooltip,
    externalForwardedProps: Je,
    ownerState: Ve
  }), [Rt, Bt] = st("arrow", {
    elementType: aC,
    className: ye.arrow,
    externalForwardedProps: Je,
    ownerState: Ve,
    ref: Y
  });
  return /* @__PURE__ */ Ce(C.Fragment, {
    children: [/* @__PURE__ */ C.cloneElement(L, oe), /* @__PURE__ */ k(jt, {
      as: N ?? sl,
      placement: I,
      anchorEl: v ? {
        getBoundingClientRect: () => ({
          top: ai.y,
          left: ai.x,
          right: ai.x,
          bottom: ai.y,
          width: 0,
          height: 0
        })
      } : j,
      popperRef: ie,
      open: j ? B : !1,
      id: pe,
      transition: !0,
      ...Le,
      ...mo,
      popperOptions: _n,
      children: ({
        TransitionProps: Te
      }) => /* @__PURE__ */ k(Vl, {
        timeout: U.transitions.duration.shorter,
        ...Te,
        ...Es,
        children: /* @__PURE__ */ Ce(Cs, {
          ...Ae,
          children: [A, o ? /* @__PURE__ */ k(Rt, {
            ...Bt
          }) : null]
        })
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (ul.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: i.bool,
  /**
   * Tooltip reference element.
   */
  children: zr.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Arrow: i.elementType,
    Popper: i.elementType,
    Tooltip: i.elementType,
    Transition: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    arrow: i.object,
    popper: i.object,
    tooltip: i.object,
    transition: i.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: i.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: i.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: i.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: i.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: i.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: i.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: i.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: i.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: i.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: i.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: i.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: i.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: i.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @deprecated use the `slots.popper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  PopperComponent: i.elementType,
  /**
   * Props applied to the [`Popper`](https://mui.com/material-ui/api/popper/) element.
   * @deprecated use the `slotProps.popper` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  PopperProps: i.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    arrow: i.oneOfType([i.func, i.object]),
    popper: i.oneOfType([i.func, i.object]),
    tooltip: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    arrow: i.elementType,
    popper: i.elementType,
    tooltip: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: i.node,
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: i.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: i.object
});
function lC(e) {
  return wt("MuiSwitch", e);
}
const Jt = Et("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]), cC = (e) => {
  const {
    classes: t,
    edge: n,
    size: r,
    color: o,
    checked: s,
    disabled: a
  } = e, l = {
    root: ["root", n && `edge${ve(n)}`, `size${ve(r)}`],
    switchBase: ["switchBase", `color${ve(o)}`, s && "checked", a && "disabled"],
    thumb: ["thumb"],
    track: ["track"],
    input: ["input"]
  }, c = Pt(l, lC, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...c
  };
}, uC = $e("span", {
  name: "MuiSwitch",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.edge && t[`edge${ve(n.edge)}`], t[`size${ve(n.size)}`]];
  }
})({
  display: "inline-flex",
  width: 34 + 12 * 2,
  height: 14 + 12 * 2,
  overflow: "hidden",
  padding: 12,
  boxSizing: "border-box",
  position: "relative",
  flexShrink: 0,
  zIndex: 0,
  // Reset the stacking context.
  verticalAlign: "middle",
  // For correct alignment with the text.
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [{
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -8
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -8
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      width: 40,
      height: 24,
      padding: 7,
      [`& .${Jt.thumb}`]: {
        width: 16,
        height: 16
      },
      [`& .${Jt.switchBase}`]: {
        padding: 4,
        [`&.${Jt.checked}`]: {
          transform: "translateX(16px)"
        }
      }
    }
  }]
}), dC = $e(ll, {
  name: "MuiSwitch",
  slot: "SwitchBase",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.switchBase, {
      [`& .${Jt.input}`]: t.input
    }, n.color !== "default" && t[`color${ve(n.color)}`]];
  }
})(lt(({
  theme: e
}) => ({
  position: "absolute",
  top: 0,
  left: 0,
  zIndex: 1,
  // Render above the focus ripple.
  color: e.vars ? e.vars.palette.Switch.defaultColor : `${e.palette.mode === "light" ? e.palette.common.white : e.palette.grey[300]}`,
  transition: e.transitions.create(["left", "transform"], {
    duration: e.transitions.duration.shortest
  }),
  [`&.${Jt.checked}`]: {
    transform: "translateX(20px)"
  },
  [`&.${Jt.disabled}`]: {
    color: e.vars ? e.vars.palette.Switch.defaultDisabledColor : `${e.palette.mode === "light" ? e.palette.grey[100] : e.palette.grey[600]}`
  },
  [`&.${Jt.checked} + .${Jt.track}`]: {
    opacity: 0.5
  },
  [`&.${Jt.disabled} + .${Jt.track}`]: {
    opacity: e.vars ? e.vars.opacity.switchTrackDisabled : `${e.palette.mode === "light" ? 0.12 : 0.2}`
  },
  [`& .${Jt.input}`]: {
    left: "-100%",
    width: "300%"
  }
})), lt(({
  theme: e
}) => ({
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : Vt(e.palette.action.active, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  variants: [...Object.entries(e.palette).filter(xr(["light"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${Jt.checked}`]: {
        color: (e.vars || e).palette[t].main,
        "&:hover": {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : Vt(e.palette[t].main, e.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        },
        [`&.${Jt.disabled}`]: {
          color: e.vars ? e.vars.palette.Switch[`${t}DisabledColor`] : `${e.palette.mode === "light" ? as(e.palette[t].main, 0.62) : ss(e.palette[t].main, 0.55)}`
        }
      },
      [`&.${Jt.checked} + .${Jt.track}`]: {
        backgroundColor: (e.vars || e).palette[t].main
      }
    }
  }))]
}))), fC = $e("span", {
  name: "MuiSwitch",
  slot: "Track",
  overridesResolver: (e, t) => t.track
})(lt(({
  theme: e
}) => ({
  height: "100%",
  width: "100%",
  borderRadius: 14 / 2,
  zIndex: -1,
  transition: e.transitions.create(["opacity", "background-color"], {
    duration: e.transitions.duration.shortest
  }),
  backgroundColor: e.vars ? e.vars.palette.common.onBackground : `${e.palette.mode === "light" ? e.palette.common.black : e.palette.common.white}`,
  opacity: e.vars ? e.vars.opacity.switchTrack : `${e.palette.mode === "light" ? 0.38 : 0.3}`
}))), pC = $e("span", {
  name: "MuiSwitch",
  slot: "Thumb",
  overridesResolver: (e, t) => t.thumb
})(lt(({
  theme: e
}) => ({
  boxShadow: (e.vars || e).shadows[1],
  backgroundColor: "currentColor",
  width: 20,
  height: 20,
  borderRadius: "50%"
}))), zg = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Ct({
    props: t,
    name: "MuiSwitch"
  }), {
    className: o,
    color: s = "primary",
    edge: a = !1,
    size: l = "medium",
    sx: c,
    slots: u = {},
    slotProps: f = {},
    ...d
  } = r, h = {
    ...r,
    color: s,
    edge: a,
    size: l
  }, g = cC(h), y = {
    slots: u,
    slotProps: f
  }, [m, b] = st("root", {
    className: ge(g.root, o),
    elementType: uC,
    externalForwardedProps: y,
    ownerState: h,
    additionalProps: {
      sx: c
    }
  }), [v, E] = st("thumb", {
    className: g.thumb,
    elementType: pC,
    externalForwardedProps: y,
    ownerState: h
  }), S = /* @__PURE__ */ k(v, {
    ...E
  }), [w, x] = st("track", {
    className: g.track,
    elementType: fC,
    externalForwardedProps: y,
    ownerState: h
  });
  return /* @__PURE__ */ Ce(m, {
    ...b,
    children: [/* @__PURE__ */ k(dC, {
      type: "checkbox",
      icon: S,
      checkedIcon: S,
      ref: n,
      ownerState: h,
      ...d,
      classes: {
        ...g,
        root: g.switchBase
      },
      slots: {
        ...u.switchBase && {
          root: u.switchBase
        },
        ...u.input && {
          input: u.input
        }
      },
      slotProps: {
        ...f.switchBase && {
          root: typeof f.switchBase == "function" ? f.switchBase(h) : f.switchBase
        },
        ...f.input && {
          input: typeof f.input == "function" ? f.input(h) : f.input
        }
      }
    }), /* @__PURE__ */ k(w, {
      ...x
    })]
  });
});
process.env.NODE_ENV !== "production" && (zg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: i.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: i.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: i.node,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputRef: Or,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense switch styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    switchBase: i.oneOfType([i.func, i.object]),
    thumb: i.oneOfType([i.func, i.object]),
    track: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType,
    switchBase: i.elementType,
    thumb: i.elementType,
    track: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: i.any
});
const li = Ih({
  themeId: jn
}), Wg = Object.freeze(
  {
    left: 0,
    top: 0,
    width: 16,
    height: 16
  }
), Sa = Object.freeze({
  rotate: 0,
  vFlip: !1,
  hFlip: !1
}), cd = Object.freeze({
  ...Wg,
  ...Sa
}), Kc = Object.freeze({
  ...cd,
  body: "",
  hidden: !1
});
function mC(e, t) {
  const n = {};
  !e.hFlip != !t.hFlip && (n.hFlip = !0), !e.vFlip != !t.vFlip && (n.vFlip = !0);
  const r = ((e.rotate || 0) + (t.rotate || 0)) % 4;
  return r && (n.rotate = r), n;
}
function hp(e, t) {
  const n = mC(e, t);
  for (const r in Kc)
    r in Sa ? r in e && !(r in n) && (n[r] = Sa[r]) : r in t ? n[r] = t[r] : r in e && (n[r] = e[r]);
  return n;
}
function hC(e, t) {
  const n = e.icons, r = e.aliases || /* @__PURE__ */ Object.create(null), o = /* @__PURE__ */ Object.create(null);
  function s(a) {
    if (n[a])
      return o[a] = [];
    if (!(a in o)) {
      o[a] = null;
      const l = r[a] && r[a].parent, c = l && s(l);
      c && (o[a] = [l].concat(c));
    }
    return o[a];
  }
  return Object.keys(n).concat(Object.keys(r)).forEach(s), o;
}
function gC(e, t, n) {
  const r = e.icons, o = e.aliases || /* @__PURE__ */ Object.create(null);
  let s = {};
  function a(l) {
    s = hp(
      r[l] || o[l],
      s
    );
  }
  return a(t), n.forEach(a), hp(e, s);
}
function Ug(e, t) {
  const n = [];
  if (typeof e != "object" || typeof e.icons != "object")
    return n;
  e.not_found instanceof Array && e.not_found.forEach((o) => {
    t(o, null), n.push(o);
  });
  const r = hC(e);
  for (const o in r) {
    const s = r[o];
    s && (t(o, gC(e, o, s)), n.push(o));
  }
  return n;
}
const yC = {
  provider: "",
  aliases: {},
  not_found: {},
  ...Wg
};
function ic(e, t) {
  for (const n in t)
    if (n in e && typeof e[n] != typeof t[n])
      return !1;
  return !0;
}
function Hg(e) {
  if (typeof e != "object" || e === null)
    return null;
  const t = e;
  if (typeof t.prefix != "string" || !e.icons || typeof e.icons != "object" || !ic(e, yC))
    return null;
  const n = t.icons;
  for (const o in n) {
    const s = n[o];
    if (
      // Name cannot be empty
      !o || // Must have body
      typeof s.body != "string" || // Check other props
      !ic(
        s,
        Kc
      )
    )
      return null;
  }
  const r = t.aliases || /* @__PURE__ */ Object.create(null);
  for (const o in r) {
    const s = r[o], a = s.parent;
    if (
      // Name cannot be empty
      !o || // Parent must be set and point to existing icon
      typeof a != "string" || !n[a] && !r[a] || // Check other props
      !ic(
        s,
        Kc
      )
    )
      return null;
  }
  return t;
}
const qg = /^[a-z0-9]+(-[a-z0-9]+)*$/, dl = (e, t, n, r = "") => {
  const o = e.split(":");
  if (e.slice(0, 1) === "@") {
    if (o.length < 2 || o.length > 3)
      return null;
    r = o.shift().slice(1);
  }
  if (o.length > 3 || !o.length)
    return null;
  if (o.length > 1) {
    const l = o.pop(), c = o.pop(), u = {
      // Allow provider without '@': "provider:prefix:name"
      provider: o.length > 0 ? o[0] : r,
      prefix: c,
      name: l
    };
    return t && !ra(u) ? null : u;
  }
  const s = o[0], a = s.split("-");
  if (a.length > 1) {
    const l = {
      provider: r,
      prefix: a.shift(),
      name: a.join("-")
    };
    return t && !ra(l) ? null : l;
  }
  if (n && r === "") {
    const l = {
      provider: r,
      prefix: "",
      name: s
    };
    return t && !ra(l, n) ? null : l;
  }
  return null;
}, ra = (e, t) => e ? !!// Check prefix: cannot be empty, unless allowSimpleName is enabled
// Check name: cannot be empty
((t && e.prefix === "" || e.prefix) && e.name) : !1, gp = /* @__PURE__ */ Object.create(null);
function bC(e, t) {
  return {
    provider: e,
    prefix: t,
    icons: /* @__PURE__ */ Object.create(null),
    missing: /* @__PURE__ */ new Set()
  };
}
function Ho(e, t) {
  const n = gp[e] || (gp[e] = /* @__PURE__ */ Object.create(null));
  return n[t] || (n[t] = bC(e, t));
}
function Gg(e, t) {
  return Hg(t) ? Ug(t, (n, r) => {
    r ? e.icons[n] = r : e.missing.add(n);
  }) : [];
}
function vC(e, t, n) {
  try {
    if (typeof n.body == "string")
      return e.icons[t] = { ...n }, !0;
  } catch {
  }
  return !1;
}
let qi = !1;
function Yg(e) {
  return typeof e == "boolean" && (qi = e), qi;
}
function yp(e) {
  const t = typeof e == "string" ? dl(e, !0, qi) : e;
  if (t) {
    const n = Ho(t.provider, t.prefix), r = t.name;
    return n.icons[r] || (n.missing.has(r) ? null : void 0);
  }
}
function xC(e, t) {
  const n = dl(e, !0, qi);
  if (!n)
    return !1;
  const r = Ho(n.provider, n.prefix);
  return t ? vC(r, n.name, t) : (r.missing.add(n.name), !0);
}
function wC(e, t) {
  if (typeof e != "object")
    return !1;
  if (typeof t != "string" && (t = e.provider || ""), qi && !t && !e.prefix) {
    let o = !1;
    return Hg(e) && (e.prefix = "", Ug(e, (s, a) => {
      xC(s, a) && (o = !0);
    })), o;
  }
  const n = e.prefix;
  if (!ra({
    prefix: n,
    name: "a"
  }))
    return !1;
  const r = Ho(t, n);
  return !!Gg(r, e);
}
const Kg = Object.freeze({
  width: null,
  height: null
}), Xg = Object.freeze({
  // Dimensions
  ...Kg,
  // Transformations
  ...Sa
}), SC = /(-?[0-9.]*[0-9]+[0-9.]*)/g, TC = /^-?[0-9.]*[0-9]+[0-9.]*$/g;
function bp(e, t, n) {
  if (t === 1)
    return e;
  if (n = n || 100, typeof e == "number")
    return Math.ceil(e * t * n) / n;
  if (typeof e != "string")
    return e;
  const r = e.split(SC);
  if (r === null || !r.length)
    return e;
  const o = [];
  let s = r.shift(), a = TC.test(s);
  for (; ; ) {
    if (a) {
      const l = parseFloat(s);
      isNaN(l) ? o.push(s) : o.push(Math.ceil(l * t * n) / n);
    } else
      o.push(s);
    if (s = r.shift(), s === void 0)
      return o.join("");
    a = !a;
  }
}
function EC(e, t = "defs") {
  let n = "";
  const r = e.indexOf("<" + t);
  for (; r >= 0; ) {
    const o = e.indexOf(">", r), s = e.indexOf("</" + t);
    if (o === -1 || s === -1)
      break;
    const a = e.indexOf(">", s);
    if (a === -1)
      break;
    n += e.slice(o + 1, s).trim(), e = e.slice(0, r).trim() + e.slice(a + 1);
  }
  return {
    defs: n,
    content: e
  };
}
function CC(e, t) {
  return e ? "<defs>" + e + "</defs>" + t : t;
}
function OC(e, t, n) {
  const r = EC(e);
  return CC(r.defs, t + r.content + n);
}
const RC = (e) => e === "unset" || e === "undefined" || e === "none";
function $C(e, t) {
  const n = {
    ...cd,
    ...e
  }, r = {
    ...Xg,
    ...t
  }, o = {
    left: n.left,
    top: n.top,
    width: n.width,
    height: n.height
  };
  let s = n.body;
  [n, r].forEach((m) => {
    const b = [], v = m.hFlip, E = m.vFlip;
    let S = m.rotate;
    v ? E ? S += 2 : (b.push(
      "translate(" + (o.width + o.left).toString() + " " + (0 - o.top).toString() + ")"
    ), b.push("scale(-1 1)"), o.top = o.left = 0) : E && (b.push(
      "translate(" + (0 - o.left).toString() + " " + (o.height + o.top).toString() + ")"
    ), b.push("scale(1 -1)"), o.top = o.left = 0);
    let w;
    switch (S < 0 && (S -= Math.floor(S / 4) * 4), S = S % 4, S) {
      case 1:
        w = o.height / 2 + o.top, b.unshift(
          "rotate(90 " + w.toString() + " " + w.toString() + ")"
        );
        break;
      case 2:
        b.unshift(
          "rotate(180 " + (o.width / 2 + o.left).toString() + " " + (o.height / 2 + o.top).toString() + ")"
        );
        break;
      case 3:
        w = o.width / 2 + o.left, b.unshift(
          "rotate(-90 " + w.toString() + " " + w.toString() + ")"
        );
        break;
    }
    S % 2 === 1 && (o.left !== o.top && (w = o.left, o.left = o.top, o.top = w), o.width !== o.height && (w = o.width, o.width = o.height, o.height = w)), b.length && (s = OC(
      s,
      '<g transform="' + b.join(" ") + '">',
      "</g>"
    ));
  });
  const a = r.width, l = r.height, c = o.width, u = o.height;
  let f, d;
  a === null ? (d = l === null ? "1em" : l === "auto" ? u : l, f = bp(d, c / u)) : (f = a === "auto" ? c : a, d = l === null ? bp(f, u / c) : l === "auto" ? u : l);
  const h = {}, g = (m, b) => {
    RC(b) || (h[m] = b.toString());
  };
  g("width", f), g("height", d);
  const y = [o.left, o.top, c, u];
  return h.viewBox = y.join(" "), {
    attributes: h,
    viewBox: y,
    body: s
  };
}
const kC = /\sid="(\S+)"/g, IC = "IconifyId" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);
let PC = 0;
function NC(e, t = IC) {
  const n = [];
  let r;
  for (; r = kC.exec(e); )
    n.push(r[1]);
  if (!n.length)
    return e;
  const o = "suffix" + (Math.random() * 16777216 | Date.now()).toString(16);
  return n.forEach((s) => {
    const a = typeof t == "function" ? t(s) : t + (PC++).toString(), l = s.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    e = e.replace(
      // Allowed characters before id: [#;"]
      // Allowed characters after id: [)"], .[a-z]
      new RegExp('([#;"])(' + l + ')([")]|\\.[a-z])', "g"),
      "$1" + a + o + "$3"
    );
  }), e = e.replace(new RegExp(o, "g"), ""), e;
}
const Xc = /* @__PURE__ */ Object.create(null);
function AC(e, t) {
  Xc[e] = t;
}
function Qc(e) {
  return Xc[e] || Xc[""];
}
function ud(e) {
  let t;
  if (typeof e.resources == "string")
    t = [e.resources];
  else if (t = e.resources, !(t instanceof Array) || !t.length)
    return null;
  return {
    // API hosts
    resources: t,
    // Root path
    path: e.path || "/",
    // URL length limit
    maxURL: e.maxURL || 500,
    // Timeout before next host is used.
    rotate: e.rotate || 750,
    // Timeout before failing query.
    timeout: e.timeout || 5e3,
    // Randomise default API end point.
    random: e.random === !0,
    // Start index
    index: e.index || 0,
    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).
    dataAfterTimeout: e.dataAfterTimeout !== !1
  };
}
const dd = /* @__PURE__ */ Object.create(null), ci = [
  "https://api.simplesvg.com",
  "https://api.unisvg.com"
], oa = [];
for (; ci.length > 0; )
  ci.length === 1 || Math.random() > 0.5 ? oa.push(ci.shift()) : oa.push(ci.pop());
dd[""] = ud({
  resources: ["https://api.iconify.design"].concat(oa)
});
function MC(e, t) {
  const n = ud(t);
  return n === null ? !1 : (dd[e] = n, !0);
}
function fd(e) {
  return dd[e];
}
const _C = () => {
  let e;
  try {
    if (e = fetch, typeof e == "function")
      return e;
  } catch {
  }
};
let vp = _C();
function DC(e, t) {
  const n = fd(e);
  if (!n)
    return 0;
  let r;
  if (!n.maxURL)
    r = 0;
  else {
    let o = 0;
    n.resources.forEach((a) => {
      o = Math.max(o, a.length);
    });
    const s = t + ".json?icons=";
    r = n.maxURL - o - n.path.length - s.length;
  }
  return r;
}
function BC(e) {
  return e === 404;
}
const FC = (e, t, n) => {
  const r = [], o = DC(e, t), s = "icons";
  let a = {
    type: s,
    provider: e,
    prefix: t,
    icons: []
  }, l = 0;
  return n.forEach((c, u) => {
    l += c.length + 1, l >= o && u > 0 && (r.push(a), a = {
      type: s,
      provider: e,
      prefix: t,
      icons: []
    }, l = c.length), a.icons.push(c);
  }), r.push(a), r;
};
function jC(e) {
  if (typeof e == "string") {
    const t = fd(e);
    if (t)
      return t.path;
  }
  return "/";
}
const LC = (e, t, n) => {
  if (!vp) {
    n("abort", 424);
    return;
  }
  let r = jC(t.provider);
  switch (t.type) {
    case "icons": {
      const s = t.prefix, l = t.icons.join(","), c = new URLSearchParams({
        icons: l
      });
      r += s + ".json?" + c.toString();
      break;
    }
    case "custom": {
      const s = t.uri;
      r += s.slice(0, 1) === "/" ? s.slice(1) : s;
      break;
    }
    default:
      n("abort", 400);
      return;
  }
  let o = 503;
  vp(e + r).then((s) => {
    const a = s.status;
    if (a !== 200) {
      setTimeout(() => {
        n(BC(a) ? "abort" : "next", a);
      });
      return;
    }
    return o = 501, s.json();
  }).then((s) => {
    if (typeof s != "object" || s === null) {
      setTimeout(() => {
        s === 404 ? n("abort", s) : n("next", o);
      });
      return;
    }
    setTimeout(() => {
      n("success", s);
    });
  }).catch(() => {
    n("next", o);
  });
}, VC = {
  prepare: FC,
  send: LC
};
function zC(e) {
  const t = {
    loaded: [],
    missing: [],
    pending: []
  }, n = /* @__PURE__ */ Object.create(null);
  e.sort((o, s) => o.provider !== s.provider ? o.provider.localeCompare(s.provider) : o.prefix !== s.prefix ? o.prefix.localeCompare(s.prefix) : o.name.localeCompare(s.name));
  let r = {
    provider: "",
    prefix: "",
    name: ""
  };
  return e.forEach((o) => {
    if (r.name === o.name && r.prefix === o.prefix && r.provider === o.provider)
      return;
    r = o;
    const s = o.provider, a = o.prefix, l = o.name, c = n[s] || (n[s] = /* @__PURE__ */ Object.create(null)), u = c[a] || (c[a] = Ho(s, a));
    let f;
    l in u.icons ? f = t.loaded : a === "" || u.missing.has(l) ? f = t.missing : f = t.pending;
    const d = {
      provider: s,
      prefix: a,
      name: l
    };
    f.push(d);
  }), t;
}
function Qg(e, t) {
  e.forEach((n) => {
    const r = n.loaderCallbacks;
    r && (n.loaderCallbacks = r.filter((o) => o.id !== t));
  });
}
function WC(e) {
  e.pendingCallbacksFlag || (e.pendingCallbacksFlag = !0, setTimeout(() => {
    e.pendingCallbacksFlag = !1;
    const t = e.loaderCallbacks ? e.loaderCallbacks.slice(0) : [];
    if (!t.length)
      return;
    let n = !1;
    const r = e.provider, o = e.prefix;
    t.forEach((s) => {
      const a = s.icons, l = a.pending.length;
      a.pending = a.pending.filter((c) => {
        if (c.prefix !== o)
          return !0;
        const u = c.name;
        if (e.icons[u])
          a.loaded.push({
            provider: r,
            prefix: o,
            name: u
          });
        else if (e.missing.has(u))
          a.missing.push({
            provider: r,
            prefix: o,
            name: u
          });
        else
          return n = !0, !0;
        return !1;
      }), a.pending.length !== l && (n || Qg([e], s.id), s.callback(
        a.loaded.slice(0),
        a.missing.slice(0),
        a.pending.slice(0),
        s.abort
      ));
    });
  }));
}
let UC = 0;
function HC(e, t, n) {
  const r = UC++, o = Qg.bind(null, n, r);
  if (!t.pending.length)
    return o;
  const s = {
    id: r,
    icons: t,
    callback: e,
    abort: o
  };
  return n.forEach((a) => {
    (a.loaderCallbacks || (a.loaderCallbacks = [])).push(s);
  }), o;
}
function qC(e, t = !0, n = !1) {
  const r = [];
  return e.forEach((o) => {
    const s = typeof o == "string" ? dl(o, t, n) : o;
    s && r.push(s);
  }), r;
}
var GC = {
  resources: [],
  index: 0,
  timeout: 2e3,
  rotate: 750,
  random: !1,
  dataAfterTimeout: !1
};
function YC(e, t, n, r) {
  const o = e.resources.length, s = e.random ? Math.floor(Math.random() * o) : e.index;
  let a;
  if (e.random) {
    let T = e.resources.slice(0);
    for (a = []; T.length > 1; ) {
      const R = Math.floor(Math.random() * T.length);
      a.push(T[R]), T = T.slice(0, R).concat(T.slice(R + 1));
    }
    a = a.concat(T);
  } else
    a = e.resources.slice(s).concat(e.resources.slice(0, s));
  const l = Date.now();
  let c = "pending", u = 0, f, d = null, h = [], g = [];
  typeof r == "function" && g.push(r);
  function y() {
    d && (clearTimeout(d), d = null);
  }
  function m() {
    c === "pending" && (c = "aborted"), y(), h.forEach((T) => {
      T.status === "pending" && (T.status = "aborted");
    }), h = [];
  }
  function b(T, R) {
    R && (g = []), typeof T == "function" && g.push(T);
  }
  function v() {
    return {
      startTime: l,
      payload: t,
      status: c,
      queriesSent: u,
      queriesPending: h.length,
      subscribe: b,
      abort: m
    };
  }
  function E() {
    c = "failed", g.forEach((T) => {
      T(void 0, f);
    });
  }
  function S() {
    h.forEach((T) => {
      T.status === "pending" && (T.status = "aborted");
    }), h = [];
  }
  function w(T, R, I) {
    const N = R !== "success";
    switch (h = h.filter((p) => p !== T), c) {
      case "pending":
        break;
      case "failed":
        if (N || !e.dataAfterTimeout)
          return;
        break;
      default:
        return;
    }
    if (R === "abort") {
      f = I, E();
      return;
    }
    if (N) {
      f = I, h.length || (a.length ? x() : E());
      return;
    }
    if (y(), S(), !e.random) {
      const p = e.resources.indexOf(T.resource);
      p !== -1 && p !== e.index && (e.index = p);
    }
    c = "completed", g.forEach((p) => {
      p(I);
    });
  }
  function x() {
    if (c !== "pending")
      return;
    y();
    const T = a.shift();
    if (T === void 0) {
      if (h.length) {
        d = setTimeout(() => {
          y(), c === "pending" && (S(), E());
        }, e.timeout);
        return;
      }
      E();
      return;
    }
    const R = {
      status: "pending",
      resource: T,
      callback: (I, N) => {
        w(R, I, N);
      }
    };
    h.push(R), u++, d = setTimeout(x, e.rotate), n(T, t, R.callback);
  }
  return setTimeout(x), v;
}
function Jg(e) {
  const t = {
    ...GC,
    ...e
  };
  let n = [];
  function r() {
    n = n.filter((l) => l().status === "pending");
  }
  function o(l, c, u) {
    const f = YC(
      t,
      l,
      c,
      (d, h) => {
        r(), u && u(d, h);
      }
    );
    return n.push(f), f;
  }
  function s(l) {
    return n.find((c) => l(c)) || null;
  }
  return {
    query: o,
    find: s,
    setIndex: (l) => {
      t.index = l;
    },
    getIndex: () => t.index,
    cleanup: r
  };
}
function xp() {
}
const sc = /* @__PURE__ */ Object.create(null);
function KC(e) {
  if (!sc[e]) {
    const t = fd(e);
    if (!t)
      return;
    const n = Jg(t), r = {
      config: t,
      redundancy: n
    };
    sc[e] = r;
  }
  return sc[e];
}
function XC(e, t, n) {
  let r, o;
  if (typeof e == "string") {
    const s = Qc(e);
    if (!s)
      return n(void 0, 424), xp;
    o = s.send;
    const a = KC(e);
    a && (r = a.redundancy);
  } else {
    const s = ud(e);
    if (s) {
      r = Jg(s);
      const a = e.resources ? e.resources[0] : "", l = Qc(a);
      l && (o = l.send);
    }
  }
  return !r || !o ? (n(void 0, 424), xp) : r.query(t, o, n)().abort;
}
function wp() {
}
function QC(e) {
  e.iconsLoaderFlag || (e.iconsLoaderFlag = !0, setTimeout(() => {
    e.iconsLoaderFlag = !1, WC(e);
  }));
}
function JC(e) {
  const t = [], n = [];
  return e.forEach((r) => {
    (r.match(qg) ? t : n).push(r);
  }), {
    valid: t,
    invalid: n
  };
}
function ui(e, t, n) {
  function r() {
    const o = e.pendingIcons;
    t.forEach((s) => {
      o && o.delete(s), e.icons[s] || e.missing.add(s);
    });
  }
  if (n && typeof n == "object")
    try {
      if (!Gg(e, n).length) {
        r();
        return;
      }
    } catch (o) {
      console.error(o);
    }
  r(), QC(e);
}
function Sp(e, t) {
  e instanceof Promise ? e.then((n) => {
    t(n);
  }).catch(() => {
    t(null);
  }) : t(e);
}
function ZC(e, t) {
  e.iconsToLoad ? e.iconsToLoad = e.iconsToLoad.concat(t).sort() : e.iconsToLoad = t, e.iconsQueueFlag || (e.iconsQueueFlag = !0, setTimeout(() => {
    e.iconsQueueFlag = !1;
    const { provider: n, prefix: r } = e, o = e.iconsToLoad;
    if (delete e.iconsToLoad, !o || !o.length)
      return;
    const s = e.loadIcon;
    if (e.loadIcons && (o.length > 1 || !s)) {
      Sp(
        e.loadIcons(o, r, n),
        (f) => {
          ui(e, o, f);
        }
      );
      return;
    }
    if (s) {
      o.forEach((f) => {
        const d = s(f, r, n);
        Sp(d, (h) => {
          const g = h ? {
            prefix: r,
            icons: {
              [f]: h
            }
          } : null;
          ui(e, [f], g);
        });
      });
      return;
    }
    const { valid: a, invalid: l } = JC(o);
    if (l.length && ui(e, l, null), !a.length)
      return;
    const c = r.match(qg) ? Qc(n) : null;
    if (!c) {
      ui(e, a, null);
      return;
    }
    c.prepare(n, r, a).forEach((f) => {
      XC(n, f, (d) => {
        ui(e, f.icons, d);
      });
    });
  }));
}
const eO = (e, t) => {
  const n = qC(e, !0, Yg()), r = zC(n);
  if (!r.pending.length) {
    let c = !0;
    return t && setTimeout(() => {
      c && t(
        r.loaded,
        r.missing,
        r.pending,
        wp
      );
    }), () => {
      c = !1;
    };
  }
  const o = /* @__PURE__ */ Object.create(null), s = [];
  let a, l;
  return r.pending.forEach((c) => {
    const { provider: u, prefix: f } = c;
    if (f === l && u === a)
      return;
    a = u, l = f, s.push(Ho(u, f));
    const d = o[u] || (o[u] = /* @__PURE__ */ Object.create(null));
    d[f] || (d[f] = []);
  }), r.pending.forEach((c) => {
    const { provider: u, prefix: f, name: d } = c, h = Ho(u, f), g = h.pendingIcons || (h.pendingIcons = /* @__PURE__ */ new Set());
    g.has(d) || (g.add(d), o[u][f].push(d));
  }), s.forEach((c) => {
    const u = o[c.provider][c.prefix];
    u.length && ZC(c, u);
  }), t ? HC(t, r, s) : wp;
};
function tO(e, t) {
  const n = {
    ...e
  };
  for (const r in t) {
    const o = t[r], s = typeof o;
    r in Kg ? (o === null || o && (s === "string" || s === "number")) && (n[r] = o) : s === typeof n[r] && (n[r] = r === "rotate" ? o % 4 : o);
  }
  return n;
}
const nO = /[\s,]+/;
function rO(e, t) {
  t.split(nO).forEach((n) => {
    switch (n.trim()) {
      case "horizontal":
        e.hFlip = !0;
        break;
      case "vertical":
        e.vFlip = !0;
        break;
    }
  });
}
function oO(e, t = 0) {
  const n = e.replace(/^-?[0-9.]*/, "");
  function r(o) {
    for (; o < 0; )
      o += 4;
    return o % 4;
  }
  if (n === "") {
    const o = parseInt(e);
    return isNaN(o) ? 0 : r(o);
  } else if (n !== e) {
    let o = 0;
    switch (n) {
      case "%":
        o = 25;
        break;
      case "deg":
        o = 90;
    }
    if (o) {
      let s = parseFloat(e.slice(0, e.length - n.length));
      return isNaN(s) ? 0 : (s = s / o, s % 1 === 0 ? r(s) : 0);
    }
  }
  return t;
}
function iO(e, t) {
  let n = e.indexOf("xlink:") === -1 ? "" : ' xmlns:xlink="http://www.w3.org/1999/xlink"';
  for (const r in t)
    n += " " + r + '="' + t[r] + '"';
  return '<svg xmlns="http://www.w3.org/2000/svg"' + n + ">" + e + "</svg>";
}
function sO(e) {
  return e.replace(/"/g, "'").replace(/%/g, "%25").replace(/#/g, "%23").replace(/</g, "%3C").replace(/>/g, "%3E").replace(/\s+/g, " ");
}
function aO(e) {
  return "data:image/svg+xml," + sO(e);
}
function lO(e) {
  return 'url("' + aO(e) + '")';
}
let ki;
function cO() {
  try {
    ki = window.trustedTypes.createPolicy("iconify", {
      // eslint-disable-next-line @typescript-eslint/no-unsafe-return
      createHTML: (e) => e
    });
  } catch {
    ki = null;
  }
}
function uO(e) {
  return ki === void 0 && cO(), ki ? ki.createHTML(e) : e;
}
const Zg = {
  ...Xg,
  inline: !1
}, dO = {
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  "aria-hidden": !0,
  role: "img"
}, fO = {
  display: "inline-block"
}, Jc = {
  backgroundColor: "currentColor"
}, ey = {
  backgroundColor: "transparent"
}, Tp = {
  Image: "var(--svg)",
  Repeat: "no-repeat",
  Size: "100% 100%"
}, Ep = {
  WebkitMask: Jc,
  mask: Jc,
  background: ey
};
for (const e in Ep) {
  const t = Ep[e];
  for (const n in Tp)
    t[e + n] = Tp[n];
}
const pO = {
  ...Zg,
  inline: !0
};
function Cp(e) {
  return e + (e.match(/^[-0-9.]+$/) ? "px" : "");
}
const mO = (e, t, n) => {
  const r = t.inline ? pO : Zg, o = tO(r, t), s = t.mode || "svg", a = {}, l = t.style || {}, c = {
    ...s === "svg" ? dO : {}
  };
  if (n) {
    const b = dl(n, !1, !0);
    if (b) {
      const v = ["iconify"], E = [
        "provider",
        "prefix"
      ];
      for (const S of E)
        b[S] && v.push("iconify--" + b[S]);
      c.className = v.join(" ");
    }
  }
  for (let b in t) {
    const v = t[b];
    if (v !== void 0)
      switch (b) {
        // Properties to ignore
        case "icon":
        case "style":
        case "children":
        case "onLoad":
        case "mode":
        case "ssr":
          break;
        // Forward ref
        case "_ref":
          c.ref = v;
          break;
        // Merge class names
        case "className":
          c[b] = (c[b] ? c[b] + " " : "") + v;
          break;
        // Boolean attributes
        case "inline":
        case "hFlip":
        case "vFlip":
          o[b] = v === !0 || v === "true" || v === 1;
          break;
        // Flip as string: 'horizontal,vertical'
        case "flip":
          typeof v == "string" && rO(o, v);
          break;
        // Color: copy to style
        case "color":
          a.color = v;
          break;
        // Rotation as string
        case "rotate":
          typeof v == "string" ? o[b] = oO(v) : typeof v == "number" && (o[b] = v);
          break;
        // Remove aria-hidden
        case "ariaHidden":
        case "aria-hidden":
          v !== !0 && v !== "true" && delete c["aria-hidden"];
          break;
        // Copy missing property if it does not exist in customisations
        default:
          r[b] === void 0 && (c[b] = v);
      }
  }
  const u = $C(e, o), f = u.attributes;
  if (o.inline && (a.verticalAlign = "-0.125em"), s === "svg") {
    c.style = {
      ...a,
      ...l
    }, Object.assign(c, f);
    let b = 0, v = t.id;
    return typeof v == "string" && (v = v.replace(/-/g, "_")), c.dangerouslySetInnerHTML = {
      __html: uO(NC(u.body, v ? () => v + "ID" + b++ : "iconifyReact"))
    }, ro("svg", c);
  }
  const { body: d, width: h, height: g } = e, y = s === "mask" || (s === "bg" ? !1 : d.indexOf("currentColor") !== -1), m = iO(d, {
    ...f,
    width: h + "",
    height: g + ""
  });
  return c.style = {
    ...a,
    "--svg": lO(m),
    width: Cp(f.width),
    height: Cp(f.height),
    ...fO,
    ...y ? Jc : ey,
    ...l
  }, ro("span", c);
};
Yg(!0);
AC("", VC);
if (typeof document < "u" && typeof window < "u") {
  const e = window;
  if (e.IconifyPreload !== void 0) {
    const t = e.IconifyPreload, n = "Invalid IconifyPreload syntax.";
    typeof t == "object" && t !== null && (t instanceof Array ? t : [t]).forEach((r) => {
      try {
        // Check if item is an object and not null/array
        (typeof r != "object" || r === null || r instanceof Array || // Check for 'icons' and 'prefix'
        typeof r.icons != "object" || typeof r.prefix != "string" || // Add icon set
        !wC(r)) && console.error(n);
      } catch {
        console.error(n);
      }
    });
  }
  if (e.IconifyProviders !== void 0) {
    const t = e.IconifyProviders;
    if (typeof t == "object" && t !== null)
      for (let n in t) {
        const r = "IconifyProviders[" + n + "] is invalid.";
        try {
          const o = t[n];
          if (typeof o != "object" || !o || o.resources === void 0)
            continue;
          MC(n, o) || console.error(r);
        } catch {
          console.error(r);
        }
      }
  }
}
function ty(e) {
  const [t, n] = _r(!!e.ssr), [r, o] = _r({});
  function s(g) {
    if (g) {
      const y = e.icon;
      if (typeof y == "object")
        return {
          name: "",
          data: y
        };
      const m = yp(y);
      if (m)
        return {
          name: y,
          data: m
        };
    }
    return {
      name: ""
    };
  }
  const [a, l] = _r(s(!!e.ssr));
  function c() {
    const g = r.callback;
    g && (g(), o({}));
  }
  function u(g) {
    if (JSON.stringify(a) !== JSON.stringify(g))
      return c(), l(g), !0;
  }
  function f() {
    var g;
    const y = e.icon;
    if (typeof y == "object") {
      u({
        name: "",
        data: y
      });
      return;
    }
    const m = yp(y);
    if (u({
      name: y,
      data: m
    }))
      if (m === void 0) {
        const b = eO([y], f);
        o({
          callback: b
        });
      } else m && ((g = e.onLoad) === null || g === void 0 || g.call(e, y));
  }
  _i(() => (n(!0), c), []), _i(() => {
    t && f();
  }, [e.icon, t]);
  const { name: d, data: h } = a;
  return h ? mO({
    ...cd,
    ...h
  }, e, d) : e.children ? e.children : e.fallback ? e.fallback : ro("span", {});
}
const hO = vu((e, t) => ty({
  ...e,
  _ref: t
}));
vu((e, t) => ty({
  inline: !0,
  ...e,
  _ref: t
}));
const Tr = _e(({ ref: e, icon: t, width: n = 20, color: r = "auto", sx: o, ...s }) => /* @__PURE__ */ k(
  Sr,
  {
    id: "VenomousUI-Icon",
    ssr: !0,
    ref: e,
    component: hO,
    icon: t,
    sx: {
      width: n,
      height: n,
      flexShrink: 0,
      display: "inline-flex",
      color: (a) => r === "error" ? a.palette.error.main : r === "primary" ? a.palette.primary.main : r === "success" ? a.palette.success.main : r === "disabled" ? a.palette.action.disabled : "inherit",
      ...o
    },
    ...s
  }
));
Tr.displayName = "Icon";
function fl({
  isTitle: e = !1,
  isLabel: t = !1,
  titleLevel: n = "h6",
  textColor: r = "auto"
}) {
  return {
    textCommonStyles: or(
      () => ({
        typography: e ? n : t ? "caption" : "body1",
        fontWeight: e || t ? "bold" : "normal",
        color: (s) => r === "error" ? s.palette.error.main : r === "primary" ? s.palette.primary.main : r === "success" ? s.palette.success.main : r === "disabled" ? s.palette.action.disabled : "inherit"
      }),
      [e, t, r]
    )
  };
}
const cn = _e(
  ({
    text: e,
    isLabel: t,
    isTitle: n = !1,
    titleLevel: r = "h6",
    ellipsis: o = !1,
    textColor: s = "auto",
    sx: a,
    ...l
  }) => {
    const { textCommonStyles: c } = fl({ isTitle: n, isLabel: t, titleLevel: r, textColor: s }), u = or(
      () => /* @__PURE__ */ k(
        sg,
        {
          id: "VenomousUI-Text",
          component: "div",
          variant: n ? r : t ? "caption" : "body1",
          noWrap: o,
          sx: {
            ...c,
            ...a
          },
          ...l,
          children: e
        }
      ),
      [e, n, r, o, a, l, c]
    );
    return o ? /* @__PURE__ */ k(ul, { arrow: !0, title: e, children: u }) : u;
  }
);
cn.displayName = "Text";
const gO = _e(({ width: e = 100, text: t = "", sx: n }) => /* @__PURE__ */ Ce(Sr, { id: "VenomousUI-Blank", sx: { width: e, ...n }, children: [
  /* @__PURE__ */ k(Tr, { width: e, icon: "solar:box-linear", color: "disabled" }),
  /* @__PURE__ */ k(cn, { text: t, isTitle: !0, titleLevel: "h6", textColor: "disabled", textAlign: "center" })
] }));
gO.displayName = "Blank";
const lr = _e(
  ({
    text: e,
    loading: t,
    disabled: n,
    isOutlined: r,
    isGhost: o,
    isCircle: s,
    icon: a,
    iconWidth: l = 20,
    iconPosition: c = void 0,
    color: u = "primary",
    onClick: f,
    sx: d,
    ...h
  }) => {
    const { buttonColors: g } = yO({ color: u, isGhost: o, isOutlined: r }), y = or(() => a ? /* @__PURE__ */ k(Tr, { icon: a, width: l }) : null, [a, l]);
    return /* @__PURE__ */ Ce(
      sd,
      {
        variant: o ? "text" : r ? "outlined" : "contained",
        loading: t,
        disabled: n,
        startIcon: c === "start" && y,
        endIcon: c === "end" && y,
        sx: {
          minWidth: "40px",
          minHeight: "40px",
          width: s ? "40px" : "unset",
          height: s ? "40px" : "unset",
          textTransform: "none",
          fontWeight: "bold",
          borderRadius: s ? "50%" : "8px",
          p: s ? "6px" : "auto",
          px: s ? "0" : "16px !important",
          cursor: t ? "wait !important" : n ? "not-allowed !important" : "pointer",
          pointerEvents: "auto !important",
          transition: "background-color 0s, background-image 0s",
          "& .MuiButton-startIcon": { svg: { color: "inherit", mr: "8px" } },
          "& .MuiButton-endIcon": { svg: { color: "inherit", ml: "8px" } },
          ...g,
          ...d
        },
        onClick: (m) => {
          m.stopPropagation(), f == null || f(m);
        },
        ...h,
        children: [
          !c && y,
          !s && e
        ]
      }
    );
  }
);
lr.displayName = "Button";
function yO({ color: e = "primary", isGhost: t, isOutlined: n }) {
  const r = Rr();
  return { buttonColors: or(() => {
    const s = r.palette.mode === "dark", a = {
      auto: r.palette.text.primary,
      disabled: r.palette.action.disabled,
      primary: r.palette.primary.main,
      success: r.palette.success.main,
      error: r.palette.error.main
    }, l = e in a ? a[e] : "inherit", c = s && ["auto", "disabled"].includes(e) ? "black" : r.palette.primary.contrastText;
    return {
      backgroundColor: t || n ? "transparent" : l,
      color: t || n ? l : c,
      borderColor: n ? l : "transparent"
    };
  }, [r, e, t, n]) };
}
function fs() {
  return {
    paperCommonStyles: or(
      () => ({
        p: "8px",
        borderRadius: "8px !important",
        backgroundColor: ({ palette: t }) => t.background.paper,
        backgroundImage: "linear-gradient(rgba(255, 255, 255, 0.119), rgba(255, 255, 255, 0.119));"
      }),
      []
    )
  };
}
const Gi = _e(({ isOutlined: e, children: t, sx: n, ...r }) => {
  const { paperCommonStyles: o } = fs();
  return /* @__PURE__ */ k(
    Jo,
    {
      id: "VenomousUI-Paper",
      variant: e ? "outlined" : "elevation",
      elevation: e ? 0 : 3,
      square: !0,
      sx: {
        ...o,
        ...n
      },
      ...r,
      children: t
    }
  );
});
Gi.displayName = "Paper";
const pl = _e(
  ({ isOutlined: e, clickable: t, onClick: n, disabled: r, children: o, sx: s }) => t ? /* @__PURE__ */ k(
    sd,
    {
      id: "VenomousUI-Card",
      component: Gi,
      isOutlined: e,
      disabled: r,
      onClick: r ? void 0 : n,
      sx: {
        display: "block",
        color: "inherit",
        textTransform: "none",
        borderRadius: "8px",
        cursor: r ? "not-allowed !important" : "pointer",
        pointerEvents: "auto !important",
        p: "16px",
        ...e ? {
          border: 1,
          borderColor: "divider"
        } : {},
        ...s
      },
      children: o
    }
  ) : /* @__PURE__ */ k(Gi, { id: "VenomousUI-Card", isOutlined: e, sx: { p: "16px", ...s }, children: o })
);
pl.displayName = "Card";
const Xt = _e(
  ({ children: e, row: t, alignItems: n, justifyContent: r, gap: o = 1, sx: s, ...a }) => /* @__PURE__ */ k(
    Sr,
    {
      id: "VenomousUI-Flex",
      component: "div",
      sx: {
        display: "flex",
        flexDirection: t ? "row" : "column",
        alignItems: n || (t ? "center" : "start"),
        justifyContent: r || "start",
        ...Array.isArray(o) ? { rowGap: o[0], columnGap: o[1] } : { gap: o },
        ...s
      },
      ...a,
      children: e
    }
  )
);
Xt.displayName = "Flex";
const bO = _e(
  ({ title: e, subtitle: t, headerStartExtra: n, headerEndExtra: r, children: o, ...s }) => /* @__PURE__ */ Ce(pl, { ...s, children: [
    /* @__PURE__ */ Ce(Xt, { row: !0, mb: "8px", justifyContent: "space-between", alignItems: "center", children: [
      n && /* @__PURE__ */ k("div", { style: { marginRight: t ? "8px" : 0 }, children: n }),
      /* @__PURE__ */ Ce(Xt, { gap: 0, children: [
        e && /* @__PURE__ */ k(cn, { text: e, isTitle: !0, titleLevel: "h6", lineHeight: "1.25rem", ellipsis: !0 }),
        t && /* @__PURE__ */ k(cn, { text: t, isLabel: !0, ellipsis: !0 })
      ] }),
      r && /* @__PURE__ */ k(
        "div",
        {
          style: {
            marginRight: t ? "-8px" : 0,
            marginTop: t ? "-8px" : 0,
            marginLeft: "8px"
          },
          children: r
        }
      )
    ] }),
    o
  ] })
);
bO.displayName = "ExhibitCard";
const ml = 0, Ur = 1, Zo = 2, ny = 4;
function Op(e) {
  return () => e;
}
function vO(e) {
  e();
}
function ry(e, t) {
  return (n) => e(t(n));
}
function Rp(e, t) {
  return () => e(t);
}
function oy(e, t) {
  return (n) => e(t, n);
}
function pd(e) {
  return e !== void 0;
}
function xO(...e) {
  return () => {
    e.map(vO);
  };
}
function ei() {
}
function hl(e, t) {
  return t(e), e;
}
function wO(e, t) {
  return t(e);
}
function dt(...e) {
  return e;
}
function Ze(e, t) {
  return e(Ur, t);
}
function De(e, t) {
  e(ml, t);
}
function md(e) {
  e(Zo);
}
function Gt(e) {
  return e(ny);
}
function Ee(e, t) {
  return Ze(e, oy(t, ml));
}
function cr(e, t) {
  const n = e(Ur, (r) => {
    n(), t(r);
  });
  return n;
}
function $p(e) {
  let t, n;
  return (r) => (o) => {
    t = o, n && clearTimeout(n), n = setTimeout(() => {
      r(t);
    }, e);
  };
}
function iy(e, t) {
  return e === t;
}
function ut(e = iy) {
  let t;
  return (n) => (r) => {
    e(t, r) || (t = r, n(r));
  };
}
function ke(e) {
  return (t) => (n) => {
    e(n) && t(n);
  };
}
function he(e) {
  return (t) => ry(t, e);
}
function Xn(e) {
  return (t) => () => {
    t(e);
  };
}
function ce(e, ...t) {
  const n = SO(...t);
  return (r, o) => {
    switch (r) {
      case Zo:
        md(e);
        return;
      case Ur:
        return Ze(e, n(o));
    }
  };
}
function Jn(e, t) {
  return (n) => (r) => {
    n(t = e(t, r));
  };
}
function qo(e) {
  return (t) => (n) => {
    e > 0 ? e-- : t(n);
  };
}
function Mr(e) {
  let t = null, n;
  return (r) => (o) => {
    t = o, !n && (n = setTimeout(() => {
      n = void 0, r(t);
    }, e));
  };
}
function je(...e) {
  const t = new Array(e.length);
  let n = 0, r = null;
  const o = Math.pow(2, e.length) - 1;
  return e.forEach((s, a) => {
    const l = Math.pow(2, a);
    Ze(s, (c) => {
      const u = n;
      n = n | l, t[a] = c, u !== o && n === o && r && (r(), r = null);
    });
  }), (s) => (a) => {
    const l = () => {
      s([a].concat(t));
    };
    n === o ? l() : r = l;
  };
}
function SO(...e) {
  return (t) => e.reduceRight(wO, t);
}
function TO(e) {
  let t, n;
  const r = () => t == null ? void 0 : t();
  return function(o, s) {
    switch (o) {
      case Ur:
        return s ? n === s ? void 0 : (r(), n = s, t = Ze(e, s), t) : (r(), ei);
      case Zo:
        r(), n = null;
        return;
    }
  };
}
function de(e) {
  let t = e;
  const n = ze();
  return (r, o) => {
    switch (r) {
      case ml:
        t = o;
        break;
      case Ur: {
        o(t);
        break;
      }
      case ny:
        return t;
    }
    return n(r, o);
  };
}
function Yt(e, t) {
  return hl(de(t), (n) => Ee(e, n));
}
function ze() {
  const e = [];
  return (t, n) => {
    switch (t) {
      case ml:
        e.slice().forEach((r) => {
          r(n);
        });
        return;
      case Zo:
        e.splice(0, e.length);
        return;
      case Ur:
        return e.push(n), () => {
          const r = e.indexOf(n);
          r > -1 && e.splice(r, 1);
        };
    }
  };
}
function gn(e) {
  return hl(ze(), (t) => Ee(e, t));
}
function Ge(e, t = [], { singleton: n } = { singleton: !0 }) {
  return {
    constructor: e,
    dependencies: t,
    id: EO(),
    singleton: n
  };
}
const EO = () => Symbol();
function CO(e) {
  const t = /* @__PURE__ */ new Map(), n = ({ constructor: r, dependencies: o, id: s, singleton: a }) => {
    if (a && t.has(s))
      return t.get(s);
    const l = r(o.map((c) => n(c)));
    return a && t.set(s, l), l;
  };
  return n(e);
}
function Mt(...e) {
  const t = ze(), n = new Array(e.length);
  let r = 0;
  const o = Math.pow(2, e.length) - 1;
  return e.forEach((s, a) => {
    const l = Math.pow(2, a);
    Ze(s, (c) => {
      n[a] = c, r = r | l, r === o && De(t, n);
    });
  }), function(s, a) {
    switch (s) {
      case Zo: {
        md(t);
        return;
      }
      case Ur:
        return r === o && a(n), Ze(t, a);
    }
  };
}
function Ie(e, t = iy) {
  return ce(e, ut(t));
}
function kp(...e) {
  return function(t, n) {
    switch (t) {
      case Zo:
        return;
      case Ur:
        return xO(...e.map((r) => Ze(r, n)));
    }
  };
}
var yn = /* @__PURE__ */ ((e) => (e[e.DEBUG = 0] = "DEBUG", e[e.INFO = 1] = "INFO", e[e.WARN = 2] = "WARN", e[e.ERROR = 3] = "ERROR", e))(yn || {});
const OO = {
  0: "debug",
  3: "error",
  1: "log",
  2: "warn"
}, RO = () => typeof globalThis > "u" ? window : globalThis, Hr = Ge(
  () => {
    const e = de(
      3
      /* ERROR */
    );
    return {
      log: de((t, n, r = 1) => {
        var o;
        const s = (o = RO().VIRTUOSO_LOG_LEVEL) != null ? o : Gt(e);
        r >= s && console[OO[r]](
          "%creact-virtuoso: %c%s %o",
          "color: #0253b3; font-weight: bold",
          "color: initial",
          t,
          n
        );
      }),
      logLevel: e
    };
  },
  [],
  { singleton: !0 }
);
function fo(e, t, n) {
  return hd(e, t, n).callbackRef;
}
function hd(e, t, n) {
  const r = F.useRef(null);
  let o = (s) => {
  };
  if (typeof ResizeObserver < "u") {
    const s = F.useMemo(() => new ResizeObserver((a) => {
      const l = () => {
        const c = a[0].target;
        c.offsetParent !== null && e(c);
      };
      n ? l() : requestAnimationFrame(l);
    }), [e]);
    o = (a) => {
      a && t ? (s.observe(a), r.current = a) : (r.current && s.unobserve(r.current), r.current = null);
    };
  }
  return { callbackRef: o, ref: r };
}
function $O(e, t, n, r, o, s, a, l, c) {
  const u = F.useCallback(
    (f) => {
      const d = kO(f.children, t, l ? "offsetWidth" : "offsetHeight", o);
      let h = f.parentElement;
      for (; !h.dataset.virtuosoScroller; )
        h = h.parentElement;
      const g = h.lastElementChild.dataset.viewportType === "window";
      let y;
      g && (y = h.ownerDocument.defaultView);
      const m = a ? l ? a.scrollLeft : a.scrollTop : g ? l ? y.scrollX || y.document.documentElement.scrollLeft : y.scrollY || y.document.documentElement.scrollTop : l ? h.scrollLeft : h.scrollTop, b = a ? l ? a.scrollWidth : a.scrollHeight : g ? l ? y.document.documentElement.scrollWidth : y.document.documentElement.scrollHeight : l ? h.scrollWidth : h.scrollHeight, v = a ? l ? a.offsetWidth : a.offsetHeight : g ? l ? y.innerWidth : y.innerHeight : l ? h.offsetWidth : h.offsetHeight;
      r({
        scrollHeight: b,
        scrollTop: Math.max(m, 0),
        viewportHeight: v
      }), s == null || s(
        l ? Ip("column-gap", getComputedStyle(f).columnGap, o) : Ip("row-gap", getComputedStyle(f).rowGap, o)
      ), d !== null && e(d);
    },
    [e, t, o, s, a, r]
  );
  return hd(u, n, c);
}
function kO(e, t, n, r) {
  const o = e.length;
  if (o === 0)
    return null;
  const s = [];
  for (let a = 0; a < o; a++) {
    const l = e.item(a);
    if (l.dataset.index === void 0)
      continue;
    const c = parseInt(l.dataset.index), u = parseFloat(l.dataset.knownSize), f = t(l, n);
    if (f === 0 && r("Zero-sized element, this should not happen", { child: l }, yn.ERROR), f === u)
      continue;
    const d = s[s.length - 1];
    s.length === 0 || d.size !== f || d.endIndex !== c - 1 ? s.push({ endIndex: c, size: f, startIndex: c }) : s[s.length - 1].endIndex++;
  }
  return s;
}
function Ip(e, t, n) {
  return t !== "normal" && !(t != null && t.endsWith("px")) && n(`${e} was not resolved to pixel value correctly`, t, yn.WARN), t === "normal" ? 0 : parseInt(t ?? "0", 10);
}
function sy(e, t, n) {
  const r = F.useRef(null), o = F.useCallback(
    (c) => {
      if (!(c != null && c.offsetParent))
        return;
      const u = c.getBoundingClientRect(), f = u.width;
      let d, h;
      if (t) {
        const g = t.getBoundingClientRect(), y = u.top - g.top;
        h = g.height - Math.max(0, y), d = y + t.scrollTop;
      } else {
        const g = a.current.ownerDocument.defaultView;
        h = g.innerHeight - Math.max(0, u.top), d = u.top + g.scrollY;
      }
      r.current = {
        offsetTop: d,
        visibleHeight: h,
        visibleWidth: f
      }, e(r.current);
    },
    [e, t]
  ), { callbackRef: s, ref: a } = hd(o, !0, n), l = F.useCallback(() => {
    o(a.current);
  }, [o, a]);
  return F.useEffect(() => {
    var c;
    if (t) {
      t.addEventListener("scroll", l);
      const u = new ResizeObserver(() => {
        requestAnimationFrame(l);
      });
      return u.observe(t), () => {
        t.removeEventListener("scroll", l), u.unobserve(t);
      };
    } else {
      const u = (c = a.current) == null ? void 0 : c.ownerDocument.defaultView;
      return u == null || u.addEventListener("scroll", l), u == null || u.addEventListener("resize", l), () => {
        u == null || u.removeEventListener("scroll", l), u == null || u.removeEventListener("resize", l);
      };
    }
  }, [l, t]), s;
}
const tn = Ge(
  () => {
    const e = ze(), t = ze(), n = de(0), r = ze(), o = de(0), s = ze(), a = ze(), l = de(0), c = de(0), u = de(0), f = de(0), d = ze(), h = ze(), g = de(!1), y = de(!1), m = de(!1);
    return Ee(
      ce(
        e,
        he(({ scrollTop: b }) => b)
      ),
      t
    ), Ee(
      ce(
        e,
        he(({ scrollHeight: b }) => b)
      ),
      a
    ), Ee(t, o), {
      deviation: n,
      fixedFooterHeight: u,
      fixedHeaderHeight: c,
      footerHeight: f,
      headerHeight: l,
      horizontalDirection: y,
      scrollBy: h,
      // input
      scrollContainerState: e,
      scrollHeight: a,
      scrollingInProgress: g,
      // signals
      scrollTo: d,
      scrollTop: t,
      skipAnimationFrameInResizeObserver: m,
      smoothScrollTargetReached: r,
      // state
      statefulScrollTop: o,
      viewportHeight: s
    };
  },
  [],
  { singleton: !0 }
), Yi = { lvl: 0 };
function ay(e, t) {
  const n = e.length;
  if (n === 0)
    return [];
  let { index: r, value: o } = t(e[0]);
  const s = [];
  for (let a = 1; a < n; a++) {
    const { index: l, value: c } = t(e[a]);
    s.push({ end: l - 1, start: r, value: o }), r = l, o = c;
  }
  return s.push({ end: 1 / 0, start: r, value: o }), s;
}
function at(e) {
  return e === Yi;
}
function Ki(e, t) {
  if (!at(e))
    return t === e.k ? e.v : t < e.k ? Ki(e.l, t) : Ki(e.r, t);
}
function Ln(e, t, n = "k") {
  if (at(e))
    return [-1 / 0, void 0];
  if (Number(e[n]) === t)
    return [e.k, e.v];
  if (Number(e[n]) < t) {
    const r = Ln(e.r, t, n);
    return r[0] === -1 / 0 ? [e.k, e.v] : r;
  }
  return Ln(e.l, t, n);
}
function fn(e, t, n) {
  return at(e) ? uy(t, n, 1) : t === e.k ? At(e, { k: t, v: n }) : t < e.k ? Pp(At(e, { l: fn(e.l, t, n) })) : Pp(At(e, { r: fn(e.r, t, n) }));
}
function Mo() {
  return Yi;
}
function gl(e, t, n) {
  if (at(e))
    return [];
  const r = Ln(e, t)[0];
  return IO(eu(e, r, n));
}
function Zc(e, t) {
  if (at(e)) return Yi;
  const { k: n, l: r, r: o } = e;
  if (t === n) {
    if (at(r))
      return o;
    if (at(o))
      return r;
    {
      const [s, a] = cy(r);
      return ia(At(e, { k: s, l: ly(r), v: a }));
    }
  } else return t < n ? ia(At(e, { l: Zc(r, t) })) : ia(At(e, { r: Zc(o, t) }));
}
function to(e) {
  return at(e) ? [] : [...to(e.l), { k: e.k, v: e.v }, ...to(e.r)];
}
function eu(e, t, n) {
  if (at(e))
    return [];
  const { k: r, l: o, r: s, v: a } = e;
  let l = [];
  return r > t && (l = l.concat(eu(o, t, n))), r >= t && r <= n && l.push({ k: r, v: a }), r <= n && (l = l.concat(eu(s, t, n))), l;
}
function ia(e) {
  const { l: t, lvl: n, r } = e;
  if (r.lvl >= n - 1 && t.lvl >= n - 1)
    return e;
  if (n > r.lvl + 1) {
    if (ac(t))
      return dy(At(e, { lvl: n - 1 }));
    if (!at(t) && !at(t.r))
      return At(t.r, {
        l: At(t, { r: t.r.l }),
        lvl: n,
        r: At(e, {
          l: t.r.r,
          lvl: n - 1
        })
      });
    throw new Error("Unexpected empty nodes");
  } else {
    if (ac(e))
      return tu(At(e, { lvl: n - 1 }));
    if (!at(r) && !at(r.l)) {
      const o = r.l, s = ac(o) ? r.lvl - 1 : r.lvl;
      return At(o, {
        l: At(e, {
          lvl: n - 1,
          r: o.l
        }),
        lvl: o.lvl + 1,
        r: tu(At(r, { l: o.r, lvl: s }))
      });
    } else
      throw new Error("Unexpected empty nodes");
  }
}
function At(e, t) {
  return uy(
    t.k !== void 0 ? t.k : e.k,
    t.v !== void 0 ? t.v : e.v,
    t.lvl !== void 0 ? t.lvl : e.lvl,
    t.l !== void 0 ? t.l : e.l,
    t.r !== void 0 ? t.r : e.r
  );
}
function ly(e) {
  return at(e.r) ? e.l : ia(At(e, { r: ly(e.r) }));
}
function ac(e) {
  return at(e) || e.lvl > e.r.lvl;
}
function cy(e) {
  return at(e.r) ? [e.k, e.v] : cy(e.r);
}
function uy(e, t, n, r = Yi, o = Yi) {
  return { k: e, l: r, lvl: n, r: o, v: t };
}
function Pp(e) {
  return tu(dy(e));
}
function dy(e) {
  const { l: t } = e;
  return !at(t) && t.lvl === e.lvl ? At(t, { r: At(e, { l: t.r }) }) : e;
}
function tu(e) {
  const { lvl: t, r: n } = e;
  return !at(n) && !at(n.r) && n.lvl === t && n.r.lvl === t ? At(n, { l: At(e, { r: n.l }), lvl: t + 1 }) : e;
}
function IO(e) {
  return ay(e, ({ k: t, v: n }) => ({ index: t, value: n }));
}
function fy(e, t) {
  return !!(e && e.startIndex === t.startIndex && e.endIndex === t.endIndex);
}
function Xi(e, t) {
  return !!(e && e[0] === t[0] && e[1] === t[1]);
}
const gd = Ge(
  () => ({ recalcInProgress: de(!1) }),
  [],
  { singleton: !0 }
);
function py(e, t, n) {
  return e[Ta(e, t, n)];
}
function Ta(e, t, n, r = 0) {
  let o = e.length - 1;
  for (; r <= o; ) {
    const s = Math.floor((r + o) / 2), a = e[s], l = n(a, t);
    if (l === 0)
      return s;
    if (l === -1) {
      if (o - r < 2)
        return s - 1;
      o = s - 1;
    } else {
      if (o === r)
        return s;
      r = s + 1;
    }
  }
  throw new Error(`Failed binary finding record in array - ${e.join(",")}, searched for ${t}`);
}
function PO(e, t, n, r) {
  const o = Ta(e, t, r), s = Ta(e, n, r, o);
  return e.slice(o, s + 1);
}
function Fr(e, t) {
  return Math.round(e.getBoundingClientRect()[t]);
}
function yl(e) {
  return !at(e.groupOffsetTree);
}
function yd({ index: e }, t) {
  return t === e ? 0 : t < e ? -1 : 1;
}
function NO() {
  return {
    groupIndices: [],
    groupOffsetTree: Mo(),
    lastIndex: 0,
    lastOffset: 0,
    lastSize: 0,
    offsetTree: [],
    sizeTree: Mo()
  };
}
function AO(e, t) {
  let n = at(e) ? 0 : 1 / 0;
  for (const r of t) {
    const { endIndex: o, size: s, startIndex: a } = r;
    if (n = Math.min(n, a), at(e)) {
      e = fn(e, 0, s);
      continue;
    }
    const l = gl(e, a - 1, o + 1);
    if (l.some(LO(r)))
      continue;
    let c = !1, u = !1;
    for (const { end: f, start: d, value: h } of l)
      c ? (o >= d || s === h) && (e = Zc(e, d)) : (u = h !== s, c = !0), f > o && o >= d && h !== s && (e = fn(e, o + 1, h));
    u && (e = fn(e, a, s));
  }
  return [e, n];
}
function MO(e) {
  return typeof e.groupIndex < "u";
}
function _O({ offset: e }, t) {
  return t === e ? 0 : t < e ? -1 : 1;
}
function Qi(e, t, n) {
  if (t.length === 0)
    return 0;
  const { index: r, offset: o, size: s } = py(t, e, yd), a = e - r, l = s * a + (a - 1) * n + o;
  return l > 0 ? l + n : l;
}
function my(e, t) {
  if (!yl(t))
    return e;
  let n = 0;
  for (; t.groupIndices[n] <= e + n; )
    n++;
  return e + n;
}
function hy(e, t, n) {
  if (MO(e))
    return t.groupIndices[e.groupIndex] + 1;
  {
    const r = e.index === "LAST" ? n : e.index;
    let o = my(r, t);
    return o = Math.max(0, o, Math.min(n, o)), o;
  }
}
function DO(e, t, n, r = 0) {
  return r > 0 && (t = Math.max(t, py(e, r, yd).offset)), ay(PO(e, t, n, _O), jO);
}
function BO(e, [t, n, r, o]) {
  t.length > 0 && r("received item sizes", t, yn.DEBUG);
  const s = e.sizeTree;
  let a = s, l = 0;
  if (n.length > 0 && at(s) && t.length === 2) {
    const h = t[0].size, g = t[1].size;
    a = n.reduce((y, m) => fn(fn(y, m, h), m + 1, g), a);
  } else
    [a, l] = AO(a, t);
  if (a === s)
    return e;
  const { lastIndex: c, lastOffset: u, lastSize: f, offsetTree: d } = nu(e.offsetTree, l, a, o);
  return {
    groupIndices: n,
    groupOffsetTree: n.reduce((h, g) => fn(h, g, Qi(g, d, o)), Mo()),
    lastIndex: c,
    lastOffset: u,
    lastSize: f,
    offsetTree: d,
    sizeTree: a
  };
}
function FO(e) {
  return to(e).map(({ k: t, v: n }, r, o) => {
    const s = o[r + 1];
    return { endIndex: s ? s.k - 1 : 1 / 0, size: n, startIndex: t };
  });
}
function Np(e, t) {
  let n = 0, r = 0;
  for (; n < e; )
    n += t[r + 1] - t[r] - 1, r++;
  return r - (n === e ? 0 : 1);
}
function nu(e, t, n, r) {
  let o = e, s = 0, a = 0, l = 0, c = 0;
  if (t !== 0) {
    c = Ta(o, t - 1, yd), l = o[c].offset;
    const u = Ln(n, t - 1);
    s = u[0], a = u[1], o.length && o[c].size === Ln(n, t)[1] && (c -= 1), o = o.slice(0, c + 1);
  } else
    o = [];
  for (const { start: u, value: f } of gl(n, t, 1 / 0)) {
    const d = u - s, h = d * a + l + d * r;
    o.push({
      index: u,
      offset: h,
      size: f
    }), s = u, l = h, a = f;
  }
  return {
    lastIndex: s,
    lastOffset: l,
    lastSize: a,
    offsetTree: o
  };
}
function jO(e) {
  return { index: e.index, value: e };
}
function LO(e) {
  const { endIndex: t, size: n, startIndex: r } = e;
  return (o) => o.start === r && (o.end === t || o.end === 1 / 0) && o.value === n;
}
const VO = {
  offsetHeight: "height",
  offsetWidth: "width"
}, dr = Ge(
  ([{ log: e }, { recalcInProgress: t }]) => {
    const n = ze(), r = ze(), o = Yt(r, 0), s = ze(), a = ze(), l = de(0), c = de([]), u = de(void 0), f = de(void 0), d = de((x, T) => Fr(x, VO[T])), h = de(void 0), g = de(0), y = NO(), m = Yt(
      ce(n, je(c, e, g), Jn(BO, y), ut()),
      y
    ), b = Yt(
      ce(
        c,
        ut(),
        Jn((x, T) => ({ current: T, prev: x.current }), {
          current: [],
          prev: []
        }),
        he(({ prev: x }) => x)
      ),
      []
    );
    Ee(
      ce(
        c,
        ke((x) => x.length > 0),
        je(m, g),
        he(([x, T, R]) => {
          const I = x.reduce((N, p, O) => fn(N, p, Qi(p, T.offsetTree, R) || O), Mo());
          return {
            ...T,
            groupIndices: x,
            groupOffsetTree: I
          };
        })
      ),
      m
    ), Ee(
      ce(
        r,
        je(m),
        ke(([x, { lastIndex: T }]) => x < T),
        he(([x, { lastIndex: T, lastSize: R }]) => [
          {
            endIndex: T,
            size: R,
            startIndex: x
          }
        ])
      ),
      n
    ), Ee(u, f);
    const v = Yt(
      ce(
        u,
        he((x) => x === void 0)
      ),
      !0
    );
    Ee(
      ce(
        f,
        ke((x) => x !== void 0 && at(Gt(m).sizeTree)),
        he((x) => [{ endIndex: 0, size: x, startIndex: 0 }])
      ),
      n
    );
    const E = gn(
      ce(
        n,
        je(m),
        Jn(
          ({ sizes: x }, [T, R]) => ({
            changed: R !== x,
            sizes: R
          }),
          { changed: !1, sizes: y }
        ),
        he((x) => x.changed)
      )
    );
    Ze(
      ce(
        l,
        Jn(
          (x, T) => ({ diff: x.prev - T, prev: T }),
          { diff: 0, prev: 0 }
        ),
        he((x) => x.diff)
      ),
      (x) => {
        const { groupIndices: T } = Gt(m);
        if (x > 0)
          De(t, !0), De(s, x + Np(x, T));
        else if (x < 0) {
          const R = Gt(b);
          R.length > 0 && (x -= Np(-x, R)), De(a, x);
        }
      }
    ), Ze(ce(l, je(e)), ([x, T]) => {
      x < 0 && T(
        "`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value",
        { firstItemIndex: l },
        yn.ERROR
      );
    });
    const S = gn(s);
    Ee(
      ce(
        s,
        je(m),
        he(([x, T]) => {
          const R = T.groupIndices.length > 0, I = [], N = T.lastSize;
          if (R) {
            const p = Ki(T.sizeTree, 0);
            let O = 0, $ = 0;
            for (; O < x; ) {
              const D = T.groupIndices[$], M = T.groupIndices.length === $ + 1 ? 1 / 0 : T.groupIndices[$ + 1] - D - 1;
              I.push({
                endIndex: D,
                size: p,
                startIndex: D
              }), I.push({
                endIndex: D + 1 + M - 1,
                size: N,
                startIndex: D + 1
              }), $++, O += M + 1;
            }
            const A = to(T.sizeTree);
            return O !== x && A.shift(), A.reduce(
              (D, { k: M, v: _ }) => {
                let L = D.ranges;
                return D.prevSize !== 0 && (L = [
                  ...D.ranges,
                  {
                    endIndex: M + x - 1,
                    size: D.prevSize,
                    startIndex: D.prevIndex
                  }
                ]), {
                  prevIndex: M + x,
                  prevSize: _,
                  ranges: L
                };
              },
              {
                prevIndex: x,
                prevSize: 0,
                ranges: I
              }
            ).ranges;
          }
          return to(T.sizeTree).reduce(
            (p, { k: O, v: $ }) => ({
              prevIndex: O + x,
              prevSize: $,
              ranges: [...p.ranges, { endIndex: O + x - 1, size: p.prevSize, startIndex: p.prevIndex }]
            }),
            {
              prevIndex: 0,
              prevSize: N,
              ranges: []
            }
          ).ranges;
        })
      ),
      n
    );
    const w = gn(
      ce(
        a,
        je(m, g),
        he(([x, { offsetTree: T }, R]) => {
          const I = -x;
          return Qi(I, T, R);
        })
      )
    );
    return Ee(
      ce(
        a,
        je(m, g),
        he(([x, T, R]) => {
          if (T.groupIndices.length > 0) {
            if (at(T.sizeTree))
              return T;
            let I = Mo();
            const N = Gt(b);
            let p = 0, O = 0, $ = 0;
            for (; p < -x; ) {
              $ = N[O];
              const A = N[O + 1] - $ - 1;
              O++, p += A + 1;
            }
            if (I = to(T.sizeTree).reduce((A, { k: D, v: M }) => fn(A, Math.max(0, D + x), M), I), p !== -x) {
              const A = Ki(T.sizeTree, $);
              I = fn(I, 0, A);
              const D = Ln(T.sizeTree, -x + 1)[1];
              I = fn(I, 1, D);
            }
            return {
              ...T,
              sizeTree: I,
              ...nu(T.offsetTree, 0, I, R)
            };
          } else {
            const I = to(T.sizeTree).reduce((N, { k: p, v: O }) => fn(N, Math.max(0, p + x), O), Mo());
            return {
              ...T,
              sizeTree: I,
              ...nu(T.offsetTree, 0, I, R)
            };
          }
        })
      ),
      m
    ), {
      beforeUnshiftWith: S,
      // input
      data: h,
      defaultItemSize: f,
      firstItemIndex: l,
      fixedItemSize: u,
      gap: g,
      groupIndices: c,
      itemSize: d,
      listRefresh: E,
      shiftWith: a,
      shiftWithOffset: w,
      sizeRanges: n,
      // output
      sizes: m,
      statefulTotalCount: o,
      totalCount: r,
      trackItemSizes: v,
      unshiftWith: s
    };
  },
  dt(Hr, gd),
  { singleton: !0 }
);
function zO(e) {
  return e.reduce(
    (t, n) => (t.groupIndices.push(t.totalCount), t.totalCount += n + 1, t),
    {
      groupIndices: [],
      totalCount: 0
    }
  );
}
const gy = Ge(
  ([{ groupIndices: e, sizes: t, totalCount: n }, { headerHeight: r, scrollTop: o }]) => {
    const s = ze(), a = ze(), l = gn(ce(s, he(zO)));
    return Ee(
      ce(
        l,
        he((c) => c.totalCount)
      ),
      n
    ), Ee(
      ce(
        l,
        he((c) => c.groupIndices)
      ),
      e
    ), Ee(
      ce(
        Mt(o, t, r),
        ke(([c, u]) => yl(u)),
        he(([c, u, f]) => Ln(u.groupOffsetTree, Math.max(c - f, 0), "v")[0]),
        ut(),
        he((c) => [c])
      ),
      a
    ), { groupCounts: s, topItemsIndexes: a };
  },
  dt(dr, tn)
), qr = Ge(
  ([{ log: e }]) => {
    const t = de(!1), n = gn(
      ce(
        t,
        ke((r) => r),
        ut()
      )
    );
    return Ze(t, (r) => {
      r && Gt(e)("props updated", {}, yn.DEBUG);
    }), { didMount: n, propsReady: t };
  },
  dt(Hr),
  { singleton: !0 }
), WO = typeof document < "u" && "scrollBehavior" in document.documentElement.style;
function yy(e) {
  const t = typeof e == "number" ? { index: e } : e;
  return t.align || (t.align = "start"), (!t.behavior || !WO) && (t.behavior = "auto"), t.offset || (t.offset = 0), t;
}
const ps = Ge(
  ([
    { gap: e, listRefresh: t, sizes: n, totalCount: r },
    {
      fixedFooterHeight: o,
      fixedHeaderHeight: s,
      footerHeight: a,
      headerHeight: l,
      scrollingInProgress: c,
      scrollTo: u,
      smoothScrollTargetReached: f,
      viewportHeight: d
    },
    { log: h }
  ]) => {
    const g = ze(), y = ze(), m = de(0);
    let b = null, v = null, E = null;
    function S() {
      b && (b(), b = null), E && (E(), E = null), v && (clearTimeout(v), v = null), De(c, !1);
    }
    return Ee(
      ce(
        g,
        je(n, d, r, m, l, a, h),
        je(e, s, o),
        he(
          ([
            [w, x, T, R, I, N, p, O],
            $,
            A,
            D
          ]) => {
            const M = yy(w), { align: _, behavior: L, offset: U } = M, z = R - 1, j = hy(M, x, z);
            let V = Qi(j, x.offsetTree, $) + N;
            _ === "end" ? (V += A + Ln(x.sizeTree, j)[1] - T + D, j === z && (V += p)) : _ === "center" ? V += (A + Ln(x.sizeTree, j)[1] - T + D) / 2 : V -= I, U && (V += U);
            const K = (Y) => {
              S(), Y ? (O("retrying to scroll to", { location: w }, yn.DEBUG), De(g, w)) : (De(y, !0), O("list did not change, scroll successful", {}, yn.DEBUG));
            };
            if (S(), L === "smooth") {
              let Y = !1;
              E = Ze(t, (te) => {
                Y = Y || te;
              }), b = cr(f, () => {
                K(Y);
              });
            } else
              b = cr(ce(t, UO(150)), K);
            return v = setTimeout(() => {
              S();
            }, 1200), De(c, !0), O("scrolling from index to", { behavior: L, index: j, top: V }, yn.DEBUG), { behavior: L, top: V };
          }
        )
      ),
      u
    ), {
      scrollTargetReached: y,
      scrollToIndex: g,
      topListHeight: m
    };
  },
  dt(dr, tn, Hr),
  { singleton: !0 }
);
function UO(e) {
  return (t) => {
    const n = setTimeout(() => {
      t(!1);
    }, e);
    return (r) => {
      r && (t(!0), clearTimeout(n));
    };
  };
}
function bd(e, t) {
  e == 0 ? t() : requestAnimationFrame(() => {
    bd(e - 1, t);
  });
}
function vd(e, t) {
  const n = t - 1;
  return typeof e == "number" ? e : e.index === "LAST" ? n : e.index;
}
const ms = Ge(
  ([{ defaultItemSize: e, listRefresh: t, sizes: n }, { scrollTop: r }, { scrollTargetReached: o, scrollToIndex: s }, { didMount: a }]) => {
    const l = de(!0), c = de(0), u = de(!0);
    return Ee(
      ce(
        a,
        je(c),
        ke(([f, d]) => !!d),
        Xn(!1)
      ),
      l
    ), Ee(
      ce(
        a,
        je(c),
        ke(([f, d]) => !!d),
        Xn(!1)
      ),
      u
    ), Ze(
      ce(
        Mt(t, a),
        je(l, n, e, u),
        ke(([[, f], d, { sizeTree: h }, g, y]) => f && (!at(h) || pd(g)) && !d && !y),
        je(c)
      ),
      ([, f]) => {
        cr(o, () => {
          De(u, !0);
        }), bd(4, () => {
          cr(r, () => {
            De(l, !0);
          }), De(s, f);
        });
      }
    ), {
      initialItemFinalLocationReached: u,
      initialTopMostItemIndex: c,
      scrolledToInitialItem: l
    };
  },
  dt(dr, tn, ps, qr),
  { singleton: !0 }
);
function by(e, t) {
  return Math.abs(e - t) < 1.01;
}
const Ji = "up", Ii = "down", HO = "none", qO = {
  atBottom: !1,
  notAtBottomBecause: "NOT_SHOWING_LAST_ITEM",
  state: {
    offsetBottom: 0,
    scrollHeight: 0,
    scrollTop: 0,
    viewportHeight: 0
  }
}, GO = 0, hs = Ge(([{ footerHeight: e, headerHeight: t, scrollBy: n, scrollContainerState: r, scrollTop: o, viewportHeight: s }]) => {
  const a = de(!1), l = de(!0), c = ze(), u = ze(), f = de(4), d = de(GO), h = Yt(
    ce(
      kp(ce(Ie(o), qo(1), Xn(!0)), ce(Ie(o), qo(1), Xn(!1), $p(100))),
      ut()
    ),
    !1
  ), g = Yt(
    ce(kp(ce(n, Xn(!0)), ce(n, Xn(!1), $p(200))), ut()),
    !1
  );
  Ee(
    ce(
      Mt(Ie(o), Ie(d)),
      he(([E, S]) => E <= S),
      ut()
    ),
    l
  ), Ee(ce(l, Mr(50)), u);
  const y = gn(
    ce(
      Mt(r, Ie(s), Ie(t), Ie(e), Ie(f)),
      Jn((E, [{ scrollHeight: S, scrollTop: w }, x, T, R, I]) => {
        const N = w + x - S > -I, p = {
          scrollHeight: S,
          scrollTop: w,
          viewportHeight: x
        };
        if (N) {
          let $, A;
          return w > E.state.scrollTop ? ($ = "SCROLLED_DOWN", A = E.state.scrollTop - w) : ($ = "SIZE_DECREASED", A = E.state.scrollTop - w || E.scrollTopDelta), {
            atBottom: !0,
            atBottomBecause: $,
            scrollTopDelta: A,
            state: p
          };
        }
        let O;
        return p.scrollHeight > E.state.scrollHeight ? O = "SIZE_INCREASED" : x < E.state.viewportHeight ? O = "VIEWPORT_HEIGHT_DECREASING" : w < E.state.scrollTop ? O = "SCROLLING_UPWARDS" : O = "NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM", {
          atBottom: !1,
          notAtBottomBecause: O,
          state: p
        };
      }, qO),
      ut((E, S) => E && E.atBottom === S.atBottom)
    )
  ), m = Yt(
    ce(
      r,
      Jn(
        (E, { scrollHeight: S, scrollTop: w, viewportHeight: x }) => {
          if (by(E.scrollHeight, S))
            return {
              changed: !1,
              jump: 0,
              scrollHeight: S,
              scrollTop: w
            };
          {
            const T = S - (w + x) < 1;
            return E.scrollTop !== w && T ? {
              changed: !0,
              jump: E.scrollTop - w,
              scrollHeight: S,
              scrollTop: w
            } : {
              changed: !0,
              jump: 0,
              scrollHeight: S,
              scrollTop: w
            };
          }
        },
        { changed: !1, jump: 0, scrollHeight: 0, scrollTop: 0 }
      ),
      ke((E) => E.changed),
      he((E) => E.jump)
    ),
    0
  );
  Ee(
    ce(
      y,
      he((E) => E.atBottom)
    ),
    a
  ), Ee(ce(a, Mr(50)), c);
  const b = de(Ii);
  Ee(
    ce(
      r,
      he(({ scrollTop: E }) => E),
      ut(),
      Jn(
        (E, S) => Gt(g) ? { direction: E.direction, prevScrollTop: S } : { direction: S < E.prevScrollTop ? Ji : Ii, prevScrollTop: S },
        { direction: Ii, prevScrollTop: 0 }
      ),
      he((E) => E.direction)
    ),
    b
  ), Ee(ce(r, Mr(50), Xn(HO)), b);
  const v = de(0);
  return Ee(
    ce(
      h,
      ke((E) => !E),
      Xn(0)
    ),
    v
  ), Ee(
    ce(
      o,
      Mr(100),
      je(h),
      ke(([E, S]) => !!S),
      Jn(([E, S], [w]) => [S, w], [0, 0]),
      he(([E, S]) => S - E)
    ),
    v
  ), {
    atBottomState: y,
    atBottomStateChange: c,
    atBottomThreshold: f,
    atTopStateChange: u,
    atTopThreshold: d,
    isAtBottom: a,
    isAtTop: l,
    isScrolling: h,
    lastJumpDueToItemResize: m,
    scrollDirection: b,
    scrollVelocity: v
  };
}, dt(tn)), Ea = "top", Ca = "bottom", Ap = "none";
function Mp(e, t, n) {
  return typeof e == "number" ? n === Ji && t === Ea || n === Ii && t === Ca ? e : 0 : n === Ji ? t === Ea ? e.main : e.reverse : t === Ca ? e.main : e.reverse;
}
function _p(e, t) {
  var n;
  return typeof e == "number" ? e : (n = e[t]) != null ? n : 0;
}
const xd = Ge(
  ([{ deviation: e, fixedHeaderHeight: t, headerHeight: n, scrollTop: r, viewportHeight: o }]) => {
    const s = ze(), a = de(0), l = de(0), c = de(0), u = Yt(
      ce(
        Mt(
          Ie(r),
          Ie(o),
          Ie(n),
          Ie(s, Xi),
          Ie(c),
          Ie(a),
          Ie(t),
          Ie(e),
          Ie(l)
        ),
        he(
          ([
            f,
            d,
            h,
            [g, y],
            m,
            b,
            v,
            E,
            S
          ]) => {
            const w = f - E, x = b + v, T = Math.max(h - w, 0);
            let R = Ap;
            const I = _p(S, Ea), N = _p(S, Ca);
            return g -= E, g += h + v, y += h + v, y -= E, g > f + x - I && (R = Ji), y < f - T + d + N && (R = Ii), R !== Ap ? [
              Math.max(w - h - Mp(m, Ea, R) - I, 0),
              w - T - v + d + Mp(m, Ca, R) + N
            ] : null;
          }
        ),
        ke((f) => f != null),
        ut(Xi)
      ),
      [0, 0]
    );
    return {
      increaseViewportBy: l,
      // input
      listBoundary: s,
      overscan: c,
      topListHeight: a,
      // output
      visibleRange: u
    };
  },
  dt(tn),
  { singleton: !0 }
);
function YO(e, t, n) {
  if (yl(t)) {
    const r = my(e, t);
    return [
      { index: Ln(t.groupOffsetTree, r)[0], offset: 0, size: 0 },
      { data: n == null ? void 0 : n[0], index: r, offset: 0, size: 0 }
    ];
  }
  return [{ data: n == null ? void 0 : n[0], index: e, offset: 0, size: 0 }];
}
const lc = {
  bottom: 0,
  firstItemIndex: 0,
  items: [],
  offsetBottom: 0,
  offsetTop: 0,
  top: 0,
  topItems: [],
  topListHeight: 0,
  totalCount: 0
};
function sa(e, t, n, r, o, s) {
  const { lastIndex: a, lastOffset: l, lastSize: c } = o;
  let u = 0, f = 0;
  if (e.length > 0) {
    u = e[0].offset;
    const m = e[e.length - 1];
    f = m.offset + m.size;
  }
  const d = n - a, h = l + d * c + (d - 1) * r, g = u, y = h - f;
  return {
    bottom: f,
    firstItemIndex: s,
    items: Dp(e, o, s),
    offsetBottom: y,
    offsetTop: u,
    top: g,
    topItems: Dp(t, o, s),
    topListHeight: t.reduce((m, b) => b.size + m, 0),
    totalCount: n
  };
}
function vy(e, t, n, r, o, s) {
  let a = 0;
  if (n.groupIndices.length > 0)
    for (const f of n.groupIndices) {
      if (f - a >= e)
        break;
      a++;
    }
  const l = e + a, c = vd(t, l), u = Array.from({ length: l }).map((f, d) => ({
    data: s[d + c],
    index: d + c,
    offset: 0,
    size: 0
  }));
  return sa(u, [], l, o, n, r);
}
function Dp(e, t, n) {
  if (e.length === 0)
    return [];
  if (!yl(t))
    return e.map((u) => ({ ...u, index: u.index + n, originalIndex: u.index }));
  const r = e[0].index, o = e[e.length - 1].index, s = [], a = gl(t.groupOffsetTree, r, o);
  let l, c = 0;
  for (const u of e) {
    (!l || l.end < u.index) && (l = a.shift(), c = t.groupIndices.indexOf(l.start));
    let f;
    u.index === l.start ? f = {
      index: c,
      type: "group"
    } : f = {
      groupIndex: c,
      index: u.index - (c + 1) + n
    }, s.push({
      ...f,
      data: u.data,
      offset: u.offset,
      originalIndex: u.index,
      size: u.size
    });
  }
  return s;
}
const po = Ge(
  ([
    { data: e, firstItemIndex: t, gap: n, sizes: r, totalCount: o },
    s,
    { listBoundary: a, topListHeight: l, visibleRange: c },
    { initialTopMostItemIndex: u, scrolledToInitialItem: f },
    { topListHeight: d },
    h,
    { didMount: g },
    { recalcInProgress: y }
  ]) => {
    const m = de([]), b = de(0), v = ze();
    Ee(s.topItemsIndexes, m);
    const E = Yt(
      ce(
        Mt(
          g,
          y,
          Ie(c, Xi),
          Ie(o),
          Ie(r),
          Ie(u),
          f,
          Ie(m),
          Ie(t),
          Ie(n),
          e
        ),
        ke(([T, R, , I, , , , , , , N]) => {
          const p = N && N.length !== I;
          return T && !R && !p;
        }),
        he(
          ([
            ,
            ,
            [T, R],
            I,
            N,
            p,
            O,
            $,
            A,
            D,
            M
          ]) => {
            const _ = N, { offsetTree: L, sizeTree: U } = _, z = Gt(b);
            if (I === 0)
              return { ...lc, totalCount: I };
            if (T === 0 && R === 0)
              return z === 0 ? { ...lc, totalCount: I } : vy(z, p, N, A, D, M || []);
            if (at(U))
              return z > 0 ? null : sa(
                YO(vd(p, I), _, M),
                [],
                I,
                D,
                _,
                A
              );
            const j = [];
            if ($.length > 0) {
              const X = $[0], ee = $[$.length - 1];
              let re = 0;
              for (const q of gl(U, X, ee)) {
                const Q = q.value, G = Math.max(q.start, X), ne = Math.min(q.end, ee);
                for (let B = G; B <= ne; B++)
                  j.push({ data: M == null ? void 0 : M[B], index: B, offset: re, size: Q }), re += Q;
              }
            }
            if (!O)
              return sa([], j, I, D, _, A);
            const V = $.length > 0 ? $[$.length - 1] + 1 : 0, K = DO(L, T, R, V);
            if (K.length === 0)
              return null;
            const Y = I - 1, te = hl([], (X) => {
              for (const ee of K) {
                const re = ee.value;
                let q = re.offset, Q = ee.start;
                const G = re.size;
                if (re.offset < T) {
                  Q += Math.floor((T - re.offset + D) / (G + D));
                  const B = Q - ee.start;
                  q += B * G + B * D;
                }
                Q < V && (q += (V - Q) * G, Q = V);
                const ne = Math.min(ee.end, Y);
                for (let B = Q; B <= ne && !(q >= R); B++)
                  X.push({ data: M == null ? void 0 : M[B], index: B, offset: q, size: G }), q += G + D;
              }
            });
            return sa(te, j, I, D, _, A);
          }
        ),
        //@ts-expect-error filter needs to be fixed
        ke((T) => T !== null),
        ut()
      ),
      lc
    );
    Ee(
      ce(
        e,
        ke(pd),
        he((T) => T == null ? void 0 : T.length)
      ),
      o
    ), Ee(
      ce(
        E,
        he((T) => T.topListHeight)
      ),
      d
    ), Ee(d, l), Ee(
      ce(
        E,
        he((T) => [T.top, T.bottom])
      ),
      a
    ), Ee(
      ce(
        E,
        he((T) => T.items)
      ),
      v
    );
    const S = gn(
      ce(
        E,
        ke(({ items: T }) => T.length > 0),
        je(o, e),
        ke(([{ items: T }, R]) => T[T.length - 1].originalIndex === R - 1),
        he(([, T, R]) => [T - 1, R]),
        ut(Xi),
        he(([T]) => T)
      )
    ), w = gn(
      ce(
        E,
        Mr(200),
        ke(({ items: T, topItems: R }) => T.length > 0 && T[0].originalIndex === R.length),
        he(({ items: T }) => T[0].index),
        ut()
      )
    ), x = gn(
      ce(
        E,
        ke(({ items: T }) => T.length > 0),
        he(({ items: T }) => {
          let R = 0, I = T.length - 1;
          for (; T[R].type === "group" && R < I; )
            R++;
          for (; T[I].type === "group" && I > R; )
            I--;
          return {
            endIndex: T[I].index,
            startIndex: T[R].index
          };
        }),
        ut(fy)
      )
    );
    return { endReached: S, initialItemCount: b, itemsRendered: v, listState: E, rangeChanged: x, startReached: w, topItemsIndexes: m, ...h };
  },
  dt(
    dr,
    gy,
    xd,
    ms,
    ps,
    hs,
    qr,
    gd
  ),
  { singleton: !0 }
), xy = Ge(
  ([{ fixedFooterHeight: e, fixedHeaderHeight: t, footerHeight: n, headerHeight: r }, { listState: o }]) => {
    const s = ze(), a = Yt(
      ce(
        Mt(n, e, r, t, o),
        he(([l, c, u, f, d]) => l + c + u + f + d.offsetBottom + d.bottom)
      ),
      0
    );
    return Ee(Ie(a), s), { totalListHeight: a, totalListHeightChanged: s };
  },
  dt(tn, po),
  { singleton: !0 }
), KO = Ge(
  ([{ viewportHeight: e }, { totalListHeight: t }]) => {
    const n = de(!1), r = Yt(
      ce(
        Mt(n, e, t),
        ke(([o]) => o),
        he(([, o, s]) => Math.max(0, o - s)),
        Mr(0),
        ut()
      ),
      0
    );
    return { alignToBottom: n, paddingTopAddition: r };
  },
  dt(tn, xy),
  { singleton: !0 }
);
function Bp(e) {
  return e ? e === "smooth" ? "smooth" : "auto" : !1;
}
const XO = (e, t) => typeof e == "function" ? Bp(e(t)) : t && Bp(e), QO = Ge(
  ([
    { listRefresh: e, totalCount: t },
    { atBottomState: n, isAtBottom: r },
    { scrollToIndex: o },
    { scrolledToInitialItem: s },
    { didMount: a, propsReady: l },
    { log: c },
    { scrollingInProgress: u }
  ]) => {
    const f = de(!1), d = ze();
    let h = null;
    function g(m) {
      De(o, {
        align: "end",
        behavior: m,
        index: "LAST"
      });
    }
    Ze(
      ce(
        Mt(ce(Ie(t), qo(1)), a),
        je(Ie(f), r, s, u),
        he(([[m, b], v, E, S, w]) => {
          let x = b && S, T = "auto";
          return x && (T = XO(v, E || w), x = x && !!T), { followOutputBehavior: T, shouldFollow: x, totalCount: m };
        }),
        ke(({ shouldFollow: m }) => m)
      ),
      ({ followOutputBehavior: m, totalCount: b }) => {
        h && (h(), h = null), h = cr(e, () => {
          Gt(c)("following output to ", { totalCount: b }, yn.DEBUG), g(m), h = null;
        });
      }
    );
    function y(m) {
      const b = cr(n, (v) => {
        m && !v.atBottom && v.notAtBottomBecause === "SIZE_INCREASED" && !h && (Gt(c)("scrolling to bottom due to increased size", {}, yn.DEBUG), g("auto"));
      });
      setTimeout(b, 100);
    }
    return Ze(
      ce(
        Mt(Ie(f), t, l),
        ke(([m, , b]) => m && b),
        Jn(
          ({ value: m }, [, b]) => ({ refreshed: m === b, value: b }),
          { refreshed: !1, value: 0 }
        ),
        ke(({ refreshed: m }) => m),
        je(f, t)
      ),
      ([, m]) => {
        Gt(s) && y(m !== !1);
      }
    ), Ze(d, () => {
      y(Gt(f) !== !1);
    }), Ze(Mt(Ie(f), n), ([m, b]) => {
      m && !b.atBottom && b.notAtBottomBecause === "VIEWPORT_HEIGHT_DECREASING" && g("auto");
    }), { autoscrollToBottom: d, followOutput: f };
  },
  dt(dr, hs, ps, ms, qr, Hr, tn)
), JO = Ge(
  ([{ data: e, firstItemIndex: t, gap: n, sizes: r }, { initialTopMostItemIndex: o }, { initialItemCount: s, listState: a }, { didMount: l }]) => (Ee(
    ce(
      l,
      je(s),
      ke(([, c]) => c !== 0),
      je(o, r, t, n, e),
      he(([[, c], u, f, d, h, g = []]) => vy(c, u, f, d, h, g))
    ),
    a
  ), {}),
  dt(dr, ms, po, qr),
  { singleton: !0 }
), ZO = Ge(
  ([{ didMount: e }, { scrollTo: t }, { listState: n }]) => {
    const r = de(0);
    return Ze(
      ce(
        e,
        je(r),
        ke(([, o]) => o !== 0),
        he(([, o]) => ({ top: o }))
      ),
      (o) => {
        cr(
          ce(
            n,
            qo(1),
            ke((s) => s.items.length > 1)
          ),
          () => {
            requestAnimationFrame(() => {
              De(t, o);
            });
          }
        );
      }
    ), {
      initialScrollTop: r
    };
  },
  dt(qr, tn, po),
  { singleton: !0 }
), eR = ({
  itemBottom: e,
  itemTop: t,
  locationParams: { align: n, behavior: r, ...o },
  viewportBottom: s,
  viewportTop: a
}) => t < a ? { ...o, align: n ?? "start", behavior: r } : e > s ? { ...o, align: n ?? "end", behavior: r } : null, tR = Ge(
  ([
    { gap: e, sizes: t, totalCount: n },
    { fixedFooterHeight: r, fixedHeaderHeight: o, headerHeight: s, scrollingInProgress: a, scrollTop: l, viewportHeight: c },
    { scrollToIndex: u }
  ]) => {
    const f = ze();
    return Ee(
      ce(
        f,
        je(t, c, n, s, o, r, l),
        je(e),
        he(([[d, h, g, y, m, b, v, E], S]) => {
          const { align: w, behavior: x, calculateViewLocation: T = eR, done: R, ...I } = d, N = hy(d, h, y - 1), p = Qi(N, h.offsetTree, S) + m + b, O = p + Ln(h.sizeTree, N)[1], $ = E + b, A = E + g - v, D = T({
            itemBottom: O,
            itemTop: p,
            locationParams: { align: w, behavior: x, ...I },
            viewportBottom: A,
            viewportTop: $
          });
          return D ? R && cr(
            ce(
              a,
              ke((M) => !M),
              // skips the initial publish of false, and the cleanup call.
              // but if scrollingInProgress is true, we skip the initial publish.
              qo(Gt(a) ? 1 : 2)
            ),
            R
          ) : R && R(), D;
        }),
        ke((d) => d !== null)
      ),
      u
    ), {
      scrollIntoView: f
    };
  },
  dt(dr, tn, ps, po, Hr),
  { singleton: !0 }
), wy = Ge(
  ([{ scrollVelocity: e }]) => {
    const t = de(!1), n = ze(), r = de(!1);
    return Ee(
      ce(
        e,
        je(r, t, n),
        ke(([o, s]) => !!s),
        he(([o, s, a, l]) => {
          const { enter: c, exit: u } = s;
          if (a) {
            if (u(o, l))
              return !1;
          } else if (c(o, l))
            return !0;
          return a;
        }),
        ut()
      ),
      t
    ), Ze(
      ce(Mt(t, e, n), je(r)),
      ([[o, s, a], l]) => {
        o && l && l.change && l.change(s, a);
      }
    ), { isSeeking: t, scrollSeekConfiguration: r, scrollSeekRangeChanged: n, scrollVelocity: e };
  },
  dt(hs),
  { singleton: !0 }
), wd = Ge(([{ scrollContainerState: e, scrollTo: t }]) => {
  const n = ze(), r = ze(), o = ze(), s = de(!1), a = de(void 0);
  return Ee(
    ce(
      Mt(n, r),
      he(([{ scrollHeight: l, scrollTop: c, viewportHeight: u }, { offsetTop: f }]) => ({
        scrollHeight: l,
        scrollTop: Math.max(0, c - f),
        viewportHeight: u
      }))
    ),
    e
  ), Ee(
    ce(
      t,
      je(r),
      he(([l, { offsetTop: c }]) => ({
        ...l,
        top: l.top + c
      }))
    ),
    o
  ), {
    customScrollParent: a,
    // config
    useWindowScroll: s,
    // input
    windowScrollContainerState: n,
    // signals
    windowScrollTo: o,
    windowViewportRect: r
  };
}, dt(tn)), nR = Ge(
  ([
    { sizeRanges: e, sizes: t },
    { headerHeight: n, scrollTop: r },
    { initialTopMostItemIndex: o },
    { didMount: s },
    { useWindowScroll: a, windowScrollContainerState: l, windowViewportRect: c }
  ]) => {
    const u = ze(), f = de(void 0), d = de(null), h = de(null);
    return Ee(l, d), Ee(c, h), Ze(
      ce(
        u,
        je(t, r, a, d, h, n)
      ),
      ([g, y, m, b, v, E, S]) => {
        const w = FO(y.sizeTree);
        b && v !== null && E !== null && (m = v.scrollTop - E.offsetTop), m -= S, g({ ranges: w, scrollTop: m });
      }
    ), Ee(ce(f, ke(pd), he(rR)), o), Ee(
      ce(
        s,
        je(f),
        ke(([, g]) => g !== void 0),
        ut(),
        he(([, g]) => g.ranges)
      ),
      e
    ), {
      getState: u,
      restoreStateFrom: f
    };
  },
  dt(dr, tn, ms, qr, wd)
);
function rR(e) {
  return { align: "start", index: 0, offset: e.scrollTop };
}
const oR = Ge(([{ topItemsIndexes: e }]) => {
  const t = de(0);
  return Ee(
    ce(
      t,
      ke((n) => n >= 0),
      he((n) => Array.from({ length: n }).map((r, o) => o))
    ),
    e
  ), { topItemCount: t };
}, dt(po));
function Sy(e) {
  let t = !1, n;
  return () => (t || (t = !0, n = e()), n);
}
const iR = Sy(() => /iP(ad|od|hone)/i.test(navigator.userAgent) && /WebKit/i.test(navigator.userAgent)), sR = Ge(
  ([
    { deviation: e, scrollBy: t, scrollingInProgress: n, scrollTop: r },
    { isAtBottom: o, isScrolling: s, lastJumpDueToItemResize: a, scrollDirection: l },
    { listState: c },
    { beforeUnshiftWith: u, gap: f, shiftWithOffset: d, sizes: h },
    { log: g },
    { recalcInProgress: y }
  ]) => {
    const m = gn(
      ce(
        c,
        je(a),
        Jn(
          ([, v, E, S], [{ bottom: w, items: x, offsetBottom: T, totalCount: R }, I]) => {
            const N = w + T;
            let p = 0;
            return E === R && v.length > 0 && x.length > 0 && (x[0].originalIndex === 0 && v[0].originalIndex === 0 || (p = N - S, p !== 0 && (p += I))), [p, x, R, N];
          },
          [0, [], 0, 0]
        ),
        ke(([v]) => v !== 0),
        je(r, l, n, o, g, y),
        ke(([, v, E, S, , , w]) => !w && !S && v !== 0 && E === Ji),
        he(([[v], , , , , E]) => (E("Upward scrolling compensation", { amount: v }, yn.DEBUG), v))
      )
    );
    function b(v) {
      v > 0 ? (De(t, { behavior: "auto", top: -v }), De(e, 0)) : (De(e, 0), De(t, { behavior: "auto", top: -v }));
    }
    return Ze(ce(m, je(e, s)), ([v, E, S]) => {
      S && iR() ? De(e, E - v) : b(-v);
    }), Ze(
      ce(
        Mt(Yt(s, !1), e, y),
        ke(([v, E, S]) => !v && !S && E !== 0),
        he(([v, E]) => E),
        Mr(1)
      ),
      b
    ), Ee(
      ce(
        d,
        he((v) => ({ top: -v }))
      ),
      t
    ), Ze(
      ce(
        u,
        je(h, f),
        he(([v, { groupIndices: E, lastSize: S, sizeTree: w }, x]) => {
          function T(R) {
            return R * (S + x);
          }
          if (E.length === 0)
            return T(v);
          {
            let R = 0;
            const I = Ki(w, 0);
            let N = 0, p = 0;
            for (; N < v; ) {
              N++, R += I;
              let O = E.length === p + 1 ? 1 / 0 : E[p + 1] - E[p] - 1;
              N + O > v && (R -= I, O = v - N + 1), N += O, R += T(O), p++;
            }
            return R;
          }
        })
      ),
      (v) => {
        De(e, v), requestAnimationFrame(() => {
          De(t, { top: v }), requestAnimationFrame(() => {
            De(e, 0), De(y, !1);
          });
        });
      }
    ), { deviation: e };
  },
  dt(tn, hs, po, dr, Hr, gd)
), aR = Ge(
  ([
    e,
    t,
    n,
    r,
    o,
    s,
    a,
    l,
    c,
    u
  ]) => ({
    ...e,
    ...t,
    ...n,
    ...r,
    ...o,
    ...s,
    ...a,
    ...l,
    ...c,
    ...u
  }),
  dt(
    xd,
    JO,
    qr,
    wy,
    xy,
    ZO,
    KO,
    wd,
    tR,
    Hr
  )
), Ty = Ge(
  ([
    {
      data: e,
      defaultItemSize: t,
      firstItemIndex: n,
      fixedItemSize: r,
      gap: o,
      groupIndices: s,
      itemSize: a,
      sizeRanges: l,
      sizes: c,
      statefulTotalCount: u,
      totalCount: f,
      trackItemSizes: d
    },
    { initialItemFinalLocationReached: h, initialTopMostItemIndex: g, scrolledToInitialItem: y },
    m,
    b,
    v,
    { listState: E, topItemsIndexes: S, ...w },
    { scrollToIndex: x },
    T,
    { topItemCount: R },
    { groupCounts: I },
    N
  ]) => (Ee(w.rangeChanged, N.scrollSeekRangeChanged), Ee(
    ce(
      N.windowViewportRect,
      he((p) => p.visibleHeight)
    ),
    m.viewportHeight
  ), {
    data: e,
    defaultItemHeight: t,
    firstItemIndex: n,
    fixedItemHeight: r,
    gap: o,
    groupCounts: I,
    initialItemFinalLocationReached: h,
    initialTopMostItemIndex: g,
    scrolledToInitialItem: y,
    sizeRanges: l,
    topItemCount: R,
    topItemsIndexes: S,
    // input
    totalCount: f,
    ...v,
    groupIndices: s,
    itemSize: a,
    listState: E,
    scrollToIndex: x,
    // output
    statefulTotalCount: u,
    trackItemSizes: d,
    // exported from stateFlagsSystem
    ...w,
    // the bag of IO from featureGroup1System
    ...N,
    ...m,
    sizes: c,
    ...b
  }),
  dt(
    dr,
    ms,
    tn,
    nR,
    QO,
    po,
    ps,
    sR,
    oR,
    gy,
    aR
  )
);
function lR(e, t) {
  const n = {}, r = {};
  let o = 0;
  const s = e.length;
  for (; o < s; )
    r[e[o]] = 1, o += 1;
  for (const a in t)
    Object.hasOwn(r, a) || (n[a] = t[a]);
  return n;
}
const Vs = typeof document < "u" ? F.useLayoutEffect : F.useEffect;
function Ey(e, t, n) {
  const r = Object.keys(t.required || {}), o = Object.keys(t.optional || {}), s = Object.keys(t.methods || {}), a = Object.keys(t.events || {}), l = F.createContext({});
  function c(b, v) {
    b.propsReady && De(b.propsReady, !1);
    for (const E of r) {
      const S = b[t.required[E]];
      De(S, v[E]);
    }
    for (const E of o)
      if (E in v) {
        const S = b[t.optional[E]];
        De(S, v[E]);
      }
    b.propsReady && De(b.propsReady, !0);
  }
  function u(b) {
    return s.reduce((v, E) => (v[E] = (S) => {
      const w = b[t.methods[E]];
      De(w, S);
    }, v), {});
  }
  function f(b) {
    return a.reduce((v, E) => (v[E] = TO(b[t.events[E]]), v), {});
  }
  const d = F.forwardRef((b, v) => {
    const { children: E, ...S } = b, [w] = F.useState(() => hl(CO(e), (R) => {
      c(R, S);
    })), [x] = F.useState(Rp(f, w));
    Vs(() => {
      for (const R of a)
        R in S && Ze(x[R], S[R]);
      return () => {
        Object.values(x).map(md);
      };
    }, [S, x, w]), Vs(() => {
      c(w, S);
    }), F.useImperativeHandle(v, Op(u(w)));
    const T = n;
    return /* @__PURE__ */ k(l.Provider, { value: w, children: n ? /* @__PURE__ */ k(T, { ...lR([...r, ...o, ...a], S), children: E }) : E });
  }), h = (b) => F.useCallback(oy(De, F.useContext(l)[b]), [b]), g = (b) => {
    const v = F.useContext(l)[b], E = F.useCallback(
      (S) => Ze(v, S),
      [v]
    );
    return F.useSyncExternalStore(
      E,
      () => Gt(v),
      () => Gt(v)
    );
  }, y = (b) => {
    const v = F.useContext(l)[b], [E, S] = F.useState(Rp(Gt, v));
    return Vs(
      () => Ze(v, (w) => {
        w !== E && S(Op(w));
      }),
      [v, E]
    ), E;
  }, m = F.version.startsWith("18") ? g : y;
  return {
    Component: d,
    useEmitter: (b, v) => {
      const E = F.useContext(l)[b];
      Vs(() => Ze(E, v), [v, E]);
    },
    useEmitterValue: m,
    usePublisher: h
  };
}
const Cy = F.createContext(void 0), Oy = F.createContext(void 0), Ry = typeof document < "u" ? F.useLayoutEffect : F.useEffect;
function cc(e) {
  return "self" in e;
}
function cR(e) {
  return "body" in e;
}
function $y(e, t, n, r = ei, o, s) {
  const a = F.useRef(null), l = F.useRef(null), c = F.useRef(null), u = F.useCallback(
    (h) => {
      let g, y, m;
      const b = h.target;
      if (cR(b) || cc(b)) {
        const E = cc(b) ? b : b.defaultView;
        m = s ? E.scrollX : E.scrollY, g = s ? E.document.documentElement.scrollWidth : E.document.documentElement.scrollHeight, y = s ? E.innerWidth : E.innerHeight;
      } else
        m = s ? b.scrollLeft : b.scrollTop, g = s ? b.scrollWidth : b.scrollHeight, y = s ? b.offsetWidth : b.offsetHeight;
      const v = () => {
        e({
          scrollHeight: g,
          scrollTop: Math.max(m, 0),
          viewportHeight: y
        });
      };
      h.suppressFlushSync ? v() : ko.flushSync(v), l.current !== null && (m === l.current || m <= 0 || m === g - y) && (l.current = null, t(!0), c.current && (clearTimeout(c.current), c.current = null));
    },
    [e, t]
  );
  F.useEffect(() => {
    const h = o || a.current;
    return r(o || a.current), u({ suppressFlushSync: !0, target: h }), h.addEventListener("scroll", u, { passive: !0 }), () => {
      r(null), h.removeEventListener("scroll", u);
    };
  }, [a, u, n, r, o]);
  function f(h) {
    const g = a.current;
    if (!g || (s ? "offsetWidth" in g && g.offsetWidth === 0 : "offsetHeight" in g && g.offsetHeight === 0))
      return;
    const y = h.behavior === "smooth";
    let m, b, v;
    cc(g) ? (b = Math.max(
      Fr(g.document.documentElement, s ? "width" : "height"),
      s ? g.document.documentElement.scrollWidth : g.document.documentElement.scrollHeight
    ), m = s ? g.innerWidth : g.innerHeight, v = s ? window.scrollX : window.scrollY) : (b = g[s ? "scrollWidth" : "scrollHeight"], m = Fr(g, s ? "width" : "height"), v = g[s ? "scrollLeft" : "scrollTop"]);
    const E = b - m;
    if (h.top = Math.ceil(Math.max(Math.min(E, h.top), 0)), by(m, b) || h.top === v) {
      e({ scrollHeight: b, scrollTop: v, viewportHeight: m }), y && t(!0);
      return;
    }
    y ? (l.current = h.top, c.current && clearTimeout(c.current), c.current = setTimeout(() => {
      c.current = null, l.current = null, t(!0);
    }, 1e3)) : l.current = null, s && (h = { behavior: h.behavior, left: h.top }), g.scrollTo(h);
  }
  function d(h) {
    s && (h = { behavior: h.behavior, left: h.top }), a.current.scrollBy(h);
  }
  return { scrollByCallback: d, scrollerRef: a, scrollToCallback: f };
}
const uc = "-webkit-sticky", Fp = "sticky", ky = Sy(() => {
  if (typeof document > "u")
    return Fp;
  const e = document.createElement("div");
  return e.style.position = uc, e.style.position === uc ? uc : Fp;
});
function Sd(e) {
  return e;
}
const uR = /* @__PURE__ */ Ge(() => {
  const e = de((c) => `Item ${c}`), t = de(null), n = de((c) => `Group ${c}`), r = de({}), o = de(Sd), s = de("div"), a = de(ei), l = (c, u = null) => Yt(
    ce(
      r,
      he((f) => f[c]),
      ut()
    ),
    u
  );
  return {
    components: r,
    computeItemKey: o,
    context: t,
    EmptyPlaceholder: l("EmptyPlaceholder"),
    FooterComponent: l("Footer"),
    GroupComponent: l("Group", "div"),
    groupContent: n,
    HeaderComponent: l("Header"),
    HeaderFooterTag: s,
    ItemComponent: l("Item", "div"),
    itemContent: e,
    ListComponent: l("List", "div"),
    ScrollerComponent: l("Scroller", "div"),
    scrollerRef: a,
    ScrollSeekPlaceholder: l("ScrollSeekPlaceholder"),
    TopItemListComponent: l("TopItemList")
  };
}), dR = /* @__PURE__ */ Ge(
  ([e, t]) => ({ ...e, ...t }),
  dt(Ty, uR)
), fR = ({ height: e }) => /* @__PURE__ */ k("div", { style: { height: e } }), pR = { overflowAnchor: "none", position: ky(), zIndex: 1 }, Iy = { overflowAnchor: "none" }, mR = { ...Iy, display: "inline-block", height: "100%" }, jp = /* @__PURE__ */ F.memo(function({ showTopList: e = !1 }) {
  const t = Ne("listState"), n = On("sizeRanges"), r = Ne("useWindowScroll"), o = Ne("customScrollParent"), s = On("windowScrollContainerState"), a = On("scrollContainerState"), l = o || r ? s : a, c = Ne("itemContent"), u = Ne("context"), f = Ne("groupContent"), d = Ne("trackItemSizes"), h = Ne("itemSize"), g = Ne("log"), y = On("gap"), m = Ne("horizontalDirection"), { callbackRef: b } = $O(
    n,
    h,
    d,
    e ? ei : l,
    g,
    y,
    o,
    m,
    Ne("skipAnimationFrameInResizeObserver")
  ), [v, E] = F.useState(0);
  Td("deviation", (D) => {
    v !== D && E(D);
  });
  const S = Ne("EmptyPlaceholder"), w = Ne("ScrollSeekPlaceholder") || fR, x = Ne("ListComponent"), T = Ne("ItemComponent"), R = Ne("GroupComponent"), I = Ne("computeItemKey"), N = Ne("isSeeking"), p = Ne("groupIndices").length > 0, O = Ne("alignToBottom"), $ = Ne("initialItemFinalLocationReached"), A = e ? {} : {
    boxSizing: "border-box",
    ...m ? {
      display: "inline-block",
      height: "100%",
      marginLeft: v !== 0 ? v : O ? "auto" : 0,
      paddingLeft: t.offsetTop,
      paddingRight: t.offsetBottom,
      whiteSpace: "nowrap"
    } : {
      marginTop: v !== 0 ? v : O ? "auto" : 0,
      paddingBottom: t.offsetBottom,
      paddingTop: t.offsetTop
    },
    ...$ ? {} : { visibility: "hidden" }
  };
  return !e && t.totalCount === 0 && S ? /* @__PURE__ */ k(S, { ...zt(S, u) }) : /* @__PURE__ */ k(
    x,
    {
      ...zt(x, u),
      "data-testid": e ? "virtuoso-top-item-list" : "virtuoso-item-list",
      ref: b,
      style: A,
      children: (e ? t.topItems : t.items).map((D) => {
        const M = D.originalIndex, _ = I(M + t.firstItemIndex, D.data, u);
        return N ? /* @__PURE__ */ ro(
          w,
          {
            ...zt(w, u),
            height: D.size,
            index: D.index,
            key: _,
            type: D.type || "item",
            ...D.type === "group" ? {} : { groupIndex: D.groupIndex }
          }
        ) : D.type === "group" ? /* @__PURE__ */ ro(
          R,
          {
            ...zt(R, u),
            "data-index": M,
            "data-item-index": D.index,
            "data-known-size": D.size,
            key: _,
            style: pR
          },
          f(D.index, u)
        ) : /* @__PURE__ */ ro(
          T,
          {
            ...zt(T, u),
            ...bR(T, D.data),
            "data-index": M,
            "data-item-group-index": D.groupIndex,
            "data-item-index": D.index,
            "data-known-size": D.size,
            key: _,
            style: m ? mR : Iy
          },
          p ? c(D.index, D.groupIndex, D.data, u) : c(D.index, D.data, u)
        );
      })
    }
  );
}), hR = {
  height: "100%",
  outline: "none",
  overflowY: "auto",
  position: "relative",
  WebkitOverflowScrolling: "touch"
}, gR = {
  outline: "none",
  overflowX: "auto",
  position: "relative"
}, bl = (e) => ({
  height: "100%",
  position: "absolute",
  top: 0,
  width: "100%",
  ...e ? { display: "flex", flexDirection: "column" } : {}
}), yR = {
  position: ky(),
  top: 0,
  width: "100%",
  zIndex: 1
};
function zt(e, t) {
  if (typeof e != "string")
    return { context: t };
}
function bR(e, t) {
  return { item: typeof e == "string" ? void 0 : t };
}
const vR = /* @__PURE__ */ F.memo(function() {
  const e = Ne("HeaderComponent"), t = On("headerHeight"), n = Ne("HeaderFooterTag"), r = fo(
    F.useMemo(
      () => (s) => {
        t(Fr(s, "height"));
      },
      [t]
    ),
    !0,
    Ne("skipAnimationFrameInResizeObserver")
  ), o = Ne("context");
  return e ? /* @__PURE__ */ k(n, { ref: r, children: /* @__PURE__ */ k(e, { ...zt(e, o) }) }) : null;
}), xR = /* @__PURE__ */ F.memo(function() {
  const e = Ne("FooterComponent"), t = On("footerHeight"), n = Ne("HeaderFooterTag"), r = fo(
    F.useMemo(
      () => (s) => {
        t(Fr(s, "height"));
      },
      [t]
    ),
    !0,
    Ne("skipAnimationFrameInResizeObserver")
  ), o = Ne("context");
  return e ? /* @__PURE__ */ k(n, { ref: r, children: /* @__PURE__ */ k(e, { ...zt(e, o) }) }) : null;
});
function Py({ useEmitter: e, useEmitterValue: t, usePublisher: n }) {
  return F.memo(function({ children: r, style: o, ...s }) {
    const a = n("scrollContainerState"), l = t("ScrollerComponent"), c = n("smoothScrollTargetReached"), u = t("scrollerRef"), f = t("context"), d = t("horizontalDirection") || !1, { scrollByCallback: h, scrollerRef: g, scrollToCallback: y } = $y(
      a,
      c,
      l,
      u,
      void 0,
      d
    );
    return e("scrollTo", y), e("scrollBy", h), /* @__PURE__ */ k(
      l,
      {
        "data-testid": "virtuoso-scroller",
        "data-virtuoso-scroller": !0,
        ref: g,
        style: { ...d ? gR : hR, ...o },
        tabIndex: 0,
        ...s,
        ...zt(l, f),
        children: r
      }
    );
  });
}
function Ny({ useEmitter: e, useEmitterValue: t, usePublisher: n }) {
  return F.memo(function({ children: r, style: o, ...s }) {
    const a = n("windowScrollContainerState"), l = t("ScrollerComponent"), c = n("smoothScrollTargetReached"), u = t("totalListHeight"), f = t("deviation"), d = t("customScrollParent"), h = t("context"), g = F.useRef(null), y = t("scrollerRef"), { scrollByCallback: m, scrollerRef: b, scrollToCallback: v } = $y(
      a,
      c,
      l,
      y,
      d
    );
    return Ry(() => {
      var E;
      return b.current = d || ((E = g.current) == null ? void 0 : E.ownerDocument.defaultView), () => {
        b.current = null;
      };
    }, [b, d]), e("windowScrollTo", v), e("scrollBy", m), /* @__PURE__ */ k(
      l,
      {
        ref: g,
        "data-virtuoso-scroller": !0,
        style: { position: "relative", ...o, ...u !== 0 ? { height: u + f } : {} },
        ...s,
        ...zt(l, h),
        children: r
      }
    );
  });
}
const wR = ({ children: e }) => {
  const t = F.useContext(Cy), n = On("viewportHeight"), r = On("fixedItemHeight"), o = Ne("alignToBottom"), s = Ne("horizontalDirection"), a = F.useMemo(
    () => ry(n, (c) => Fr(c, s ? "width" : "height")),
    [n, s]
  ), l = fo(a, !0, Ne("skipAnimationFrameInResizeObserver"));
  return F.useEffect(() => {
    t && (n(t.viewportHeight), r(t.itemHeight));
  }, [t, n, r]), /* @__PURE__ */ k("div", { "data-viewport-type": "element", ref: l, style: bl(o), children: e });
}, SR = ({ children: e }) => {
  const t = F.useContext(Cy), n = On("windowViewportRect"), r = On("fixedItemHeight"), o = Ne("customScrollParent"), s = sy(
    n,
    o,
    Ne("skipAnimationFrameInResizeObserver")
  ), a = Ne("alignToBottom");
  return F.useEffect(() => {
    t && (r(t.itemHeight), n({ offsetTop: 0, visibleHeight: t.viewportHeight, visibleWidth: 100 }));
  }, [t, n, r]), /* @__PURE__ */ k("div", { "data-viewport-type": "window", ref: s, style: bl(a), children: e });
}, TR = ({ children: e }) => {
  const t = Ne("TopItemListComponent") || "div", n = Ne("headerHeight"), r = { ...yR, marginTop: `${n}px` }, o = Ne("context");
  return /* @__PURE__ */ k(t, { style: r, ...zt(t, o), children: e });
}, ER = /* @__PURE__ */ F.memo(function(e) {
  const t = Ne("useWindowScroll"), n = Ne("topItemsIndexes").length > 0, r = Ne("customScrollParent"), o = Ne("context"), s = r || t ? RR : OR, a = r || t ? SR : wR;
  return /* @__PURE__ */ Ce(s, { ...e, ...zt(s, o), children: [
    n && /* @__PURE__ */ k(TR, { children: /* @__PURE__ */ k(jp, { showTopList: !0 }) }),
    /* @__PURE__ */ Ce(a, { children: [
      /* @__PURE__ */ k(vR, {}),
      /* @__PURE__ */ k(jp, {}),
      /* @__PURE__ */ k(xR, {})
    ] })
  ] });
}), {
  Component: CR,
  useEmitter: Td,
  useEmitterValue: Ne,
  usePublisher: On
} = /* @__PURE__ */ Ey(
  dR,
  {
    events: {
      atBottomStateChange: "atBottomStateChange",
      atTopStateChange: "atTopStateChange",
      endReached: "endReached",
      groupIndices: "groupIndices",
      isScrolling: "isScrolling",
      itemsRendered: "itemsRendered",
      rangeChanged: "rangeChanged",
      startReached: "startReached",
      totalListHeightChanged: "totalListHeightChanged"
    },
    methods: {
      autoscrollToBottom: "autoscrollToBottom",
      getState: "getState",
      scrollBy: "scrollBy",
      scrollIntoView: "scrollIntoView",
      scrollTo: "scrollTo",
      scrollToIndex: "scrollToIndex"
    },
    optional: {
      alignToBottom: "alignToBottom",
      atBottomThreshold: "atBottomThreshold",
      atTopThreshold: "atTopThreshold",
      components: "components",
      computeItemKey: "computeItemKey",
      context: "context",
      customScrollParent: "customScrollParent",
      data: "data",
      defaultItemHeight: "defaultItemHeight",
      firstItemIndex: "firstItemIndex",
      fixedItemHeight: "fixedItemHeight",
      followOutput: "followOutput",
      groupContent: "groupContent",
      groupCounts: "groupCounts",
      headerFooterTag: "HeaderFooterTag",
      horizontalDirection: "horizontalDirection",
      increaseViewportBy: "increaseViewportBy",
      initialItemCount: "initialItemCount",
      initialScrollTop: "initialScrollTop",
      initialTopMostItemIndex: "initialTopMostItemIndex",
      itemContent: "itemContent",
      itemSize: "itemSize",
      logLevel: "logLevel",
      overscan: "overscan",
      restoreStateFrom: "restoreStateFrom",
      scrollerRef: "scrollerRef",
      scrollSeekConfiguration: "scrollSeekConfiguration",
      skipAnimationFrameInResizeObserver: "skipAnimationFrameInResizeObserver",
      topItemCount: "topItemCount",
      totalCount: "totalCount",
      useWindowScroll: "useWindowScroll"
    },
    required: {}
  },
  ER
), OR = /* @__PURE__ */ Py({ useEmitter: Td, useEmitterValue: Ne, usePublisher: On }), RR = /* @__PURE__ */ Ny({ useEmitter: Td, useEmitterValue: Ne, usePublisher: On }), $R = CR, kR = /* @__PURE__ */ Ge(() => {
  const e = de((c) => /* @__PURE__ */ Ce("td", { children: [
    "Item $",
    c
  ] })), t = de(null), n = de(null), r = de(null), o = de({}), s = de(Sd), a = de(ei), l = (c, u = null) => Yt(
    ce(
      o,
      he((f) => f[c]),
      ut()
    ),
    u
  );
  return {
    components: o,
    computeItemKey: s,
    context: t,
    EmptyPlaceholder: l("EmptyPlaceholder"),
    FillerRow: l("FillerRow"),
    fixedFooterContent: r,
    fixedHeaderContent: n,
    itemContent: e,
    ScrollerComponent: l("Scroller", "div"),
    scrollerRef: a,
    ScrollSeekPlaceholder: l("ScrollSeekPlaceholder"),
    TableBodyComponent: l("TableBody", "tbody"),
    TableComponent: l("Table", "table"),
    TableFooterComponent: l("TableFoot", "tfoot"),
    TableHeadComponent: l("TableHead", "thead"),
    TableRowComponent: l("TableRow", "tr")
  };
});
dt(Ty, kR);
const Lp = {
  bottom: 0,
  itemHeight: 0,
  items: [],
  itemWidth: 0,
  offsetBottom: 0,
  offsetTop: 0,
  top: 0
}, IR = {
  bottom: 0,
  itemHeight: 0,
  items: [{ index: 0 }],
  itemWidth: 0,
  offsetBottom: 0,
  offsetTop: 0,
  top: 0
}, { ceil: Vp, floor: Oa, max: Pi, min: dc, round: zp } = Math;
function Wp(e, t, n) {
  return Array.from({ length: t - e + 1 }).map((r, o) => ({ data: n === null ? null : n[o + e], index: o + e }));
}
function PR(e) {
  return {
    ...IR,
    items: e
  };
}
function zs(e, t) {
  return e && e.width === t.width && e.height === t.height;
}
function NR(e, t) {
  return e && e.column === t.column && e.row === t.row;
}
const AR = /* @__PURE__ */ Ge(
  ([
    { increaseViewportBy: e, listBoundary: t, overscan: n, visibleRange: r },
    { footerHeight: o, headerHeight: s, scrollBy: a, scrollContainerState: l, scrollTo: c, scrollTop: u, smoothScrollTargetReached: f, viewportHeight: d },
    h,
    g,
    { didMount: y, propsReady: m },
    { customScrollParent: b, useWindowScroll: v, windowScrollContainerState: E, windowScrollTo: S, windowViewportRect: w },
    x
  ]) => {
    const T = de(0), R = de(0), I = de(Lp), N = de({ height: 0, width: 0 }), p = de({ height: 0, width: 0 }), O = ze(), $ = ze(), A = de(0), D = de(null), M = de({ column: 0, row: 0 }), _ = ze(), L = ze(), U = de(!1), z = de(0), j = de(!0), V = de(!1), K = de(!1);
    Ze(
      ce(
        y,
        je(z),
        ke(([q, Q]) => !!Q)
      ),
      () => {
        De(j, !1);
      }
    ), Ze(
      ce(
        Mt(y, j, p, N, z, V),
        ke(([q, Q, G, ne, , B]) => q && !Q && G.height !== 0 && ne.height !== 0 && !B)
      ),
      ([, , , , q]) => {
        De(V, !0), bd(1, () => {
          De(O, q);
        }), cr(ce(u), () => {
          De(t, [0, 0]), De(j, !0);
        });
      }
    ), Ee(
      ce(
        L,
        ke((q) => q != null && q.scrollTop > 0),
        Xn(0)
      ),
      R
    ), Ze(
      ce(
        y,
        je(L),
        ke(([, q]) => q != null)
      ),
      ([, q]) => {
        q && (De(N, q.viewport), De(p, q.item), De(M, q.gap), q.scrollTop > 0 && (De(U, !0), cr(ce(u, qo(1)), (Q) => {
          De(U, !1);
        }), De(c, { top: q.scrollTop })));
      }
    ), Ee(
      ce(
        N,
        he(({ height: q }) => q)
      ),
      d
    ), Ee(
      ce(
        Mt(
          Ie(N, zs),
          Ie(p, zs),
          Ie(M, (q, Q) => q && q.column === Q.column && q.row === Q.row),
          Ie(u)
        ),
        he(([q, Q, G, ne]) => ({
          gap: G,
          item: Q,
          scrollTop: ne,
          viewport: q
        }))
      ),
      _
    ), Ee(
      ce(
        Mt(
          Ie(T),
          r,
          Ie(M, NR),
          Ie(p, zs),
          Ie(N, zs),
          Ie(D),
          Ie(R),
          Ie(U),
          Ie(j),
          Ie(z)
        ),
        ke(([, , , , , , , q]) => !q),
        he(
          ([
            q,
            [Q, G],
            ne,
            B,
            pe,
            ae,
            me,
            ,
            Me,
            Re
          ]) => {
            const { column: Oe, row: we } = ne, { height: Pe, width: Se } = B, { width: P } = pe;
            if (me === 0 && (q === 0 || P === 0))
              return Lp;
            if (Se === 0) {
              const oe = vd(Re, q), Le = oe + Math.max(me - 1, 0);
              return PR(Wp(oe, Le, ae));
            }
            const W = Ay(P, Se, Oe);
            let H, le;
            Me ? Q === 0 && G === 0 && me > 0 ? (H = 0, le = me - 1) : (H = W * Oa((Q + we) / (Pe + we)), le = W * Vp((G + we) / (Pe + we)) - 1, le = dc(q - 1, Pi(le, W - 1)), H = dc(le, Pi(0, H))) : (H = 0, le = -1);
            const se = Wp(H, le, ae), { bottom: ie, top: ue } = Up(pe, ne, B, se), be = Vp(q / W), xe = be * Pe + (be - 1) * we - ie;
            return { bottom: ie, itemHeight: Pe, items: se, itemWidth: Se, offsetBottom: xe, offsetTop: ue, top: ue };
          }
        )
      ),
      I
    ), Ee(
      ce(
        D,
        ke((q) => q !== null),
        he((q) => q.length)
      ),
      T
    ), Ee(
      ce(
        Mt(N, p, I, M),
        ke(([q, Q, { items: G }]) => G.length > 0 && Q.height !== 0 && q.height !== 0),
        he(([q, Q, { items: G }, ne]) => {
          const { bottom: B, top: pe } = Up(q, ne, Q, G);
          return [pe, B];
        }),
        ut(Xi)
      ),
      t
    );
    const Y = de(!1);
    Ee(
      ce(
        u,
        je(Y),
        he(([q, Q]) => Q || q !== 0)
      ),
      Y
    );
    const te = gn(
      ce(
        Mt(I, T),
        ke(([{ items: q }]) => q.length > 0),
        je(Y),
        ke(([[q, Q], G]) => {
          const ne = q.items[q.items.length - 1].index === Q - 1;
          return (G || q.bottom > 0 && q.itemHeight > 0 && q.offsetBottom === 0 && q.items.length === Q) && ne;
        }),
        he(([[, q]]) => q - 1),
        ut()
      )
    ), X = gn(
      ce(
        Ie(I),
        ke(({ items: q }) => q.length > 0 && q[0].index === 0),
        Xn(0),
        ut()
      )
    ), ee = gn(
      ce(
        Ie(I),
        je(U),
        ke(([{ items: q }, Q]) => q.length > 0 && !Q),
        he(([{ items: q }]) => ({
          endIndex: q[q.length - 1].index,
          startIndex: q[0].index
        })),
        ut(fy),
        Mr(0)
      )
    );
    Ee(ee, g.scrollSeekRangeChanged), Ee(
      ce(
        O,
        je(N, p, T, M),
        he(([q, Q, G, ne, B]) => {
          const pe = yy(q), { align: ae, behavior: me, offset: Me } = pe;
          let Re = pe.index;
          Re === "LAST" && (Re = ne - 1), Re = Pi(0, Re, dc(ne - 1, Re));
          let Oe = ru(Q, B, G, Re);
          return ae === "end" ? Oe = zp(Oe - Q.height + G.height) : ae === "center" && (Oe = zp(Oe - Q.height / 2 + G.height / 2)), Me && (Oe += Me), { behavior: me, top: Oe };
        })
      ),
      c
    );
    const re = Yt(
      ce(
        I,
        he((q) => q.offsetBottom + q.bottom)
      ),
      0
    );
    return Ee(
      ce(
        w,
        he((q) => ({ height: q.visibleHeight, width: q.visibleWidth }))
      ),
      N
    ), {
      customScrollParent: b,
      // input
      data: D,
      deviation: A,
      footerHeight: o,
      gap: M,
      headerHeight: s,
      increaseViewportBy: e,
      initialItemCount: R,
      itemDimensions: p,
      overscan: n,
      restoreStateFrom: L,
      scrollBy: a,
      scrollContainerState: l,
      scrollHeight: $,
      scrollTo: c,
      scrollToIndex: O,
      scrollTop: u,
      smoothScrollTargetReached: f,
      totalCount: T,
      useWindowScroll: v,
      viewportDimensions: N,
      windowScrollContainerState: E,
      windowScrollTo: S,
      windowViewportRect: w,
      ...g,
      // output
      gridState: I,
      horizontalDirection: K,
      initialTopMostItemIndex: z,
      totalListHeight: re,
      ...h,
      endReached: te,
      propsReady: m,
      rangeChanged: ee,
      startReached: X,
      stateChanged: _,
      stateRestoreInProgress: U,
      ...x
    };
  },
  dt(xd, tn, hs, wy, qr, wd, Hr)
);
function Ay(e, t, n) {
  return Pi(1, Oa((e + n) / (Oa(t) + n)));
}
function Up(e, t, n, r) {
  const { height: o } = n;
  if (o === void 0 || r.length === 0)
    return { bottom: 0, top: 0 };
  const s = ru(e, t, n, r[0].index);
  return { bottom: ru(e, t, n, r[r.length - 1].index) + o, top: s };
}
function ru(e, t, n, r) {
  const o = Ay(e.width, n.width, t.column), s = Oa(r / o), a = s * n.height + Pi(0, s - 1) * t.row;
  return a > 0 ? a + t.row : a;
}
const MR = /* @__PURE__ */ Ge(() => {
  const e = de((d) => `Item ${d}`), t = de({}), n = de(null), r = de("virtuoso-grid-item"), o = de("virtuoso-grid-list"), s = de(Sd), a = de("div"), l = de(ei), c = (d, h = null) => Yt(
    ce(
      t,
      he((g) => g[d]),
      ut()
    ),
    h
  ), u = de(!1), f = de(!1);
  return Ee(Ie(f), u), {
    components: t,
    computeItemKey: s,
    context: n,
    FooterComponent: c("Footer"),
    HeaderComponent: c("Header"),
    headerFooterTag: a,
    itemClassName: r,
    ItemComponent: c("Item", "div"),
    itemContent: e,
    listClassName: o,
    ListComponent: c("List", "div"),
    readyStateChanged: u,
    reportReadyState: f,
    ScrollerComponent: c("Scroller", "div"),
    scrollerRef: l,
    ScrollSeekPlaceholder: c("ScrollSeekPlaceholder", "div")
  };
}), _R = /* @__PURE__ */ Ge(
  ([e, t]) => ({ ...e, ...t }),
  dt(AR, MR)
), DR = /* @__PURE__ */ F.memo(function() {
  const e = mt("gridState"), t = mt("listClassName"), n = mt("itemClassName"), r = mt("itemContent"), o = mt("computeItemKey"), s = mt("isSeeking"), a = Rn("scrollHeight"), l = mt("ItemComponent"), c = mt("ListComponent"), u = mt("ScrollSeekPlaceholder"), f = mt("context"), d = Rn("itemDimensions"), h = Rn("gap"), g = mt("log"), y = mt("stateRestoreInProgress"), m = Rn("reportReadyState"), b = fo(
    F.useMemo(
      () => (v) => {
        const E = v.parentElement.parentElement.scrollHeight;
        a(E);
        const S = v.firstChild;
        if (S) {
          const { height: w, width: x } = S.getBoundingClientRect();
          d({ height: w, width: x });
        }
        h({
          column: Hp("column-gap", getComputedStyle(v).columnGap, g),
          row: Hp("row-gap", getComputedStyle(v).rowGap, g)
        });
      },
      [a, d, h, g]
    ),
    !0,
    !1
  );
  return Ry(() => {
    e.itemHeight > 0 && e.itemWidth > 0 && m(!0);
  }, [e]), y ? null : /* @__PURE__ */ k(
    c,
    {
      className: t,
      ref: b,
      ...zt(c, f),
      "data-testid": "virtuoso-item-list",
      style: { paddingBottom: e.offsetBottom, paddingTop: e.offsetTop },
      children: e.items.map((v) => {
        const E = o(v.index, v.data, f);
        return s ? /* @__PURE__ */ k(
          u,
          {
            ...zt(u, f),
            height: e.itemHeight,
            index: v.index,
            width: e.itemWidth
          },
          E
        ) : /* @__PURE__ */ ro(
          l,
          {
            ...zt(l, f),
            className: n,
            "data-index": v.index,
            key: E
          },
          r(v.index, v.data, f)
        );
      })
    }
  );
}), BR = F.memo(function() {
  const e = mt("HeaderComponent"), t = Rn("headerHeight"), n = mt("headerFooterTag"), r = fo(
    F.useMemo(
      () => (s) => {
        t(Fr(s, "height"));
      },
      [t]
    ),
    !0,
    !1
  ), o = mt("context");
  return e ? /* @__PURE__ */ k(n, { ref: r, children: /* @__PURE__ */ k(e, { ...zt(e, o) }) }) : null;
}), FR = F.memo(function() {
  const e = mt("FooterComponent"), t = Rn("footerHeight"), n = mt("headerFooterTag"), r = fo(
    F.useMemo(
      () => (s) => {
        t(Fr(s, "height"));
      },
      [t]
    ),
    !0,
    !1
  ), o = mt("context");
  return e ? /* @__PURE__ */ k(n, { ref: r, children: /* @__PURE__ */ k(e, { ...zt(e, o) }) }) : null;
}), jR = ({ children: e }) => {
  const t = F.useContext(Oy), n = Rn("itemDimensions"), r = Rn("viewportDimensions"), o = fo(
    F.useMemo(
      () => (s) => {
        r(s.getBoundingClientRect());
      },
      [r]
    ),
    !0,
    !1
  );
  return F.useEffect(() => {
    t && (r({ height: t.viewportHeight, width: t.viewportWidth }), n({ height: t.itemHeight, width: t.itemWidth }));
  }, [t, r, n]), /* @__PURE__ */ k("div", { ref: o, style: bl(!1), children: e });
}, LR = ({ children: e }) => {
  const t = F.useContext(Oy), n = Rn("windowViewportRect"), r = Rn("itemDimensions"), o = mt("customScrollParent"), s = sy(n, o, !1);
  return F.useEffect(() => {
    t && (r({ height: t.itemHeight, width: t.itemWidth }), n({ offsetTop: 0, visibleHeight: t.viewportHeight, visibleWidth: t.viewportWidth }));
  }, [t, n, r]), /* @__PURE__ */ k("div", { ref: s, style: bl(!1), children: e });
}, VR = /* @__PURE__ */ F.memo(function({ ...e }) {
  const t = mt("useWindowScroll"), n = mt("customScrollParent"), r = n || t ? UR : WR, o = n || t ? LR : jR, s = mt("context");
  return /* @__PURE__ */ k(r, { ...e, ...zt(r, s), children: /* @__PURE__ */ Ce(o, { children: [
    /* @__PURE__ */ k(BR, {}),
    /* @__PURE__ */ k(DR, {}),
    /* @__PURE__ */ k(FR, {})
  ] }) });
}), {
  Component: zR,
  useEmitter: My,
  useEmitterValue: mt,
  usePublisher: Rn
} = /* @__PURE__ */ Ey(
  _R,
  {
    events: {
      atBottomStateChange: "atBottomStateChange",
      atTopStateChange: "atTopStateChange",
      endReached: "endReached",
      isScrolling: "isScrolling",
      rangeChanged: "rangeChanged",
      readyStateChanged: "readyStateChanged",
      startReached: "startReached",
      stateChanged: "stateChanged"
    },
    methods: {
      scrollBy: "scrollBy",
      scrollTo: "scrollTo",
      scrollToIndex: "scrollToIndex"
    },
    optional: {
      components: "components",
      computeItemKey: "computeItemKey",
      context: "context",
      customScrollParent: "customScrollParent",
      data: "data",
      headerFooterTag: "headerFooterTag",
      increaseViewportBy: "increaseViewportBy",
      initialItemCount: "initialItemCount",
      initialTopMostItemIndex: "initialTopMostItemIndex",
      itemClassName: "itemClassName",
      itemContent: "itemContent",
      listClassName: "listClassName",
      logLevel: "logLevel",
      overscan: "overscan",
      restoreStateFrom: "restoreStateFrom",
      scrollerRef: "scrollerRef",
      scrollSeekConfiguration: "scrollSeekConfiguration",
      totalCount: "totalCount",
      useWindowScroll: "useWindowScroll"
    }
  },
  VR
), WR = /* @__PURE__ */ Py({ useEmitter: My, useEmitterValue: mt, usePublisher: Rn }), UR = /* @__PURE__ */ Ny({ useEmitter: My, useEmitterValue: mt, usePublisher: Rn });
function Hp(e, t, n) {
  return t !== "normal" && !(t != null && t.endsWith("px")) && n(`${e} was not resolved to pixel value correctly`, t, yn.WARN), t === "normal" ? 0 : parseInt(t ?? "0", 10);
}
const HR = zR, Ra = _e(({ height: e, width: t, isVirtualized: n, items: r, renderItem: o, sx: s }) => n ? /* @__PURE__ */ k(Xt, { id: "VenomousUI-Menu", sx: { height: e || "100%", width: t || "100%", ...s }, children: /* @__PURE__ */ k(
  $R,
  {
    style: { height: "100%", width: "100%" },
    totalCount: r == null ? void 0 : r.length,
    data: r,
    itemContent: (a, l) => o ? o(l, a) : l.label
  }
) }) : /* @__PURE__ */ k(
  Xt,
  {
    id: "VenomousUI-Menu",
    gap: 1,
    sx: {
      height: e || "100%",
      width: t || "100%",
      overflowY: "scroll",
      overflowX: "hidden",
      ...s,
      "& > #VenomousUI-MenuItem": {
        width: "100% !important"
      }
      // '& #VenomousUI-MenuItem': { mb: '4px' },
      // '& #VenomousUI-MenuItem:last-child': { mb: 0 },
    },
    children: r == null ? void 0 : r.map((a, l) => /* @__PURE__ */ k(Sv, { children: o ? o(a, l) : a.label }, a.label))
  }
));
Ra.displayName = "Menu";
const $a = _e(
  ({
    icon: e = "",
    label: t,
    clickable: n,
    disabled: r,
    onClick: o,
    onMouseEnter: s,
    onMouseLeave: a,
    isActive: l,
    sx: c
  }) => n ? /* @__PURE__ */ k(
    lr,
    {
      id: "VenomousUI-MenuItem",
      isGhost: !0,
      text: /* @__PURE__ */ k(cn, { text: t, ellipsis: !0 }),
      icon: e,
      iconWidth: 28,
      iconPosition: "start",
      onClick: o,
      onMouseEnter: s,
      onMouseLeave: a,
      disabled: r,
      color: l ? "primary" : "auto",
      sx: {
        py: "8px",
        px: "16px",
        width: "100%",
        justifyContent: "flex-start",
        transition: "background-color 0.2s ease; color 0.2s ease",
        backgroundColor: l ? "divider" : "transparent",
        "&:hover": { backgroundColor: "divider" },
        ...c
      }
    }
  ) : /* @__PURE__ */ Ce(Xt, { row: !0, py: "8px", px: "16px", sx: { width: "100%", ...c }, id: "VenomousUI-MenuItem", children: [
    /* @__PURE__ */ k(Tr, { icon: e, width: 28, color: l ? "primary" : "auto" }),
    /* @__PURE__ */ k(cn, { text: t, ellipsis: !0, flex: 1, textColor: l ? "primary" : "auto" })
  ] })
);
$a.displayName = "MenuItem";
function qR() {
  const [e, t] = _r(null), n = !!e, r = $n((s) => {
    const a = s.currentTarget;
    t(a);
  }, []), o = $n(() => {
    var s;
    (s = window.getSelection()) != null && s.toString() || t(null);
  }, []);
  return {
    anchorEl: e,
    isOpen: n,
    openPopover: r,
    closePopover: o
  };
}
const _y = _e(({ children: e, renderPopoverHandler: t, sx: n }) => {
  const { paperCommonStyles: r } = fs(), { anchorEl: o, isOpen: s, openPopover: a, closePopover: l } = qR();
  return /* @__PURE__ */ Ce(Xm, { children: [
    t({ anchorEl: o, isOpen: s, openPopover: a, closePopover: l }),
    /* @__PURE__ */ k(
      Fg,
      {
        open: s,
        anchorEl: o,
        onClose: l,
        anchorOrigin: { vertical: "bottom", horizontal: "center" },
        transformOrigin: { vertical: "top", horizontal: "center" },
        slotProps: {
          paper: {
            elevation: 3,
            square: !0,
            sx: {
              ...r,
              border: 1,
              borderColor: "divider",
              ...n
            }
          }
        },
        children: /* @__PURE__ */ k(Uo, { in: s, children: /* @__PURE__ */ k("div", { children: e }) })
      }
    )
  ] });
});
_y.displayName = "Popover";
const GR = _e(
  ({ icon: e = "solar:menu-dots-line-duotone", menuItems: t }) => /* @__PURE__ */ k(
    _y,
    {
      renderPopoverHandler: ({ isOpen: n, openPopover: r }) => /* @__PURE__ */ k(
        lr,
        {
          isCircle: !0,
          isGhost: !0,
          color: "auto",
          icon: e,
          iconWidth: 20,
          disabled: n,
          onClick: r
        }
      ),
      children: /* @__PURE__ */ k(Ra, { items: t, renderItem: (n) => /* @__PURE__ */ k($a, { ...n, clickable: !0 }) })
    }
  )
);
GR.displayName = "ExhibitCardActionButton";
const YR = _e(({ children: e, maxWidth: t = "lg", ...n }) => /* @__PURE__ */ k(
  $g,
  {
    id: "VenomousUI-Container",
    disableGutters: !0,
    maxWidth: t === "fullwidth" ? !1 : t,
    ...n,
    children: e
  }
));
YR.displayName = "Container";
const Dy = _e(
  ({ children: e, isOpen: t, closeDrawer: n, width: r, position: o = "right" }) => {
    const { paperCommonStyles: s } = fs();
    return /* @__PURE__ */ k(
      Bg,
      {
        id: "VenomousUI-Drawer",
        open: t,
        onClose: n,
        anchor: o,
        keepMounted: !0,
        slotProps: {
          paper: {
            sx: {
              ...s,
              ...KR(o),
              width: r,
              py: "8px",
              px: "16px"
            }
          }
        },
        children: /* @__PURE__ */ k("div", { style: { width: "100%" }, children: e })
      }
    );
  }
);
Dy.displayName = "Drawer";
function KR(e) {
  switch (e) {
    case "right":
      return { borderTopRightRadius: "0px !important", borderBottomRightRadius: "0px !important" };
    case "top":
      return { borderTopLeftRadius: "0px !important", borderTopRightRadius: "0px !important" };
    case "bottom":
      return {
        borderBottomLeftRadius: "0px !important",
        borderBottomRightRadius: "0px !important"
      };
    case "left":
    default:
      return { borderTopLeftRadius: "0px !important", borderBottomLeftRadius: "0px !important" };
  }
}
function XR() {
  const [e, t] = _r(!1), n = $n(() => {
    t(!0);
  }, []), r = $n(() => {
    t(!1);
  }, []), o = $n(() => {
    t((s) => !s);
  }, []);
  return {
    isOpen: e,
    setIsOpen: t,
    openDrawer: n,
    closeDrawer: r,
    toggleDrawer: o
  };
}
const By = _e(({ height: e = 50, title: t, closeDrawer: n }) => {
  const { paperCommonStyles: r } = fs();
  return /* @__PURE__ */ Ce(
    Xt,
    {
      id: "VenomousUI-DrawerHeader",
      row: !0,
      sx: {
        ...r,
        borderRadius: 0,
        height: e,
        width: "100%",
        position: "sticky",
        top: 0,
        left: 0,
        justifyContent: "space-between",
        transform: "translateY(-8px)"
      },
      children: [
        n && /* @__PURE__ */ k(
          lr,
          {
            isCircle: !0,
            isGhost: !0,
            icon: "solar:close-circle-line-duotone",
            iconWidth: 24,
            color: "auto",
            onClick: n,
            sx: { width: 24, mr: "8px", ml: "-8px" }
          }
        ),
        /* @__PURE__ */ k(cn, { text: t, isTitle: !0, ellipsis: !0 })
      ]
    }
  );
});
By.displayName = "DrawerHeader";
const Go = _e(
  ({ label: e, elementId: t, tooltip: n, isDisabled: r, isError: o, isRequired: s }) => {
    const { textCommonStyles: a } = fl({
      isTitle: !1,
      isLabel: !0,
      textColor: r ? "disabled" : o ? "error" : "auto"
    });
    return /* @__PURE__ */ Ce(
      Sr,
      {
        id: "VenomousUI-Label",
        component: "label",
        htmlFor: t,
        sx: {
          ...a,
          cursor: r ? "not-allowed" : "pointer",
          display: "flex",
          alignItems: "center"
        },
        children: [
          /* @__PURE__ */ k(
            Sr,
            {
              component: "i",
              sx: {
                width: "14px",
                marginLeft: "-14px",
                fontSize: "1.5rem",
                transform: "translateY(0.25rem)",
                opacity: s ? 1 : 0,
                color: "error.main"
              },
              children: "*"
            }
          ),
          e,
          n && /* @__PURE__ */ k(ul, { title: n, arrow: !0, placement: "top", children: /* @__PURE__ */ k(
            Tr,
            {
              icon: "solar:info-circle-bold",
              width: 16,
              color: o ? "error" : "primary",
              ml: "4px"
            }
          ) })
        ]
      }
    );
  }
);
Go.displayName = "Label";
const vl = _e(
  ({ startLabel: e, endLabel: t, labelsDirection: n = "row", renderElement: r, isDisabled: o, isError: s }) => {
    const a = Qm();
    return /* @__PURE__ */ Ce(Xt, { id: "VenomousUI-Labels", gap: 0, row: n === "row", children: [
      e && /* @__PURE__ */ k(Go, { label: e, elementId: a, isDisabled: o, isError: s }),
      r(a),
      t && /* @__PURE__ */ k(Go, { label: t, elementId: a, isDisabled: o, isError: s })
    ] });
  }
);
vl.displayName = "Labels";
const Fy = _e(
  ({ value: e, onChange: t, isDisabled: n, isError: r, label: o, labelDirection: s = "end" }) => {
    const a = $n(
      (l) => /* @__PURE__ */ k(
        Rg,
        {
          id: l,
          checked: e,
          onChange: (c) => t(c.target.checked),
          disabled: n,
          icon: /* @__PURE__ */ k(QR, { isDisabled: n, isError: r }),
          checkedIcon: /* @__PURE__ */ k(JR, { isDisabled: n, isError: r }),
          sx: {
            "& .MuiSwitch-track": { transition: "background-color 0s" },
            "& svg.MuiSvgIcon-root": { transform: "translate(-1px, 0px)" }
          }
        }
      ),
      [e, t, n, r]
    );
    return o ? /* @__PURE__ */ k(
      vl,
      {
        labelsDirection: "row",
        startLabel: s === "start" ? o : "",
        endLabel: s === "end" ? o : "",
        isDisabled: n,
        isError: r,
        renderElement: a
      }
    ) : a();
  }
);
Fy.displayName = "Checkbox";
const QR = _e(
  ({ isDisabled: e, isError: t }) => /* @__PURE__ */ k(
    Fo,
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 20 20",
      sx: {
        color: (n) => t ? n.palette.error.main : e ? n.palette.action.disabled : "auto"
      },
      children: /* @__PURE__ */ k(
        "path",
        {
          fill: "currentColor",
          d: "M3 6a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3zm3-2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"
        }
      )
    }
  )
), JR = _e(
  ({ isDisabled: e, isError: t }) => /* @__PURE__ */ k(
    Fo,
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "32",
      height: "32",
      viewBox: "0 0 24 24",
      sx: {
        color: (n) => t ? n.palette.error.main : e ? n.palette.action.disabled : "auto"
      },
      children: /* @__PURE__ */ k(
        "path",
        {
          fill: "currentColor",
          d: "M6.25 3A3.25 3.25 0 0 0 3 6.25v11.5A3.25 3.25 0 0 0 6.25 21h11.5A3.25 3.25 0 0 0 21 17.75V6.25A3.25 3.25 0 0 0 17.75 3zm11.03 6.28l-6.754 6.747a.75.75 0 0 1-1.06 0L6.72 13.28a.75.75 0 0 1 1.06-1.06l2.217 2.216l6.223-6.217a.75.75 0 1 1 1.06 1.062"
        }
      )
    }
  )
);
function ZR({
  isDisabled: e,
  isError: t
}) {
  return {
    inputCommonStyle: or(
      () => ({
        borderRadius: "8px",
        minWidth: "200px",
        "& input": {
          cursor: e ? "not-allowed" : "text",
          color: (r) => e ? "disabled" : t ? r.palette.error.main : "inherit"
        }
      }),
      [e, t]
    )
  };
}
const Ed = _e(
  ({
    label: e = "",
    tooltip: t,
    fullWidth: n = !1,
    value: r,
    onChange: o,
    isRequired: s,
    isDisabled: a,
    isError: l,
    errorMessage: c = "",
    sx: u,
    ...f
  }) => {
    const d = Qm(), { inputCommonStyle: h } = ZR({
      isDisabled: a,
      isError: l
    }), { textCommonStyles: g } = fl({
      isTitle: !1,
      isLabel: !0,
      textColor: a ? "disabled" : l ? "error" : "auto"
    });
    return /* @__PURE__ */ Ce(Xt, { gap: 0, width: n ? "100%" : "auto", children: [
      e && /* @__PURE__ */ k(
        Go,
        {
          label: e,
          elementId: d,
          tooltip: t,
          isRequired: s,
          isDisabled: a,
          isError: l
        }
      ),
      /* @__PURE__ */ k(
        ad,
        {
          id: d,
          autoComplete: "off",
          fullWidth: !0,
          size: "small",
          error: l,
          disabled: a,
          value: r,
          onChange: (y) => o(y.target.value),
          sx: { ...h, ...u },
          ...f
        }
      ),
      l && /* @__PURE__ */ k(
        cn,
        {
          text: l ? c : "",
          isLabel: !0,
          sx: { ...g, minHeight: "24px" }
        }
      )
    ] });
  }
);
Ed.displayName = "Input";
function ao(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
const xl = "$$material";
function ka(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return t.forEach((r) => n.searchParams.append("args[]", r)), `Minified MUI error #${e}; visit ${n} for the full message.`;
}
function e$(e) {
  return e == null || Object.keys(e).length === 0;
}
function jy(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e;
  return /* @__PURE__ */ k(fh, {
    styles: typeof t == "function" ? (o) => t(e$(o) ? n : o) : t
  });
}
process.env.NODE_ENV !== "production" && (jy.propTypes = {
  defaultTheme: i.object,
  styles: i.oneOfType([i.array, i.string, i.object, i.func])
});
/**
 * @mui/styled-engine v7.0.2
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function Ly(e, t) {
  const n = da(e, t);
  return process.env.NODE_ENV !== "production" ? (...r) => {
    const o = typeof e == "string" ? `"${e}"` : "component";
    return r.length === 0 ? console.error([`MUI: Seems like you called \`styled(${o})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : r.some((s) => s === void 0) && console.error(`MUI: the styled(${o})(...args) API requires all its args to be defined.`), n(...r);
  } : n;
}
function t$(e, t) {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
}
const qp = [];
function Gp(e) {
  return qp[0] = e, Xo(qp);
}
function Pr(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function Vy(e) {
  if (/* @__PURE__ */ C.isValidElement(e) || bn.isValidElementType(e) || !Pr(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = Vy(e[n]);
  }), t;
}
function io(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return Pr(e) && Pr(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ C.isValidElement(t[o]) || bn.isValidElementType(t[o]) ? r[o] = t[o] : Pr(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && Pr(e[o]) ? r[o] = io(e[o], t[o], n) : n.clone ? r[o] = Pr(t[o]) ? Vy(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
const n$ = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, r) => n.val - r.val), t.reduce((n, r) => ({
    ...n,
    [r.key]: r.val
  }), {});
};
function r$(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: r = 5,
    ...o
  } = e, s = n$(t), a = Object.keys(s);
  function l(h) {
    return `@media (min-width:${typeof t[h] == "number" ? t[h] : h}${n})`;
  }
  function c(h) {
    return `@media (max-width:${(typeof t[h] == "number" ? t[h] : h) - r / 100}${n})`;
  }
  function u(h, g) {
    const y = a.indexOf(g);
    return `@media (min-width:${typeof t[h] == "number" ? t[h] : h}${n}) and (max-width:${(y !== -1 && typeof t[a[y]] == "number" ? t[a[y]] : g) - r / 100}${n})`;
  }
  function f(h) {
    return a.indexOf(h) + 1 < a.length ? u(h, a[a.indexOf(h) + 1]) : l(h);
  }
  function d(h) {
    const g = a.indexOf(h);
    return g === 0 ? l(a[1]) : g === a.length - 1 ? c(a[g]) : u(h, a[a.indexOf(h) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: a,
    values: s,
    up: l,
    down: c,
    between: u,
    only: f,
    not: d,
    unit: n,
    ...o
  };
}
function o$(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((r) => r.startsWith("@container")).sort((r, o) => {
    var a, l;
    const s = /min-width:\s*([0-9.]+)/;
    return +(((a = r.match(s)) == null ? void 0 : a[1]) || 0) - +(((l = o.match(s)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((r, o) => {
    const s = t[o];
    return delete r[o], r[o] = s, r;
  }, {
    ...t
  }) : t;
}
function i$(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function s$(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : ka(18, `(${t})`));
    return null;
  }
  const [, r, o] = n, s = Number.isNaN(+r) ? r || 0 : +r;
  return e.containerQueries(o).up(s);
}
function a$(e) {
  const t = (s, a) => s.replace("@media", a ? `@container ${a}` : "@container");
  function n(s, a) {
    s.up = (...l) => t(e.breakpoints.up(...l), a), s.down = (...l) => t(e.breakpoints.down(...l), a), s.between = (...l) => t(e.breakpoints.between(...l), a), s.only = (...l) => t(e.breakpoints.only(...l), a), s.not = (...l) => {
      const c = t(e.breakpoints.not(...l), a);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const r = {}, o = (s) => (n(r, s), r);
  return n(o), {
    ...e,
    containerQueries: o
  };
}
const l$ = {
  borderRadius: 4
}, Gr = process.env.NODE_ENV !== "production" ? i.oneOfType([i.number, i.string, i.object, i.array]) : {};
function Ni(e, t) {
  return t ? io(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const wl = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, Yp = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${wl[e]}px)`
}, c$ = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : wl[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function Er(e, t, n) {
  const r = e.theme || {};
  if (Array.isArray(t)) {
    const s = r.breakpoints || Yp;
    return t.reduce((a, l, c) => (a[s.up(s.keys[c])] = n(t[c]), a), {});
  }
  if (typeof t == "object") {
    const s = r.breakpoints || Yp;
    return Object.keys(t).reduce((a, l) => {
      if (i$(s.keys, l)) {
        const c = s$(r.containerQueries ? r : c$, l);
        c && (a[c] = n(t[l], l));
      } else if (Object.keys(s.values || wl).includes(l)) {
        const c = s.up(l);
        a[c] = n(t[l], l);
      } else {
        const c = l;
        a[c] = t[c];
      }
      return a;
    }, {});
  }
  return n(t);
}
function u$(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((r, o) => {
    const s = e.up(o);
    return r[s] = {}, r;
  }, {})) || {};
}
function d$(e, t) {
  return e.reduce((n, r) => {
    const o = n[r];
    return (!o || Object.keys(o).length === 0) && delete n[r], n;
  }, t);
}
function Cd(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : ka(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function Sl(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const r = `vars.${t}`.split(".").reduce((o, s) => o && o[s] ? o[s] : null, e);
    if (r != null)
      return r;
  }
  return t.split(".").reduce((r, o) => r && r[o] != null ? r[o] : null, e);
}
function Ia(e, t, n, r = n) {
  let o;
  return typeof e == "function" ? o = e(n) : Array.isArray(e) ? o = e[n] || r : o = Sl(e, n) || r, t && (o = t(o, r, e)), o;
}
function Ot(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: r,
    transform: o
  } = e, s = (a) => {
    if (a[t] == null)
      return null;
    const l = a[t], c = a.theme, u = Sl(c, r) || {};
    return Er(a, l, (d) => {
      let h = Ia(u, o, d);
      return d === h && typeof d == "string" && (h = Ia(u, o, `${t}${d === "default" ? "" : Cd(d)}`, d)), n === !1 ? h : {
        [n]: h
      };
    });
  };
  return s.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: Gr
  } : {}, s.filterProps = [t], s;
}
function f$(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const p$ = {
  m: "margin",
  p: "padding"
}, m$ = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, Kp = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, h$ = f$((e) => {
  if (e.length > 2)
    if (Kp[e])
      e = Kp[e];
    else
      return [e];
  const [t, n] = e.split(""), r = p$[t], o = m$[n] || "";
  return Array.isArray(o) ? o.map((s) => r + s) : [r + o];
}), Tl = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], El = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], g$ = [...Tl, ...El];
function gs(e, t, n, r) {
  const o = Sl(e, t, !0) ?? n;
  return typeof o == "number" || typeof o == "string" ? (s) => typeof s == "string" ? s : (process.env.NODE_ENV !== "production" && typeof s != "number" && console.error(`MUI: Expected ${r} argument to be a number or a string, got ${s}.`), typeof o == "string" ? o.startsWith("var(") && s === 0 ? 0 : o.startsWith("var(") && s === 1 ? o : `calc(${s} * ${o})` : o * s) : Array.isArray(o) ? (s) => {
    if (typeof s == "string")
      return s;
    const a = Math.abs(s);
    process.env.NODE_ENV !== "production" && (Number.isInteger(a) ? a > o.length - 1 && console.error([`MUI: The value provided (${a}) overflows.`, `The supported values are: ${JSON.stringify(o)}.`, `${a} > ${o.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = o[a];
    return s >= 0 ? l : typeof l == "number" ? -l : typeof l == "string" && l.startsWith("var(") ? `calc(-1 * ${l})` : `-${l}`;
  } : typeof o == "function" ? o : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${o}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function Od(e) {
  return gs(e, "spacing", 8, "spacing");
}
function ys(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function y$(e, t) {
  return (n) => e.reduce((r, o) => (r[o] = ys(t, n), r), {});
}
function b$(e, t, n, r) {
  if (!t.includes(n))
    return null;
  const o = h$(n), s = y$(o, r), a = e[n];
  return Er(e, a, s);
}
function zy(e, t) {
  const n = Od(e.theme);
  return Object.keys(e).map((r) => b$(e, t, r, n)).reduce(Ni, {});
}
function bt(e) {
  return zy(e, Tl);
}
bt.propTypes = process.env.NODE_ENV !== "production" ? Tl.reduce((e, t) => (e[t] = Gr, e), {}) : {};
bt.filterProps = Tl;
function vt(e) {
  return zy(e, El);
}
vt.propTypes = process.env.NODE_ENV !== "production" ? El.reduce((e, t) => (e[t] = Gr, e), {}) : {};
vt.filterProps = El;
process.env.NODE_ENV !== "production" && g$.reduce((e, t) => (e[t] = Gr, e), {});
function Wy(e = 8, t = Od({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...r) => (process.env.NODE_ENV !== "production" && (r.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${r.length}`)), (r.length === 0 ? [1] : r).map((s) => {
    const a = t(s);
    return typeof a == "number" ? `${a}px` : a;
  }).join(" "));
  return n.mui = !0, n;
}
function Cl(...e) {
  const t = e.reduce((r, o) => (o.filterProps.forEach((s) => {
    r[s] = o;
  }), r), {}), n = (r) => Object.keys(r).reduce((o, s) => t[s] ? Ni(o, t[s](r)) : o, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((r, o) => Object.assign(r, o.propTypes), {}) : {}, n.filterProps = e.reduce((r, o) => r.concat(o.filterProps), []), n;
}
function En(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function An(e, t) {
  return Ot({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const v$ = An("border", En), x$ = An("borderTop", En), w$ = An("borderRight", En), S$ = An("borderBottom", En), T$ = An("borderLeft", En), E$ = An("borderColor"), C$ = An("borderTopColor"), O$ = An("borderRightColor"), R$ = An("borderBottomColor"), $$ = An("borderLeftColor"), k$ = An("outline", En), I$ = An("outlineColor"), Ol = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = gs(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (r) => ({
      borderRadius: ys(t, r)
    });
    return Er(e, e.borderRadius, n);
  }
  return null;
};
Ol.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: Gr
} : {};
Ol.filterProps = ["borderRadius"];
Cl(v$, x$, w$, S$, T$, E$, C$, O$, R$, $$, Ol, k$, I$);
const Rl = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = gs(e.theme, "spacing", 8, "gap"), n = (r) => ({
      gap: ys(t, r)
    });
    return Er(e, e.gap, n);
  }
  return null;
};
Rl.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: Gr
} : {};
Rl.filterProps = ["gap"];
const $l = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = gs(e.theme, "spacing", 8, "columnGap"), n = (r) => ({
      columnGap: ys(t, r)
    });
    return Er(e, e.columnGap, n);
  }
  return null;
};
$l.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: Gr
} : {};
$l.filterProps = ["columnGap"];
const kl = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = gs(e.theme, "spacing", 8, "rowGap"), n = (r) => ({
      rowGap: ys(t, r)
    });
    return Er(e, e.rowGap, n);
  }
  return null;
};
kl.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: Gr
} : {};
kl.filterProps = ["rowGap"];
const P$ = Ot({
  prop: "gridColumn"
}), N$ = Ot({
  prop: "gridRow"
}), A$ = Ot({
  prop: "gridAutoFlow"
}), M$ = Ot({
  prop: "gridAutoColumns"
}), _$ = Ot({
  prop: "gridAutoRows"
}), D$ = Ot({
  prop: "gridTemplateColumns"
}), B$ = Ot({
  prop: "gridTemplateRows"
}), F$ = Ot({
  prop: "gridTemplateAreas"
}), j$ = Ot({
  prop: "gridArea"
});
Cl(Rl, $l, kl, P$, N$, A$, M$, _$, D$, B$, F$, j$);
function _o(e, t) {
  return t === "grey" ? t : e;
}
const L$ = Ot({
  prop: "color",
  themeKey: "palette",
  transform: _o
}), V$ = Ot({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: _o
}), z$ = Ot({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: _o
});
Cl(L$, V$, z$);
function pn(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const W$ = Ot({
  prop: "width",
  transform: pn
}), Rd = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var o, s, a, l, c;
      const r = ((a = (s = (o = e.theme) == null ? void 0 : o.breakpoints) == null ? void 0 : s.values) == null ? void 0 : a[n]) || wl[n];
      return r ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${r}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: r
      } : {
        maxWidth: pn(n)
      };
    };
    return Er(e, e.maxWidth, t);
  }
  return null;
};
Rd.filterProps = ["maxWidth"];
const U$ = Ot({
  prop: "minWidth",
  transform: pn
}), H$ = Ot({
  prop: "height",
  transform: pn
}), q$ = Ot({
  prop: "maxHeight",
  transform: pn
}), G$ = Ot({
  prop: "minHeight",
  transform: pn
});
Ot({
  prop: "size",
  cssProperty: "width",
  transform: pn
});
Ot({
  prop: "size",
  cssProperty: "height",
  transform: pn
});
const Y$ = Ot({
  prop: "boxSizing"
});
Cl(W$, Rd, U$, H$, q$, G$, Y$);
const bs = {
  // borders
  border: {
    themeKey: "borders",
    transform: En
  },
  borderTop: {
    themeKey: "borders",
    transform: En
  },
  borderRight: {
    themeKey: "borders",
    transform: En
  },
  borderBottom: {
    themeKey: "borders",
    transform: En
  },
  borderLeft: {
    themeKey: "borders",
    transform: En
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: En
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: Ol
  },
  // palette
  color: {
    themeKey: "palette",
    transform: _o
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: _o
  },
  backgroundColor: {
    themeKey: "palette",
    transform: _o
  },
  // spacing
  p: {
    style: vt
  },
  pt: {
    style: vt
  },
  pr: {
    style: vt
  },
  pb: {
    style: vt
  },
  pl: {
    style: vt
  },
  px: {
    style: vt
  },
  py: {
    style: vt
  },
  padding: {
    style: vt
  },
  paddingTop: {
    style: vt
  },
  paddingRight: {
    style: vt
  },
  paddingBottom: {
    style: vt
  },
  paddingLeft: {
    style: vt
  },
  paddingX: {
    style: vt
  },
  paddingY: {
    style: vt
  },
  paddingInline: {
    style: vt
  },
  paddingInlineStart: {
    style: vt
  },
  paddingInlineEnd: {
    style: vt
  },
  paddingBlock: {
    style: vt
  },
  paddingBlockStart: {
    style: vt
  },
  paddingBlockEnd: {
    style: vt
  },
  m: {
    style: bt
  },
  mt: {
    style: bt
  },
  mr: {
    style: bt
  },
  mb: {
    style: bt
  },
  ml: {
    style: bt
  },
  mx: {
    style: bt
  },
  my: {
    style: bt
  },
  margin: {
    style: bt
  },
  marginTop: {
    style: bt
  },
  marginRight: {
    style: bt
  },
  marginBottom: {
    style: bt
  },
  marginLeft: {
    style: bt
  },
  marginX: {
    style: bt
  },
  marginY: {
    style: bt
  },
  marginInline: {
    style: bt
  },
  marginInlineStart: {
    style: bt
  },
  marginInlineEnd: {
    style: bt
  },
  marginBlock: {
    style: bt
  },
  marginBlockStart: {
    style: bt
  },
  marginBlockEnd: {
    style: bt
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: Rl
  },
  rowGap: {
    style: kl
  },
  columnGap: {
    style: $l
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: pn
  },
  maxWidth: {
    style: Rd
  },
  minWidth: {
    transform: pn
  },
  height: {
    transform: pn
  },
  maxHeight: {
    transform: pn
  },
  minHeight: {
    transform: pn
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function K$(...e) {
  const t = e.reduce((r, o) => r.concat(Object.keys(o)), []), n = new Set(t);
  return e.every((r) => n.size === Object.keys(r).length);
}
function X$(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function Q$() {
  function e(n, r, o, s) {
    const a = {
      [n]: r,
      theme: o
    }, l = s[n];
    if (!l)
      return {
        [n]: r
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: f,
      style: d
    } = l;
    if (r == null)
      return null;
    if (u === "typography" && r === "inherit")
      return {
        [n]: r
      };
    const h = Sl(o, u) || {};
    return d ? d(a) : Er(a, r, (y) => {
      let m = Ia(h, f, y);
      return y === m && typeof y == "string" && (m = Ia(h, f, `${n}${y === "default" ? "" : Cd(y)}`, y)), c === !1 ? m : {
        [c]: m
      };
    });
  }
  function t(n) {
    const {
      sx: r,
      theme: o = {}
    } = n || {};
    if (!r)
      return null;
    const s = o.unstable_sxConfig ?? bs;
    function a(l) {
      let c = l;
      if (typeof l == "function")
        c = l(o);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = u$(o.breakpoints), f = Object.keys(u);
      let d = u;
      return Object.keys(c).forEach((h) => {
        const g = X$(c[h], o);
        if (g != null)
          if (typeof g == "object")
            if (s[h])
              d = Ni(d, e(h, g, o, s));
            else {
              const y = Er({
                theme: o
              }, g, (m) => ({
                [h]: m
              }));
              K$(y, g) ? d[h] = t({
                sx: g,
                theme: o
              }) : d = Ni(d, y);
            }
          else
            d = Ni(d, e(h, g, o, s));
      }), o$(o, d$(f, d));
    }
    return Array.isArray(r) ? r.map(a) : a(r);
  }
  return t;
}
const lo = Q$();
lo.filterProps = ["sx"];
function J$(e, t) {
  var r;
  const n = this;
  if (n.vars) {
    if (!((r = n.colorSchemes) != null && r[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let o = n.getColorSchemeSelector(e);
    return o === "&" ? t : ((o.includes("data-") || o.includes(".")) && (o = `*:where(${o.replace(/\s*&$/, "")}) &`), {
      [o]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function $d(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: r = {},
    spacing: o,
    shape: s = {},
    ...a
  } = e, l = r$(n), c = Wy(o);
  let u = io({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...r
    },
    spacing: c,
    shape: {
      ...l$,
      ...s
    }
  }, a);
  return u = a$(u), u.applyStyles = J$, u = t.reduce((f, d) => io(f, d), u), u.unstable_sxConfig = {
    ...bs,
    ...a == null ? void 0 : a.unstable_sxConfig
  }, u.unstable_sx = function(d) {
    return lo({
      sx: d,
      theme: this
    });
  }, u;
}
function Z$(e) {
  return Object.keys(e).length === 0;
}
function ek(e = null) {
  const t = C.useContext(Qo);
  return !t || Z$(t) ? e : t;
}
const tk = $d();
function kd(e = tk) {
  return ek(e);
}
function Uy({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const r = kd(n), o = typeof e == "function" ? e(t && r[t] || r) : e;
  return /* @__PURE__ */ k(jy, {
    styles: o
  });
}
process.env.NODE_ENV !== "production" && (Uy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: i.object,
  /**
   * @ignore
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool]),
  /**
   * @ignore
   */
  themeId: i.string
});
const nk = (e) => {
  var r;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((r = e == null ? void 0 : e.theme) == null ? void 0 : r.unstable_sxConfig) ?? bs;
  return Object.keys(e).forEach((o) => {
    n[o] ? t.systemProps[o] = e[o] : t.otherProps[o] = e[o];
  }), t;
};
function rk(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: r,
    otherProps: o
  } = nk(n);
  let s;
  return Array.isArray(t) ? s = [r, ...t] : typeof t == "function" ? s = (...a) => {
    const l = t(...a);
    return Pr(l) ? {
      ...r,
      ...l
    } : r;
  } : s = {
    ...r,
    ...t
  }, {
    ...o,
    sx: s
  };
}
function ok(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: r = "MuiBox-root",
    generateClassName: o
  } = e, s = Ly("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(lo);
  return /* @__PURE__ */ C.forwardRef(function(c, u) {
    const f = kd(n), {
      className: d,
      component: h = "div",
      ...g
    } = rk(c);
    return /* @__PURE__ */ k(s, {
      as: h,
      ref: u,
      className: ge(d, o ? o(r) : r),
      theme: t && f[t] || f,
      ...g
    });
  });
}
function Hy(e, t = "") {
  return e.displayName || e.name || t;
}
function Xp(e, t, n) {
  const r = Hy(t);
  return e.displayName || (r !== "" ? `${n}(${r})` : n);
}
function ik(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return Hy(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case bn.ForwardRef:
          return Xp(e, e.render, "ForwardRef");
        case bn.Memo:
          return Xp(e, e.type, "memo");
        default:
          return;
      }
  }
}
function qy(e) {
  const {
    variants: t,
    ...n
  } = e, r = {
    variants: t,
    style: Gp(n),
    isProcessed: !0
  };
  return r.style === n || t && t.forEach((o) => {
    typeof o.style != "function" && (o.style = Gp(o.style));
  }), r;
}
const sk = $d();
function fc(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function ak(e) {
  return e ? (t, n) => n[e] : null;
}
function lk(e, t, n) {
  e.theme = fk(e.theme) ? n : e.theme[t] || e.theme;
}
function aa(e, t) {
  const n = typeof t == "function" ? t(e) : t;
  if (Array.isArray(n))
    return n.flatMap((r) => aa(e, r));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    let r;
    if (n.isProcessed)
      r = n.style;
    else {
      const {
        variants: o,
        ...s
      } = n;
      r = s;
    }
    return Gy(e, n.variants, [r]);
  }
  return n != null && n.isProcessed ? n.style : n;
}
function Gy(e, t, n = []) {
  var o;
  let r;
  e: for (let s = 0; s < t.length; s += 1) {
    const a = t[s];
    if (typeof a.props == "function") {
      if (r ?? (r = {
        ...e,
        ...e.ownerState,
        ownerState: e.ownerState
      }), !a.props(r))
        continue;
    } else
      for (const l in a.props)
        if (e[l] !== a.props[l] && ((o = e.ownerState) == null ? void 0 : o[l]) !== a.props[l])
          continue e;
    typeof a.style == "function" ? (r ?? (r = {
      ...e,
      ...e.ownerState,
      ownerState: e.ownerState
    }), n.push(a.style(r))) : n.push(a.style);
  }
  return n;
}
function ck(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = sk,
    rootShouldForwardProp: r = fc,
    slotShouldForwardProp: o = fc
  } = e;
  function s(l) {
    lk(l, t, n);
  }
  return (l, c = {}) => {
    t$(l, (x) => x.filter((T) => T !== lo));
    const {
      name: u,
      slot: f,
      skipVariantsResolver: d,
      skipSx: h,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: g = ak(Yy(f)),
      ...y
    } = c, m = d !== void 0 ? d : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      f && f !== "Root" && f !== "root" || !1
    ), b = h || !1;
    let v = fc;
    f === "Root" || f === "root" ? v = r : f ? v = o : pk(l) && (v = void 0);
    const E = Ly(l, {
      shouldForwardProp: v,
      label: dk(u, f),
      ...y
    }), S = (x) => {
      if (typeof x == "function" && x.__emotion_real !== x)
        return function(R) {
          return aa(R, x);
        };
      if (Pr(x)) {
        const T = qy(x);
        return T.variants ? function(I) {
          return aa(I, T);
        } : T.style;
      }
      return x;
    }, w = (...x) => {
      const T = [], R = x.map(S), I = [];
      if (T.push(s), u && g && I.push(function($) {
        var _, L;
        const D = (L = (_ = $.theme.components) == null ? void 0 : _[u]) == null ? void 0 : L.styleOverrides;
        if (!D)
          return null;
        const M = {};
        for (const U in D)
          M[U] = aa($, D[U]);
        return g($, M);
      }), u && !m && I.push(function($) {
        var M, _;
        const A = $.theme, D = (_ = (M = A == null ? void 0 : A.components) == null ? void 0 : M[u]) == null ? void 0 : _.variants;
        return D ? Gy($, D) : null;
      }), b || I.push(lo), Array.isArray(R[0])) {
        const O = R.shift(), $ = new Array(T.length).fill(""), A = new Array(I.length).fill("");
        let D;
        D = [...$, ...O, ...A], D.raw = [...$, ...O.raw, ...A], T.unshift(D);
      }
      const N = [...T, ...R, ...I], p = E(...N);
      return l.muiName && (p.muiName = l.muiName), process.env.NODE_ENV !== "production" && (p.displayName = uk(u, f, l)), p;
    };
    return E.withConfig && (w.withConfig = E.withConfig), w;
  };
}
function uk(e, t, n) {
  return e ? `${e}${Cd(t || "")}` : `Styled(${ik(n)})`;
}
function dk(e, t) {
  let n;
  return process.env.NODE_ENV !== "production" && e && (n = `${e}-${Yy(t || "Root")}`), n;
}
function fk(e) {
  for (const t in e)
    return !1;
  return !0;
}
function pk(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function Yy(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
function ou(e, t) {
  const n = {
    ...t
  };
  for (const r in e)
    if (Object.prototype.hasOwnProperty.call(e, r)) {
      const o = r;
      if (o === "components" || o === "slots")
        n[o] = {
          ...e[o],
          ...n[o]
        };
      else if (o === "componentsProps" || o === "slotProps") {
        const s = e[o], a = t[o];
        if (!a)
          n[o] = s || {};
        else if (!s)
          n[o] = a;
        else {
          n[o] = {
            ...a
          };
          for (const l in s)
            if (Object.prototype.hasOwnProperty.call(s, l)) {
              const c = l;
              n[o][c] = ou(s[c], a[c]);
            }
        }
      } else n[o] === void 0 && (n[o] = e[o]);
    }
  return n;
}
function mk(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function Id(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), mk(e, t, n);
}
function hk(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((r) => r + r)), process.env.NODE_ENV !== "production" && e.length !== e.trim().length && console.error(`MUI: The color: "${e}" is invalid. Make sure the color input doesn't contain leading/trailing space.`), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((r, o) => o < 3 ? parseInt(r, 16) : Math.round(parseInt(r, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function jr(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return jr(hk(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : ka(9, e));
  let r = e.substring(t + 1, e.length - 1), o;
  if (n === "color") {
    if (r = r.split(" "), o = r.shift(), r.length === 4 && r[3].charAt(0) === "/" && (r[3] = r[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(o))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${o}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : ka(10, o));
  } else
    r = r.split(",");
  return r = r.map((s) => parseFloat(s)), {
    type: n,
    values: r,
    colorSpace: o
  };
}
const gk = (e) => {
  const t = jr(e);
  return t.values.slice(0, 3).map((n, r) => t.type.includes("hsl") && r !== 0 ? `${n}%` : n).join(" ");
}, Si = (e, t) => {
  try {
    return gk(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function Il(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: r
  } = e;
  return t.includes("rgb") ? r = r.map((o, s) => s < 3 ? parseInt(o, 10) : o) : t.includes("hsl") && (r[1] = `${r[1]}%`, r[2] = `${r[2]}%`), t.includes("color") ? r = `${n} ${r.join(" ")}` : r = `${r.join(", ")}`, `${t}(${r})`;
}
function Ky(e) {
  e = jr(e);
  const {
    values: t
  } = e, n = t[0], r = t[1] / 100, o = t[2] / 100, s = r * Math.min(o, 1 - o), a = (u, f = (u + n / 30) % 12) => o - s * Math.max(Math.min(f - 3, 9 - f, 1), -1);
  let l = "rgb";
  const c = [Math.round(a(0) * 255), Math.round(a(8) * 255), Math.round(a(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), Il({
    type: l,
    values: c
  });
}
function iu(e) {
  e = jr(e);
  let t = e.type === "hsl" || e.type === "hsla" ? jr(Ky(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function Qp(e, t) {
  const n = iu(e), r = iu(t);
  return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
}
function su(e, t) {
  return e = jr(e), t = Id(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, Il(e);
}
function Ws(e, t, n) {
  try {
    return su(e, t);
  } catch {
    return e;
  }
}
function Pd(e, t) {
  if (e = jr(e), t = Id(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return Il(e);
}
function ot(e, t, n) {
  try {
    return Pd(e, t);
  } catch {
    return e;
  }
}
function Nd(e, t) {
  if (e = jr(e), t = Id(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return Il(e);
}
function it(e, t, n) {
  try {
    return Nd(e, t);
  } catch {
    return e;
  }
}
function yk(e, t = 0.15) {
  return iu(e) > 0.5 ? Pd(e, t) : Nd(e, t);
}
function Us(e, t, n) {
  try {
    return yk(e, t);
  } catch {
    return e;
  }
}
const bk = /* @__PURE__ */ C.createContext();
process.env.NODE_ENV !== "production" && (i.node, i.bool);
const vk = () => C.useContext(bk) ?? !1, xk = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (i.node, i.object);
function wk(e) {
  const {
    theme: t,
    name: n,
    props: r
  } = e;
  if (!t || !t.components || !t.components[n])
    return r;
  const o = t.components[n];
  return o.defaultProps ? ou(o.defaultProps, r) : !o.styleOverrides && !o.variants ? ou(o, r) : r;
}
function Sk({
  props: e,
  name: t
}) {
  const n = C.useContext(xk);
  return wk({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const Jp = {
  theme: void 0
};
function Tk(e) {
  let t, n;
  return function(o) {
    let s = t;
    return (s === void 0 || o.theme !== n) && (Jp.theme = o.theme, s = qy(e(Jp)), t = s, n = o.theme), s;
  };
}
function Ek(e = "") {
  function t(...r) {
    if (!r.length)
      return "";
    const o = r[0];
    return typeof o == "string" && !o.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${o}${t(...r.slice(1))})` : `, ${o}`;
  }
  return (r, ...o) => `var(--${e ? `${e}-` : ""}${r}${t(...o)})`;
}
const Zp = (e, t, n, r = []) => {
  let o = e;
  t.forEach((s, a) => {
    a === t.length - 1 ? Array.isArray(o) ? o[Number(s)] = n : o && typeof o == "object" && (o[s] = n) : o && typeof o == "object" && (o[s] || (o[s] = r.includes(s) ? [] : {}), o = o[s]);
  });
}, Ck = (e, t, n) => {
  function r(o, s = [], a = []) {
    Object.entries(o).forEach(([l, c]) => {
      (!n || n && !n([...s, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? r(c, [...s, l], Array.isArray(c) ? [...a, l] : a) : t([...s, l], c, a));
    });
  }
  r(e);
}, Ok = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((r) => e.includes(r)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function pc(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: r
  } = t || {}, o = {}, s = {}, a = {};
  return Ck(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!r || !r(l, c))) {
        const f = `--${n ? `${n}-` : ""}${l.join("-")}`, d = Ok(l, c);
        Object.assign(o, {
          [f]: d
        }), Zp(s, l, `var(${f})`, u), Zp(a, l, `var(${f}, ${d})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: o,
    vars: s,
    varsWithDefaults: a
  };
}
function Rk(e, t = {}) {
  const {
    getSelector: n = b,
    disableCssColorScheme: r,
    colorSchemeSelector: o
  } = t, {
    colorSchemes: s = {},
    components: a,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: f,
    varsWithDefaults: d
  } = pc(c, t);
  let h = d;
  const g = {}, {
    [l]: y,
    ...m
  } = s;
  if (Object.entries(m || {}).forEach(([S, w]) => {
    const {
      vars: x,
      css: T,
      varsWithDefaults: R
    } = pc(w, t);
    h = io(h, R), g[S] = {
      css: T,
      vars: x
    };
  }), y) {
    const {
      css: S,
      vars: w,
      varsWithDefaults: x
    } = pc(y, t);
    h = io(h, x), g[l] = {
      css: S,
      vars: w
    };
  }
  function b(S, w) {
    var T, R;
    let x = o;
    if (o === "class" && (x = ".%s"), o === "data" && (x = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (x = `[${o}="%s"]`), S) {
      if (x === "media")
        return e.defaultColorScheme === S ? ":root" : {
          [`@media (prefers-color-scheme: ${((R = (T = s[S]) == null ? void 0 : T.palette) == null ? void 0 : R.mode) || S})`]: {
            ":root": w
          }
        };
      if (x)
        return e.defaultColorScheme === S ? `:root, ${x.replace("%s", String(S))}` : x.replace("%s", String(S));
    }
    return ":root";
  }
  return {
    vars: h,
    generateThemeVars: () => {
      let S = {
        ...u
      };
      return Object.entries(g).forEach(([, {
        vars: w
      }]) => {
        S = io(S, w);
      }), S;
    },
    generateStyleSheets: () => {
      var I, N;
      const S = [], w = e.defaultColorScheme || "light";
      function x(p, O) {
        Object.keys(O).length && S.push(typeof p == "string" ? {
          [p]: {
            ...O
          }
        } : p);
      }
      x(n(void 0, {
        ...f
      }), f);
      const {
        [w]: T,
        ...R
      } = g;
      if (T) {
        const {
          css: p
        } = T, O = (N = (I = s[w]) == null ? void 0 : I.palette) == null ? void 0 : N.mode, $ = !r && O ? {
          colorScheme: O,
          ...p
        } : {
          ...p
        };
        x(n(w, {
          ...$
        }), $);
      }
      return Object.entries(R).forEach(([p, {
        css: O
      }]) => {
        var D, M;
        const $ = (M = (D = s[p]) == null ? void 0 : D.palette) == null ? void 0 : M.mode, A = !r && $ ? {
          colorScheme: $,
          ...O
        } : {
          ...O
        };
        x(n(p, {
          ...A
        }), A);
      }), S;
    }
  };
}
function $k(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
function Nr(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function Xy(e) {
  if (/* @__PURE__ */ C.isValidElement(e) || bn.isValidElementType(e) || !Nr(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = Xy(e[n]);
  }), t;
}
function rr(e, t, n = {
  clone: !0
}) {
  const r = n.clone ? {
    ...e
  } : e;
  return Nr(e) && Nr(t) && Object.keys(t).forEach((o) => {
    /* @__PURE__ */ C.isValidElement(t[o]) || bn.isValidElementType(t[o]) ? r[o] = t[o] : Nr(t[o]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, o) && Nr(e[o]) ? r[o] = rr(e[o], t[o], n) : n.clone ? r[o] = Nr(t[o]) ? Xy(t[o]) : t[o] : r[o] = t[o];
  }), r;
}
const Zi = {
  black: "#000",
  white: "#fff"
}, kk = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, wo = {
  50: "#f3e5f5",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  700: "#7b1fa2"
}, So = {
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  700: "#d32f2f",
  800: "#c62828"
}, di = {
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  700: "#f57c00",
  900: "#e65100"
}, To = {
  50: "#e3f2fd",
  200: "#90caf9",
  400: "#42a5f5",
  700: "#1976d2",
  800: "#1565c0"
}, Eo = {
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  700: "#0288d1",
  900: "#01579b"
}, Co = {
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20"
};
function Qy() {
  return {
    // The colors used to style the text.
    text: {
      // The most important text.
      primary: "rgba(0, 0, 0, 0.87)",
      // Secondary text.
      secondary: "rgba(0, 0, 0, 0.6)",
      // Disabled text have even lower visual prominence.
      disabled: "rgba(0, 0, 0, 0.38)"
    },
    // The color used to divide different elements.
    divider: "rgba(0, 0, 0, 0.12)",
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
      paper: Zi.white,
      default: Zi.white
    },
    // The colors used to style the action elements.
    action: {
      // The color of an active action like an icon button.
      active: "rgba(0, 0, 0, 0.54)",
      // The color of an hovered action.
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      // The color of a selected action.
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      // The color of a disabled action.
      disabled: "rgba(0, 0, 0, 0.26)",
      // The background color of a disabled action.
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12
    }
  };
}
const Ik = Qy();
function Jy() {
  return {
    text: {
      primary: Zi.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)"
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: {
      paper: "#121212",
      default: "#121212"
    },
    action: {
      active: Zi.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24
    }
  };
}
const em = Jy();
function tm(e, t, n, r) {
  const o = r.light || r, s = r.dark || r * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = Nd(e.main, o) : t === "dark" && (e.dark = Pd(e.main, s)));
}
function Pk(e = "light") {
  return e === "dark" ? {
    main: To[200],
    light: To[50],
    dark: To[400]
  } : {
    main: To[700],
    light: To[400],
    dark: To[800]
  };
}
function Nk(e = "light") {
  return e === "dark" ? {
    main: wo[200],
    light: wo[50],
    dark: wo[400]
  } : {
    main: wo[500],
    light: wo[300],
    dark: wo[700]
  };
}
function Ak(e = "light") {
  return e === "dark" ? {
    main: So[500],
    light: So[300],
    dark: So[700]
  } : {
    main: So[700],
    light: So[400],
    dark: So[800]
  };
}
function Mk(e = "light") {
  return e === "dark" ? {
    main: Eo[400],
    light: Eo[300],
    dark: Eo[700]
  } : {
    main: Eo[700],
    light: Eo[500],
    dark: Eo[900]
  };
}
function _k(e = "light") {
  return e === "dark" ? {
    main: Co[400],
    light: Co[300],
    dark: Co[700]
  } : {
    main: Co[800],
    light: Co[500],
    dark: Co[900]
  };
}
function Dk(e = "light") {
  return e === "dark" ? {
    main: di[400],
    light: di[300],
    dark: di[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: di[500],
    dark: di[900]
  };
}
function Ad(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: r = 0.2,
    ...o
  } = e, s = e.primary || Pk(t), a = e.secondary || Nk(t), l = e.error || Ak(t), c = e.info || Mk(t), u = e.success || _k(t), f = e.warning || Dk(t);
  function d(m) {
    const b = Qp(m, em.text.primary) >= n ? em.text.primary : Ik.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const v = Qp(m, b);
      v < 3 && console.error([`MUI: The contrast ratio of ${v}:1 for ${b} on ${m}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return b;
  }
  const h = ({
    color: m,
    name: b,
    mainShade: v = 500,
    lightShade: E = 300,
    darkShade: S = 700
  }) => {
    if (m = {
      ...m
    }, !m.main && m[v] && (m.main = m[v]), !m.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${v}\` property.` : ao(11, b ? ` (${b})` : "", v));
    if (typeof m.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(m.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : ao(12, b ? ` (${b})` : "", JSON.stringify(m.main)));
    return tm(m, "light", E, r), tm(m, "dark", S, r), m.contrastText || (m.contrastText = d(m.main)), m;
  };
  let g;
  return t === "light" ? g = Qy() : t === "dark" && (g = Jy()), process.env.NODE_ENV !== "production" && (g || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), rr({
    // A collection of common colors.
    common: {
      ...Zi
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: h({
      color: s,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: h({
      color: a,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: h({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: h({
      color: f,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: h({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: h({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: kk,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: d,
    // Generate a rich color object.
    augmentColor: h,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: r,
    // The light and dark mode object.
    ...g
  }, o);
}
function Bk(e) {
  const t = {};
  return Object.entries(e).forEach((r) => {
    const [o, s] = r;
    typeof s == "object" && (t[o] = `${s.fontStyle ? `${s.fontStyle} ` : ""}${s.fontVariant ? `${s.fontVariant} ` : ""}${s.fontWeight ? `${s.fontWeight} ` : ""}${s.fontStretch ? `${s.fontStretch} ` : ""}${s.fontSize || ""}${s.lineHeight ? `/${s.lineHeight} ` : ""}${s.fontFamily || ""}`);
  }), t;
}
const nm = (e) => e, Fk = () => {
  let e = nm;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = nm;
    }
  };
}, Zy = Fk(), jk = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function Nt(e, t, n = "Mui") {
  const r = jk[t];
  return r ? `${n}-${r}` : `${Zy.generate(e)}-${t}`;
}
function Lk(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function Vk(e) {
  return Math.round(e * 1e5) / 1e5;
}
const rm = {
  textTransform: "uppercase"
}, om = '"Roboto", "Helvetica", "Arial", sans-serif';
function zk(e, t) {
  const {
    fontFamily: n = om,
    // The default font size of the Material Specification.
    fontSize: r = 14,
    // px
    fontWeightLight: o = 300,
    fontWeightRegular: s = 400,
    fontWeightMedium: a = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: f,
    ...d
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof r != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const h = r / 14, g = f || ((b) => `${b / c * h}rem`), y = (b, v, E, S, w) => ({
    fontFamily: n,
    fontWeight: b,
    fontSize: g(v),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: E,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === om ? {
      letterSpacing: `${Vk(S / v)}em`
    } : {},
    ...w,
    ...u
  }), m = {
    h1: y(o, 96, 1.167, -1.5),
    h2: y(o, 60, 1.2, -0.5),
    h3: y(s, 48, 1.167, 0),
    h4: y(s, 34, 1.235, 0.25),
    h5: y(s, 24, 1.334, 0),
    h6: y(a, 20, 1.6, 0.15),
    subtitle1: y(s, 16, 1.75, 0.15),
    subtitle2: y(a, 14, 1.57, 0.1),
    body1: y(s, 16, 1.5, 0.15),
    body2: y(s, 14, 1.43, 0.15),
    button: y(a, 14, 1.75, 0.4, rm),
    caption: y(s, 12, 1.66, 0.4),
    overline: y(s, 12, 2.66, 1, rm),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return rr({
    htmlFontSize: c,
    pxToRem: g,
    fontFamily: n,
    fontSize: r,
    fontWeightLight: o,
    fontWeightRegular: s,
    fontWeightMedium: a,
    fontWeightBold: l,
    ...m
  }, d, {
    clone: !1
    // No need to clone deep
  });
}
const Wk = 0.2, Uk = 0.14, Hk = 0.12;
function pt(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${Wk})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${Uk})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${Hk})`].join(",");
}
const qk = ["none", pt(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), pt(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), pt(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), pt(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), pt(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), pt(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), pt(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), pt(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), pt(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), pt(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), pt(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), pt(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), pt(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), pt(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), pt(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), pt(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), pt(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), pt(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), pt(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), pt(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), pt(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), pt(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), pt(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), pt(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], Gk = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, Yk = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function im(e) {
  return `${Math.round(e)}ms`;
}
function Kk(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function Xk(e) {
  const t = {
    ...Gk,
    ...e.easing
  }, n = {
    ...Yk,
    ...e.duration
  };
  return {
    getAutoHeightDuration: Kk,
    create: (o = ["all"], s = {}) => {
      const {
        duration: a = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = s;
      if (process.env.NODE_ENV !== "production") {
        const f = (h) => typeof h == "string", d = (h) => !Number.isNaN(parseFloat(h));
        !f(o) && !Array.isArray(o) && console.error('MUI: Argument "props" must be a string or Array.'), !d(a) && !f(a) && console.error(`MUI: Argument "duration" must be a number or a string but found ${a}.`), f(l) || console.error('MUI: Argument "easing" must be a string.'), !d(c) && !f(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof s != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(o) ? o : [o]).map((f) => `${f} ${typeof a == "string" ? a : im(a)} ${l} ${typeof c == "string" ? c : im(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const Qk = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function Jk(e) {
  return Nr(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function eb(e = {}) {
  const t = {
    ...e
  };
  function n(r) {
    const o = Object.entries(r);
    for (let s = 0; s < o.length; s++) {
      const [a, l] = o[s];
      !Jk(l) || a.startsWith("unstable_") ? delete r[a] : Nr(l) && (r[a] = {
        ...l
      }, n(r[a]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function au(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: r = {},
    spacing: o,
    palette: s = {},
    transitions: a = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
  // `generateThemeVars` is the closest identifier for checking that the `options` is a result of `createTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
  e.generateThemeVars === void 0)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name or follow the [docs](https://mui.com/material-ui/customization/css-theme-variables/usage/) to enable the feature." : ao(20));
  const f = Ad(s), d = $d(e);
  let h = rr(d, {
    mixins: Lk(d.breakpoints, r),
    palette: f,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: qk.slice(),
    typography: zk(f, l),
    transitions: Xk(a),
    zIndex: {
      ...Qk
    }
  });
  if (h = rr(h, u), h = t.reduce((g, y) => rr(g, y), h), process.env.NODE_ENV !== "production") {
    const g = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], y = (m, b) => {
      let v;
      for (v in m) {
        const E = m[v];
        if (g.includes(v) && Object.keys(E).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const S = Nt("", v);
            console.error([`MUI: The \`${b}\` component increases the CSS specificity of the \`${v}\` internal state.`, "You can not override it like this: ", JSON.stringify(m, null, 2), "", `Instead, you need to use the '&.${S}' syntax:`, JSON.stringify({
              root: {
                [`&.${S}`]: E
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          m[v] = {};
        }
      }
    };
    Object.keys(h.components).forEach((m) => {
      const b = h.components[m].styleOverrides;
      b && m.startsWith("Mui") && y(b, m);
    });
  }
  return h.unstable_sxConfig = {
    ...bs,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, h.unstable_sx = function(y) {
    return lo({
      sx: y,
      theme: this
    });
  }, h.toRuntimeSource = eb, h;
}
function lu(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const Zk = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = lu(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function tb(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function nb(e) {
  return e === "dark" ? Zk : [];
}
function eI(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: r,
    ...o
  } = e, s = Ad(t);
  return {
    palette: s,
    opacity: {
      ...tb(s.mode),
      ...n
    },
    overlays: r || nb(s.mode),
    ...o
  };
}
function tI(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const nI = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], rI = (e) => (t, n) => {
  const r = e.rootSelector || ":root", o = e.colorSchemeSelector;
  let s = o;
  if (o === "class" && (s = ".%s"), o === "data" && (s = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (s = `[${o}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const a = {};
      return nI(e.cssVarPrefix).forEach((l) => {
        a[l] = n[l], delete n[l];
      }), s === "media" ? {
        [r]: n,
        "@media (prefers-color-scheme: dark)": {
          [r]: a
        }
      } : s ? {
        [s.replace("%s", t)]: a,
        [`${r}, ${s.replace("%s", t)}`]: n
      } : {
        [r]: {
          ...n,
          ...a
        }
      };
    }
    if (s && s !== "media")
      return `${r}, ${s.replace("%s", String(t))}`;
  } else if (t) {
    if (s === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          [r]: n
        }
      };
    if (s)
      return s.replace("%s", String(t));
  }
  return r;
};
function oI(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function Z(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function Ti(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : Ky(e);
}
function hr(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = Si(Ti(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function iI(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const Hn = (e) => {
  try {
    return e();
  } catch {
  }
}, sI = (e = "mui") => Ek(e);
function mc(e, t, n, r) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const o = r === "dark" ? "dark" : "light";
  if (!n) {
    e[r] = eI({
      ...t,
      palette: {
        mode: o,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: s,
    ...a
  } = au({
    ...n,
    palette: {
      mode: o,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[r] = {
    ...t,
    palette: s,
    opacity: {
      ...tb(o),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || nb(o)
  }, a;
}
function aI(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: r,
    disableCssColorScheme: o = !1,
    cssVarPrefix: s = "mui",
    shouldSkipGeneratingVar: a = tI,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    rootSelector: c = ":root",
    ...u
  } = e, f = Object.keys(n)[0], d = r || (n.light && f !== "light" ? "light" : f), h = sI(s), {
    [d]: g,
    light: y,
    dark: m,
    ...b
  } = n, v = {
    ...b
  };
  let E = g;
  if ((d === "dark" && !("dark" in n) || d === "light" && !("light" in n)) && (E = !0), !E)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${d}\` option is either missing or invalid.` : ao(21, d));
  const S = mc(v, E, u, d);
  y && !v.light && mc(v, y, void 0, "light"), m && !v.dark && mc(v, m, void 0, "dark");
  let w = {
    defaultColorScheme: d,
    ...S,
    cssVarPrefix: s,
    colorSchemeSelector: l,
    rootSelector: c,
    getCssVar: h,
    colorSchemes: v,
    font: {
      ...Bk(S.typography),
      ...S.font
    },
    spacing: iI(u.spacing)
  };
  Object.keys(w.colorSchemes).forEach((N) => {
    const p = w.colorSchemes[N].palette, O = ($) => {
      const A = $.split("-"), D = A[1], M = A[2];
      return h($, p[D][M]);
    };
    if (p.mode === "light" && (Z(p.common, "background", "#fff"), Z(p.common, "onBackground", "#000")), p.mode === "dark" && (Z(p.common, "background", "#000"), Z(p.common, "onBackground", "#fff")), oI(p, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), p.mode === "light") {
      Z(p.Alert, "errorColor", ot(p.error.light, 0.6)), Z(p.Alert, "infoColor", ot(p.info.light, 0.6)), Z(p.Alert, "successColor", ot(p.success.light, 0.6)), Z(p.Alert, "warningColor", ot(p.warning.light, 0.6)), Z(p.Alert, "errorFilledBg", O("palette-error-main")), Z(p.Alert, "infoFilledBg", O("palette-info-main")), Z(p.Alert, "successFilledBg", O("palette-success-main")), Z(p.Alert, "warningFilledBg", O("palette-warning-main")), Z(p.Alert, "errorFilledColor", Hn(() => p.getContrastText(p.error.main))), Z(p.Alert, "infoFilledColor", Hn(() => p.getContrastText(p.info.main))), Z(p.Alert, "successFilledColor", Hn(() => p.getContrastText(p.success.main))), Z(p.Alert, "warningFilledColor", Hn(() => p.getContrastText(p.warning.main))), Z(p.Alert, "errorStandardBg", it(p.error.light, 0.9)), Z(p.Alert, "infoStandardBg", it(p.info.light, 0.9)), Z(p.Alert, "successStandardBg", it(p.success.light, 0.9)), Z(p.Alert, "warningStandardBg", it(p.warning.light, 0.9)), Z(p.Alert, "errorIconColor", O("palette-error-main")), Z(p.Alert, "infoIconColor", O("palette-info-main")), Z(p.Alert, "successIconColor", O("palette-success-main")), Z(p.Alert, "warningIconColor", O("palette-warning-main")), Z(p.AppBar, "defaultBg", O("palette-grey-100")), Z(p.Avatar, "defaultBg", O("palette-grey-400")), Z(p.Button, "inheritContainedBg", O("palette-grey-300")), Z(p.Button, "inheritContainedHoverBg", O("palette-grey-A100")), Z(p.Chip, "defaultBorder", O("palette-grey-400")), Z(p.Chip, "defaultAvatarColor", O("palette-grey-700")), Z(p.Chip, "defaultIconColor", O("palette-grey-700")), Z(p.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), Z(p.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), Z(p.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), Z(p.LinearProgress, "primaryBg", it(p.primary.main, 0.62)), Z(p.LinearProgress, "secondaryBg", it(p.secondary.main, 0.62)), Z(p.LinearProgress, "errorBg", it(p.error.main, 0.62)), Z(p.LinearProgress, "infoBg", it(p.info.main, 0.62)), Z(p.LinearProgress, "successBg", it(p.success.main, 0.62)), Z(p.LinearProgress, "warningBg", it(p.warning.main, 0.62)), Z(p.Skeleton, "bg", `rgba(${O("palette-text-primaryChannel")} / 0.11)`), Z(p.Slider, "primaryTrack", it(p.primary.main, 0.62)), Z(p.Slider, "secondaryTrack", it(p.secondary.main, 0.62)), Z(p.Slider, "errorTrack", it(p.error.main, 0.62)), Z(p.Slider, "infoTrack", it(p.info.main, 0.62)), Z(p.Slider, "successTrack", it(p.success.main, 0.62)), Z(p.Slider, "warningTrack", it(p.warning.main, 0.62));
      const $ = Us(p.background.default, 0.8);
      Z(p.SnackbarContent, "bg", $), Z(p.SnackbarContent, "color", Hn(() => p.getContrastText($))), Z(p.SpeedDialAction, "fabHoverBg", Us(p.background.paper, 0.15)), Z(p.StepConnector, "border", O("palette-grey-400")), Z(p.StepContent, "border", O("palette-grey-400")), Z(p.Switch, "defaultColor", O("palette-common-white")), Z(p.Switch, "defaultDisabledColor", O("palette-grey-100")), Z(p.Switch, "primaryDisabledColor", it(p.primary.main, 0.62)), Z(p.Switch, "secondaryDisabledColor", it(p.secondary.main, 0.62)), Z(p.Switch, "errorDisabledColor", it(p.error.main, 0.62)), Z(p.Switch, "infoDisabledColor", it(p.info.main, 0.62)), Z(p.Switch, "successDisabledColor", it(p.success.main, 0.62)), Z(p.Switch, "warningDisabledColor", it(p.warning.main, 0.62)), Z(p.TableCell, "border", it(Ws(p.divider, 1), 0.88)), Z(p.Tooltip, "bg", Ws(p.grey[700], 0.92));
    }
    if (p.mode === "dark") {
      Z(p.Alert, "errorColor", it(p.error.light, 0.6)), Z(p.Alert, "infoColor", it(p.info.light, 0.6)), Z(p.Alert, "successColor", it(p.success.light, 0.6)), Z(p.Alert, "warningColor", it(p.warning.light, 0.6)), Z(p.Alert, "errorFilledBg", O("palette-error-dark")), Z(p.Alert, "infoFilledBg", O("palette-info-dark")), Z(p.Alert, "successFilledBg", O("palette-success-dark")), Z(p.Alert, "warningFilledBg", O("palette-warning-dark")), Z(p.Alert, "errorFilledColor", Hn(() => p.getContrastText(p.error.dark))), Z(p.Alert, "infoFilledColor", Hn(() => p.getContrastText(p.info.dark))), Z(p.Alert, "successFilledColor", Hn(() => p.getContrastText(p.success.dark))), Z(p.Alert, "warningFilledColor", Hn(() => p.getContrastText(p.warning.dark))), Z(p.Alert, "errorStandardBg", ot(p.error.light, 0.9)), Z(p.Alert, "infoStandardBg", ot(p.info.light, 0.9)), Z(p.Alert, "successStandardBg", ot(p.success.light, 0.9)), Z(p.Alert, "warningStandardBg", ot(p.warning.light, 0.9)), Z(p.Alert, "errorIconColor", O("palette-error-main")), Z(p.Alert, "infoIconColor", O("palette-info-main")), Z(p.Alert, "successIconColor", O("palette-success-main")), Z(p.Alert, "warningIconColor", O("palette-warning-main")), Z(p.AppBar, "defaultBg", O("palette-grey-900")), Z(p.AppBar, "darkBg", O("palette-background-paper")), Z(p.AppBar, "darkColor", O("palette-text-primary")), Z(p.Avatar, "defaultBg", O("palette-grey-600")), Z(p.Button, "inheritContainedBg", O("palette-grey-800")), Z(p.Button, "inheritContainedHoverBg", O("palette-grey-700")), Z(p.Chip, "defaultBorder", O("palette-grey-700")), Z(p.Chip, "defaultAvatarColor", O("palette-grey-300")), Z(p.Chip, "defaultIconColor", O("palette-grey-300")), Z(p.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), Z(p.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), Z(p.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), Z(p.LinearProgress, "primaryBg", ot(p.primary.main, 0.5)), Z(p.LinearProgress, "secondaryBg", ot(p.secondary.main, 0.5)), Z(p.LinearProgress, "errorBg", ot(p.error.main, 0.5)), Z(p.LinearProgress, "infoBg", ot(p.info.main, 0.5)), Z(p.LinearProgress, "successBg", ot(p.success.main, 0.5)), Z(p.LinearProgress, "warningBg", ot(p.warning.main, 0.5)), Z(p.Skeleton, "bg", `rgba(${O("palette-text-primaryChannel")} / 0.13)`), Z(p.Slider, "primaryTrack", ot(p.primary.main, 0.5)), Z(p.Slider, "secondaryTrack", ot(p.secondary.main, 0.5)), Z(p.Slider, "errorTrack", ot(p.error.main, 0.5)), Z(p.Slider, "infoTrack", ot(p.info.main, 0.5)), Z(p.Slider, "successTrack", ot(p.success.main, 0.5)), Z(p.Slider, "warningTrack", ot(p.warning.main, 0.5));
      const $ = Us(p.background.default, 0.98);
      Z(p.SnackbarContent, "bg", $), Z(p.SnackbarContent, "color", Hn(() => p.getContrastText($))), Z(p.SpeedDialAction, "fabHoverBg", Us(p.background.paper, 0.15)), Z(p.StepConnector, "border", O("palette-grey-600")), Z(p.StepContent, "border", O("palette-grey-600")), Z(p.Switch, "defaultColor", O("palette-grey-300")), Z(p.Switch, "defaultDisabledColor", O("palette-grey-600")), Z(p.Switch, "primaryDisabledColor", ot(p.primary.main, 0.55)), Z(p.Switch, "secondaryDisabledColor", ot(p.secondary.main, 0.55)), Z(p.Switch, "errorDisabledColor", ot(p.error.main, 0.55)), Z(p.Switch, "infoDisabledColor", ot(p.info.main, 0.55)), Z(p.Switch, "successDisabledColor", ot(p.success.main, 0.55)), Z(p.Switch, "warningDisabledColor", ot(p.warning.main, 0.55)), Z(p.TableCell, "border", ot(Ws(p.divider, 1), 0.68)), Z(p.Tooltip, "bg", Ws(p.grey[700], 0.92));
    }
    hr(p.background, "default"), hr(p.background, "paper"), hr(p.common, "background"), hr(p.common, "onBackground"), hr(p, "divider"), Object.keys(p).forEach(($) => {
      const A = p[$];
      $ !== "tonalOffset" && A && typeof A == "object" && (A.main && Z(p[$], "mainChannel", Si(Ti(A.main))), A.light && Z(p[$], "lightChannel", Si(Ti(A.light))), A.dark && Z(p[$], "darkChannel", Si(Ti(A.dark))), A.contrastText && Z(p[$], "contrastTextChannel", Si(Ti(A.contrastText))), $ === "text" && (hr(p[$], "primary"), hr(p[$], "secondary")), $ === "action" && (A.active && hr(p[$], "active"), A.selected && hr(p[$], "selected")));
    });
  }), w = t.reduce((N, p) => rr(N, p), w);
  const x = {
    prefix: s,
    disableCssColorScheme: o,
    shouldSkipGeneratingVar: a,
    getSelector: rI(w)
  }, {
    vars: T,
    generateThemeVars: R,
    generateStyleSheets: I
  } = Rk(w, x);
  return w.vars = T, Object.entries(w.colorSchemes[w.defaultColorScheme]).forEach(([N, p]) => {
    w[N] = p;
  }), w.generateThemeVars = R, w.generateStyleSheets = I, w.generateSpacing = function() {
    return Wy(u.spacing, Od(this));
  }, w.getColorSchemeSelector = $k(l), w.spacing = w.generateSpacing(), w.shouldSkipGeneratingVar = a, w.unstable_sxConfig = {
    ...bs,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, w.unstable_sx = function(p) {
    return lo({
      sx: p,
      theme: this
    });
  }, w.toRuntimeSource = eb, w;
}
function sm(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: Ad({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function rb(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: r = !1,
    colorSchemes: o = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: s = n == null ? void 0 : n.mode,
    ...a
  } = e, l = s || "light", c = o == null ? void 0 : o[l], u = {
    ...o,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (r === !1) {
    if (!("colorSchemes" in e))
      return au(e, ...t);
    let f = n;
    "palette" in e || u[l] && (u[l] !== !0 ? f = u[l].palette : l === "dark" && (f = {
      mode: "dark"
    }));
    const d = au({
      ...e,
      palette: f
    }, ...t);
    return d.defaultColorScheme = l, d.colorSchemes = u, d.palette.mode === "light" && (d.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: d.palette
    }, sm(d, "dark", u.dark)), d.palette.mode === "dark" && (d.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: d.palette
    }, sm(d, "light", u.light)), d;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), aI({
    ...a,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof r != "boolean" && r
  }, ...t);
}
const Md = rb();
function _d() {
  const e = kd(Md);
  return process.env.NODE_ENV !== "production" && C.useDebugValue(e), e[xl] || e;
}
function ob(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const fr = (e) => ob(e) && e !== "classes", Be = ck({
  themeId: xl,
  defaultTheme: Md,
  rootShouldForwardProp: fr
});
function _t(e, t, n = void 0) {
  const r = {};
  for (const o in e) {
    const s = e[o];
    let a = "", l = !0;
    for (let c = 0; c < s.length; c += 1) {
      const u = s[c];
      u && (a += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (a += " " + n[u]));
    }
    r[o] = a;
  }
  return r;
}
let am = 0;
function lI(e) {
  const [t, n] = C.useState(e), r = e || t;
  return C.useEffect(() => {
    t == null && (am += 1, n(`mui-${am}`));
  }, [t]), r;
}
const cI = {
  ...C
}, lm = cI.useId;
function ib(e) {
  if (lm !== void 0) {
    const t = lm();
    return e ?? t;
  }
  return lI(e);
}
const Yr = i.oneOfType([i.func, i.object]);
function sb(e) {
  return /* @__PURE__ */ k(Uy, {
    ...e,
    defaultTheme: Md,
    themeId: xl
  });
}
process.env.NODE_ENV !== "production" && (sb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool])
});
function uI(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ k(sb, {
        styles: typeof e == "function" ? (r) => e({
          theme: r,
          ...n
        }) : e
      })
    );
  };
}
process.env.NODE_ENV !== "production" && (i.node, i.object.isRequired);
function Wt(e) {
  return Sk(e);
}
function vs(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...r) {
    return e(...r) || t(...r);
  };
}
function dI(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function fI(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof s == "function" && !dI(s) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const ab = vs(i.elementType, fI);
function pI(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function lb(e, t, n, r, o) {
  const s = e[t], a = o || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = s.type;
  return typeof c == "function" && !pI(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const xs = vs(i.element, lb);
xs.isRequired = vs(i.element.isRequired, lb);
const mI = "exact-prop: ​";
function cb(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [mI]: (t) => {
      const n = Object.keys(t).filter((r) => !e.hasOwnProperty(r));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((r) => `\`${r}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
function es(e, t, n, r, o) {
  if (process.env.NODE_ENV === "production")
    return null;
  const s = e[t], a = o || t;
  return s == null ? null : s && s.nodeType !== 1 ? new Error(`Invalid ${r} \`${a}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
function Ft(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : ao(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function cm(...e) {
  return e.reduce((t, n) => n == null ? t : function(...o) {
    t.apply(this, o), n.apply(this, o);
  }, () => {
  });
}
function ub(e, t = 166) {
  let n;
  function r(...o) {
    const s = () => {
      e.apply(this, o);
    };
    clearTimeout(n), n = setTimeout(s, t);
  }
  return r.clear = () => {
    clearTimeout(n);
  }, r;
}
function hc(e, t) {
  var n, r, o;
  return /* @__PURE__ */ C.isValidElement(e) && t.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    e.type.muiName ?? ((o = (r = (n = e.type) == null ? void 0 : n._payload) == null ? void 0 : r.value) == null ? void 0 : o.muiName)
  ) !== -1;
}
function Vn(e) {
  return e && e.ownerDocument || document;
}
function Cr(e) {
  return Vn(e).defaultView || window;
}
function um(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
const co = typeof window < "u" ? C.useLayoutEffect : C.useEffect;
function dm({
  controlled: e,
  default: t,
  name: n,
  state: r = "value"
}) {
  const {
    current: o
  } = C.useRef(e !== void 0), [s, a] = C.useState(t), l = o ? e : s;
  if (process.env.NODE_ENV !== "production") {
    C.useEffect(() => {
      o !== (e !== void 0) && console.error([`MUI: A component is changing the ${o ? "" : "un"}controlled ${r} state of ${n} to be ${o ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [r, n, e]);
    const {
      current: u
    } = C.useRef(t);
    C.useEffect(() => {
      !o && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${r} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = C.useCallback((u) => {
    o || a(u);
  }, []);
  return [l, c];
}
function cu(e) {
  const t = C.useRef(e);
  return co(() => {
    t.current = e;
  }), C.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function Mn(...e) {
  const t = C.useRef(void 0), n = C.useCallback((r) => {
    const o = e.map((s) => {
      if (s == null)
        return null;
      if (typeof s == "function") {
        const a = s, l = a(r);
        return typeof l == "function" ? l : () => {
          a(null);
        };
      }
      return s.current = r, () => {
        s.current = null;
      };
    });
    return () => {
      o.forEach((s) => s == null ? void 0 : s());
    };
  }, e);
  return C.useMemo(() => e.every((r) => r == null) ? null : (r) => {
    t.current && (t.current(), t.current = void 0), r != null && (t.current = n(r));
  }, e);
}
const fm = {};
function hI(e, t) {
  const n = C.useRef(fm);
  return n.current === fm && (n.current = e(t)), n;
}
const gI = [];
function yI(e) {
  C.useEffect(e, gI);
}
class Dd {
  constructor() {
    $r(this, "currentId", null);
    $r(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    $r(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new Dd();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
}
function bI() {
  const e = hI(Dd.create).current;
  return yI(e.disposeEffect), e;
}
function db(e = window) {
  const t = e.document.documentElement.clientWidth;
  return e.innerWidth - t;
}
function vI(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function fb(e, t, n, r) {
  const o = e[t];
  if (o == null || !Number.isInteger(o)) {
    const s = vI(o);
    return new RangeError(`Invalid ${r} \`${t}\` of type \`${s}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function pb(e, t, ...n) {
  return e[t] === void 0 ? null : fb(e, t, ...n);
}
function uu() {
  return null;
}
pb.isRequired = fb;
uu.isRequired = uu;
const mb = process.env.NODE_ENV === "production" ? uu : pb;
function Dt(e, t, n = "Mui") {
  const r = {};
  return t.forEach((o) => {
    r[o] = Nt(e, o, n);
  }), r;
}
function xI(e) {
  return typeof e == "string";
}
function hb(e, t, n) {
  return e === void 0 || xI(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function gb(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((r) => r.match(/^on[A-Z]/) && typeof e[r] == "function" && !t.includes(r)).forEach((r) => {
    n[r] = e[r];
  }), n;
}
function pm(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function yb(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: r,
    externalForwardedProps: o,
    className: s
  } = e;
  if (!t) {
    const g = ge(n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), y = {
      ...n == null ? void 0 : n.style,
      ...o == null ? void 0 : o.style,
      ...r == null ? void 0 : r.style
    }, m = {
      ...n,
      ...o,
      ...r
    };
    return g.length > 0 && (m.className = g), Object.keys(y).length > 0 && (m.style = y), {
      props: m,
      internalRef: void 0
    };
  }
  const a = gb({
    ...o,
    ...r
  }), l = pm(r), c = pm(o), u = t(a), f = ge(u == null ? void 0 : u.className, n == null ? void 0 : n.className, s, o == null ? void 0 : o.className, r == null ? void 0 : r.className), d = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...o == null ? void 0 : o.style,
    ...r == null ? void 0 : r.style
  }, h = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return f.length > 0 && (h.className = f), Object.keys(d).length > 0 && (h.style = d), {
    props: h,
    internalRef: u.ref
  };
}
function bb(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function wI(e) {
  var d;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: r,
    skipResolvingSlotProps: o = !1,
    ...s
  } = e, a = o ? {} : bb(n, r), {
    props: l,
    internalRef: c
  } = yb({
    ...s,
    externalSlotProps: a
  }), u = Mn(c, a == null ? void 0 : a.ref, (d = e.additionalProps) == null ? void 0 : d.ref);
  return hb(t, {
    ...l,
    ref: u
  }, r);
}
function ws(e) {
  var t;
  return parseInt(C.version, 10) >= 19 ? ((t = e == null ? void 0 : e.props) == null ? void 0 : t.ref) || null : (e == null ? void 0 : e.ref) || null;
}
function Hs(e) {
  return parseInt(e, 10) || 0;
}
const SI = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function TI(e) {
  for (const t in e)
    return !1;
  return !0;
}
function mm(e) {
  return TI(e) || e.outerHeightStyle === 0 && !e.overflowing;
}
const vb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    onChange: r,
    maxRows: o,
    minRows: s = 1,
    style: a,
    value: l,
    ...c
  } = t, {
    current: u
  } = C.useRef(l != null), f = C.useRef(null), d = Mn(n, f), h = C.useRef(null), g = C.useRef(null), y = C.useCallback(() => {
    const S = f.current, w = g.current;
    if (!S || !w)
      return;
    const T = Cr(S).getComputedStyle(S);
    if (T.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    w.style.width = T.width, w.value = S.value || t.placeholder || "x", w.value.slice(-1) === `
` && (w.value += " ");
    const R = T.boxSizing, I = Hs(T.paddingBottom) + Hs(T.paddingTop), N = Hs(T.borderBottomWidth) + Hs(T.borderTopWidth), p = w.scrollHeight;
    w.value = "x";
    const O = w.scrollHeight;
    let $ = p;
    s && ($ = Math.max(Number(s) * O, $)), o && ($ = Math.min(Number(o) * O, $)), $ = Math.max($, O);
    const A = $ + (R === "border-box" ? I + N : 0), D = Math.abs($ - p) <= 1;
    return {
      outerHeightStyle: A,
      overflowing: D
    };
  }, [o, s, t.placeholder]), m = cu(() => {
    const S = f.current, w = y();
    if (!S || !w || mm(w))
      return !1;
    const x = w.outerHeightStyle;
    return h.current != null && h.current !== x;
  }), b = C.useCallback(() => {
    const S = f.current, w = y();
    if (!S || !w || mm(w))
      return;
    const x = w.outerHeightStyle;
    h.current !== x && (h.current = x, S.style.height = `${x}px`), S.style.overflow = w.overflowing ? "hidden" : "";
  }, [y]), v = C.useRef(-1);
  co(() => {
    const S = ub(b), w = f == null ? void 0 : f.current;
    if (!w)
      return;
    const x = Cr(w);
    x.addEventListener("resize", S);
    let T;
    return typeof ResizeObserver < "u" && (T = new ResizeObserver(() => {
      m() && (T.unobserve(w), cancelAnimationFrame(v.current), b(), v.current = requestAnimationFrame(() => {
        T.observe(w);
      }));
    }), T.observe(w)), () => {
      S.clear(), cancelAnimationFrame(v.current), x.removeEventListener("resize", S), T && T.disconnect();
    };
  }, [y, b, m]), co(() => {
    b();
  });
  const E = (S) => {
    u || b(), r && r(S);
  };
  return /* @__PURE__ */ Ce(C.Fragment, {
    children: [/* @__PURE__ */ k("textarea", {
      value: l,
      onChange: E,
      ref: d,
      rows: s,
      style: a,
      ...c
    }), /* @__PURE__ */ k("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: g,
      tabIndex: -1,
      style: {
        ...SI.shadow,
        ...a,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (vb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: i.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  onChange: i.func,
  /**
   * @ignore
   */
  placeholder: i.string,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * @ignore
   */
  value: i.oneOfType([i.arrayOf(i.string), i.number, i.string])
});
function du(e) {
  return typeof e == "string";
}
function ti({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((r, o) => (r[o] = e[o], n && typeof e[o] > "u" && (r[o] = n[o]), r), {});
}
const Pl = /* @__PURE__ */ C.createContext(void 0);
process.env.NODE_ENV !== "production" && (Pl.displayName = "FormControlContext");
function ni() {
  return C.useContext(Pl);
}
const Qt = Tk;
function hm(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function Pa(e, t = !1) {
  return e && (hm(e.value) && e.value !== "" || t && hm(e.defaultValue) && e.defaultValue !== "");
}
function EI(e) {
  return e.startAdornment;
}
function CI(e) {
  return Nt("MuiInputBase", e);
}
const Yo = Dt("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var gm;
const Nl = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${Ft(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, Al = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, OI = (e) => {
  const {
    classes: t,
    color: n,
    disabled: r,
    error: o,
    endAdornment: s,
    focused: a,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: f,
    readOnly: d,
    size: h,
    startAdornment: g,
    type: y
  } = e, m = {
    root: ["root", `color${Ft(n)}`, r && "disabled", o && "error", c && "fullWidth", a && "focused", l && "formControl", h && h !== "medium" && `size${Ft(h)}`, f && "multiline", g && "adornedStart", s && "adornedEnd", u && "hiddenLabel", d && "readOnly"],
    input: ["input", r && "disabled", y === "search" && "inputTypeSearch", f && "inputMultiline", h === "small" && "inputSizeSmall", u && "inputHiddenLabel", g && "inputAdornedStart", s && "inputAdornedEnd", d && "readOnly"]
  };
  return _t(m, CI, t);
}, Ml = Be("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: Nl
})(Qt(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${Yo.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), _l = Be("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: Al
})(Qt(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, r = {
    opacity: "0 !important"
  }, o = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${Yo.formControl} &`]: {
      "&::-webkit-input-placeholder": r,
      "&::-moz-placeholder": r,
      // Firefox 19+
      "&::-ms-input-placeholder": r,
      // Edge
      "&:focus::-webkit-input-placeholder": o,
      "&:focus::-moz-placeholder": o,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": o
      // Edge
    },
    [`&.${Yo.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: s
      }) => !s.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), ym = uI({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), Dl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Wt({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": o,
    autoComplete: s,
    autoFocus: a,
    className: l,
    color: c,
    components: u = {},
    componentsProps: f = {},
    defaultValue: d,
    disabled: h,
    disableInjectingGlobalStyles: g,
    endAdornment: y,
    error: m,
    fullWidth: b = !1,
    id: v,
    inputComponent: E = "input",
    inputProps: S = {},
    inputRef: w,
    margin: x,
    maxRows: T,
    minRows: R,
    multiline: I = !1,
    name: N,
    onBlur: p,
    onChange: O,
    onClick: $,
    onFocus: A,
    onKeyDown: D,
    onKeyUp: M,
    placeholder: _,
    readOnly: L,
    renderSuffix: U,
    rows: z,
    size: j,
    slotProps: V = {},
    slots: K = {},
    startAdornment: Y,
    type: te = "text",
    value: X,
    ...ee
  } = r, re = S.value != null ? S.value : X, {
    current: q
  } = C.useRef(re != null), Q = C.useRef(), G = C.useCallback((oe) => {
    process.env.NODE_ENV !== "production" && oe && oe.nodeName !== "INPUT" && !oe.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), ne = Mn(Q, w, S.ref, G), [B, pe] = C.useState(!1), ae = ni();
  process.env.NODE_ENV !== "production" && C.useEffect(() => {
    if (ae)
      return ae.registerEffect();
  }, [ae]);
  const me = ti({
    props: r,
    muiFormControl: ae,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  me.focused = ae ? ae.focused : B, C.useEffect(() => {
    !ae && h && B && (pe(!1), p && p());
  }, [ae, h, B, p]);
  const Me = ae && ae.onFilled, Re = ae && ae.onEmpty, Oe = C.useCallback((oe) => {
    Pa(oe) ? Me && Me() : Re && Re();
  }, [Me, Re]);
  co(() => {
    q && Oe({
      value: re
    });
  }, [re, Oe, q]);
  const we = (oe) => {
    A && A(oe), S.onFocus && S.onFocus(oe), ae && ae.onFocus ? ae.onFocus(oe) : pe(!0);
  }, Pe = (oe) => {
    p && p(oe), S.onBlur && S.onBlur(oe), ae && ae.onBlur ? ae.onBlur(oe) : pe(!1);
  }, Se = (oe, ...Le) => {
    if (!q) {
      const Ve = oe.target || Q.current;
      if (Ve == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : ao(1));
      Oe({
        value: Ve.value
      });
    }
    S.onChange && S.onChange(oe, ...Le), O && O(oe, ...Le);
  };
  C.useEffect(() => {
    Oe(Q.current);
  }, []);
  const P = (oe) => {
    Q.current && oe.currentTarget === oe.target && Q.current.focus(), $ && $(oe);
  };
  let W = E, H = S;
  I && W === "input" && (z ? (process.env.NODE_ENV !== "production" && (R || T) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), H = {
    type: void 0,
    minRows: z,
    maxRows: z,
    ...H
  }) : H = {
    type: void 0,
    maxRows: T,
    minRows: R,
    ...H
  }, W = vb);
  const le = (oe) => {
    Oe(oe.animationName === "mui-auto-fill-cancel" ? Q.current : {
      value: "x"
    });
  };
  C.useEffect(() => {
    ae && ae.setAdornedStart(!!Y);
  }, [ae, Y]);
  const se = {
    ...r,
    color: me.color || "primary",
    disabled: me.disabled,
    endAdornment: y,
    error: me.error,
    focused: me.focused,
    formControl: ae,
    fullWidth: b,
    hiddenLabel: me.hiddenLabel,
    multiline: I,
    size: me.size,
    startAdornment: Y,
    type: te
  }, ie = OI(se), ue = K.root || u.Root || Ml, be = V.root || f.root || {}, xe = K.input || u.Input || _l;
  return H = {
    ...H,
    ...V.input ?? f.input
  }, /* @__PURE__ */ Ce(C.Fragment, {
    children: [!g && typeof ym == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (gm || (gm = /* @__PURE__ */ k(ym, {}))), /* @__PURE__ */ Ce(ue, {
      ...be,
      ref: n,
      onClick: P,
      ...ee,
      ...!du(ue) && {
        ownerState: {
          ...se,
          ...be.ownerState
        }
      },
      className: ge(ie.root, be.className, l, L && "MuiInputBase-readOnly"),
      children: [Y, /* @__PURE__ */ k(Pl.Provider, {
        value: null,
        children: /* @__PURE__ */ k(xe, {
          "aria-invalid": me.error,
          "aria-describedby": o,
          autoComplete: s,
          autoFocus: a,
          defaultValue: d,
          disabled: me.disabled,
          id: v,
          onAnimationStart: le,
          name: N,
          placeholder: _,
          readOnly: L,
          required: me.required,
          rows: z,
          value: re,
          onKeyDown: D,
          onKeyUp: M,
          type: te,
          ...H,
          ...!du(xe) && {
            as: W,
            ownerState: {
              ...se,
              ...H.ownerState
            }
          },
          ref: ne,
          className: ge(ie.input, H.className, L && "MuiInputBase-readOnly"),
          onBlur: Pe,
          onChange: Se,
          onFocus: we
        })
      }), y, U ? U({
        ...me,
        startAdornment: Y
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (Dl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": i.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: ab,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Yr,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: i.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: i.func,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * @ignore
   */
  onKeyUp: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * @ignore
   */
  renderSuffix: i.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The size of the component.
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
function RI(e) {
  return typeof e.main == "string";
}
function $I(e, t = []) {
  if (!RI(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function Bl(e = []) {
  return ([, t]) => t && $I(t, e);
}
function kI(e) {
  return Nt("MuiInput", e);
}
const fi = {
  ...Yo,
  ...Dt("MuiInput", ["root", "underline", "input"])
}, II = (e) => {
  const {
    classes: t,
    disableUnderline: n
  } = e, o = _t({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, kI, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...o
  };
}, PI = Be(Ml, {
  shouldForwardProp: (e) => fr(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...Nl(e, t), !n.disableUnderline && t.underline];
  }
})(Qt(({
  theme: e
}) => {
  let n = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (n = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), {
    position: "relative",
    variants: [{
      props: ({
        ownerState: r
      }) => r.formControl,
      style: {
        "label + &": {
          marginTop: 16
        }
      }
    }, {
      props: ({
        ownerState: r
      }) => !r.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${fi.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${fi.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${fi.disabled}, .${fi.error}):before`]: {
          borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${fi.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(Bl()).map(([r]) => ({
      props: {
        color: r,
        disableUnderline: !1
      },
      style: {
        "&::after": {
          borderBottom: `2px solid ${(e.vars || e).palette[r].main}`
        }
      }
    }))]
  };
})), NI = Be(_l, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: Al
})({}), Fl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Wt({
    props: t,
    name: "MuiInput"
  }), {
    disableUnderline: o = !1,
    components: s = {},
    componentsProps: a,
    fullWidth: l = !1,
    inputComponent: c = "input",
    multiline: u = !1,
    slotProps: f,
    slots: d = {},
    type: h = "text",
    ...g
  } = r, y = II(r), b = {
    root: {
      ownerState: {
        disableUnderline: o
      }
    }
  }, v = f ?? a ? rr(f ?? a, b) : b, E = d.root ?? s.Root ?? PI, S = d.input ?? s.Input ?? NI;
  return /* @__PURE__ */ k(Dl, {
    slots: {
      root: E,
      input: S
    },
    slotProps: v,
    fullWidth: l,
    inputComponent: c,
    multiline: u,
    ref: n,
    type: h,
    ...g,
    classes: y
  });
});
process.env.NODE_ENV !== "production" && (Fl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, the `input` will not have an underline.
   * @default false
   */
  disableUnderline: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Yr,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
Fl.muiName = "Input";
function AI(e) {
  return Nt("MuiFilledInput", e);
}
const Qr = {
  ...Yo,
  ...Dt("MuiFilledInput", ["root", "underline", "input", "adornedStart", "adornedEnd", "sizeSmall", "multiline", "hiddenLabel"])
};
function MI(e) {
  return Nt("MuiSvgIcon", e);
}
Dt("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const _I = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: r
  } = e, o = {
    root: ["root", t !== "inherit" && `color${Ft(t)}`, `fontSize${Ft(n)}`]
  };
  return _t(o, MI, r);
}, DI = Be("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${Ft(n.color)}`], t[`fontSize${Ft(n.fontSize)}`]];
  }
})(Qt(({
  theme: e
}) => {
  var t, n, r, o, s, a, l, c, u, f, d, h, g, y;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (o = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : o.call(t, "fill", {
      duration: (r = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : r.shorter
    }),
    variants: [
      {
        props: (m) => !m.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((a = (s = e.typography) == null ? void 0 : s.pxToRem) == null ? void 0 : a.call(s, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((f = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : f.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, m]) => m && m.main).map(([m]) => {
        var b, v;
        return {
          props: {
            color: m
          },
          style: {
            color: (v = (b = (e.vars ?? e).palette) == null ? void 0 : b[m]) == null ? void 0 : v.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (h = (d = (e.vars ?? e).palette) == null ? void 0 : d.action) == null ? void 0 : h.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (y = (g = (e.vars ?? e).palette) == null ? void 0 : g.action) == null ? void 0 : y.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), Na = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Wt({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: o,
    className: s,
    color: a = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: f = !1,
    titleAccess: d,
    viewBox: h = "0 0 24 24",
    ...g
  } = r, y = /* @__PURE__ */ C.isValidElement(o) && o.type === "svg", m = {
    ...r,
    color: a,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: f,
    viewBox: h,
    hasSvgAsChild: y
  }, b = {};
  f || (b.viewBox = h);
  const v = _I(m);
  return /* @__PURE__ */ Ce(DI, {
    as: l,
    className: ge(v.root, s),
    focusable: "false",
    color: u,
    "aria-hidden": d ? void 0 : !0,
    role: d ? "img" : void 0,
    ref: n,
    ...b,
    ...g,
    ...y && o.props,
    ownerState: m,
    children: [y ? o.props.children : o, d ? /* @__PURE__ */ k("title", {
      children: d
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (Na.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: i.oneOfType([i.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: i.oneOfType([i.oneOf(["inherit", "large", "medium", "small"]), i.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: i.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: i.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: i.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: i.string
});
Na.muiName = "SvgIcon";
function BI(e, t) {
  function n(r, o) {
    return /* @__PURE__ */ k(Na, {
      "data-testid": process.env.NODE_ENV !== "production" ? `${t}Icon` : void 0,
      ref: o,
      ...r,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = Na.muiName, /* @__PURE__ */ C.memo(/* @__PURE__ */ C.forwardRef(n));
}
function FI(e, t) {
  const n = e.charCodeAt(2);
  return e[0] === "o" && e[1] === "n" && n >= 65 && n <= 90 && typeof t == "function";
}
function jI(e, t) {
  if (!e)
    return t;
  function n(a, l) {
    const c = {};
    return Object.keys(l).forEach((u) => {
      FI(u, l[u]) && typeof a[u] == "function" && (c[u] = (...f) => {
        a[u](...f), l[u](...f);
      });
    }), c;
  }
  if (typeof e == "function" || typeof t == "function")
    return (a) => {
      const l = typeof t == "function" ? t(a) : t, c = typeof e == "function" ? e({
        ...a,
        ...l
      }) : e, u = ge(a == null ? void 0 : a.className, l == null ? void 0 : l.className, c == null ? void 0 : c.className), f = n(c, l);
      return {
        ...l,
        ...c,
        ...f,
        ...!!u && {
          className: u
        },
        ...(l == null ? void 0 : l.style) && (c == null ? void 0 : c.style) && {
          style: {
            ...l.style,
            ...c.style
          }
        },
        ...(l == null ? void 0 : l.sx) && (c == null ? void 0 : c.sx) && {
          sx: [...Array.isArray(l.sx) ? l.sx : [l.sx], ...Array.isArray(c.sx) ? c.sx : [c.sx]]
        }
      };
    };
  const r = t, o = n(e, r), s = ge(r == null ? void 0 : r.className, e == null ? void 0 : e.className);
  return {
    ...t,
    ...e,
    ...o,
    ...!!s && {
      className: s
    },
    ...(r == null ? void 0 : r.style) && (e == null ? void 0 : e.style) && {
      style: {
        ...r.style,
        ...e.style
      }
    },
    ...(r == null ? void 0 : r.sx) && (e == null ? void 0 : e.sx) && {
      sx: [...Array.isArray(r.sx) ? r.sx : [r.sx], ...Array.isArray(e.sx) ? e.sx : [e.sx]]
    }
  };
}
const LI = (e) => {
  const {
    classes: t,
    disableUnderline: n,
    startAdornment: r,
    endAdornment: o,
    size: s,
    hiddenLabel: a,
    multiline: l
  } = e, c = {
    root: ["root", !n && "underline", r && "adornedStart", o && "adornedEnd", s === "small" && `size${Ft(s)}`, a && "hiddenLabel", l && "multiline"],
    input: ["input"]
  }, u = _t(c, AI, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...u
  };
}, VI = Be(Ml, {
  shouldForwardProp: (e) => fr(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...Nl(e, t), !n.disableUnderline && t.underline];
  }
})(Qt(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", r = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", o = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", s = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : o,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r
      }
    },
    [`&.${Qr.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : r
    },
    [`&.${Qr.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : s
    },
    variants: [{
      props: ({
        ownerState: a
      }) => !a.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${Qr.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${Qr.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${Qr.disabled}, .${Qr.error}):before`]: {
          borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
        },
        [`&.${Qr.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(Bl()).map(([a]) => {
      var l;
      return {
        props: {
          disableUnderline: !1,
          color: a
        },
        style: {
          "&::after": {
            borderBottom: `2px solid ${(l = (e.vars || e).palette[a]) == null ? void 0 : l.main}`
          }
        }
      };
    }), {
      props: ({
        ownerState: a
      }) => a.startAdornment,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.endAdornment,
      style: {
        paddingRight: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline,
      style: {
        padding: "25px 12px 8px"
      }
    }, {
      props: ({
        ownerState: a,
        size: l
      }) => a.multiline && l === "small",
      style: {
        paddingTop: 21,
        paddingBottom: 4
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel,
      style: {
        paddingTop: 16,
        paddingBottom: 17
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel && a.size === "small",
      style: {
        paddingTop: 8,
        paddingBottom: 9
      }
    }]
  };
})), zI = Be(_l, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: Al
})(Qt(({
  theme: e
}) => ({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel,
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel && t.size === "small",
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      paddingTop: 0,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0
    }
  }]
}))), jl = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Wt({
    props: t,
    name: "MuiFilledInput"
  }), {
    disableUnderline: o = !1,
    components: s = {},
    componentsProps: a,
    fullWidth: l = !1,
    hiddenLabel: c,
    // declare here to prevent spreading to DOM
    inputComponent: u = "input",
    multiline: f = !1,
    slotProps: d,
    slots: h = {},
    type: g = "text",
    ...y
  } = r, m = {
    ...r,
    disableUnderline: o,
    fullWidth: l,
    inputComponent: u,
    multiline: f,
    type: g
  }, b = LI(r), v = {
    root: {
      ownerState: m
    },
    input: {
      ownerState: m
    }
  }, E = d ?? a ? rr(v, d ?? a) : v, S = h.root ?? s.Root ?? VI, w = h.input ?? s.Input ?? zI;
  return /* @__PURE__ */ k(Dl, {
    slots: {
      root: S,
      input: w
    },
    slotProps: E,
    fullWidth: l,
    inputComponent: u,
    multiline: f,
    ref: n,
    type: g,
    ...y,
    classes: b
  });
});
process.env.NODE_ENV !== "production" && (jl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, the input will not have an underline.
   * @default false
   */
  disableUnderline: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Yr,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
jl.muiName = "Input";
var bm;
const WI = Be("fieldset", {
  shouldForwardProp: fr
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), UI = Be("legend", {
  shouldForwardProp: fr
})(Qt(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function xb(e) {
  const {
    children: t,
    classes: n,
    className: r,
    label: o,
    notched: s,
    ...a
  } = e, l = o != null && o !== "", c = {
    ...e,
    notched: s,
    withLabel: l
  };
  return /* @__PURE__ */ k(WI, {
    "aria-hidden": !0,
    className: r,
    ownerState: c,
    ...a,
    children: /* @__PURE__ */ k(UI, {
      ownerState: c,
      children: l ? /* @__PURE__ */ k("span", {
        children: o
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        bm || (bm = /* @__PURE__ */ k("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (xb.propTypes = {
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The label.
   */
  label: i.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool.isRequired,
  /**
   * @ignore
   */
  style: i.object
});
function HI(e) {
  return Nt("MuiOutlinedInput", e);
}
const qn = {
  ...Yo,
  ...Dt("MuiOutlinedInput", ["root", "notchedOutline", "input"])
}, qI = (e) => {
  const {
    classes: t
  } = e, r = _t({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, HI, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
}, GI = Be(Ml, {
  shouldForwardProp: (e) => fr(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: Nl
})(Qt(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${qn.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${qn.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${qn.focused} .${qn.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(Bl()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${qn.focused} .${qn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        [`&.${qn.error} .${qn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${qn.disabled} .${qn.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: r
      }) => n.multiline && r === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), YI = Be(xb, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(Qt(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), KI = Be(_l, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: Al
})(Qt(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), Ll = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var r;
  const o = Wt({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: s = {},
    fullWidth: a = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: f,
    slots: d = {},
    type: h = "text",
    ...g
  } = o, y = qI(o), m = ni(), b = ti({
    props: o,
    muiFormControl: m,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), v = {
    ...o,
    color: b.color || "primary",
    disabled: b.disabled,
    error: b.error,
    focused: b.focused,
    formControl: m,
    fullWidth: a,
    hiddenLabel: b.hiddenLabel,
    multiline: u,
    size: b.size,
    type: h
  }, E = d.root ?? s.Root ?? GI, S = d.input ?? s.Input ?? KI;
  return /* @__PURE__ */ k(Dl, {
    slots: {
      root: E,
      input: S
    },
    renderSuffix: (w) => /* @__PURE__ */ k(YI, {
      ownerState: v,
      className: y.notchedOutline,
      label: c != null && c !== "" && b.required ? r || (r = /* @__PURE__ */ Ce(C.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof f < "u" ? f : !!(w.startAdornment || w.filled || w.focused)
    }),
    fullWidth: a,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: h,
    ...g,
    classes: {
      ...y,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (Ll.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Yr,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: i.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
});
Ll.muiName = "Input";
function XI(e) {
  return Nt("MuiFormLabel", e);
}
const Ai = Dt("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), QI = (e) => {
  const {
    classes: t,
    color: n,
    focused: r,
    disabled: o,
    error: s,
    filled: a,
    required: l
  } = e, c = {
    root: ["root", `color${Ft(n)}`, o && "disabled", s && "error", a && "filled", r && "focused", l && "required"],
    asterisk: ["asterisk", s && "error"]
  };
  return _t(c, XI, t);
}, JI = Be("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color === "secondary" && t.colorSecondary, n.filled && t.filled];
  }
})(Qt(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.body1,
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  variants: [...Object.entries(e.palette).filter(Bl()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${Ai.focused}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    props: {},
    style: {
      [`&.${Ai.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      },
      [`&.${Ai.error}`]: {
        color: (e.vars || e).palette.error.main
      }
    }
  }]
}))), ZI = Be("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})(Qt(({
  theme: e
}) => ({
  [`&.${Ai.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), wb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Wt({
    props: t,
    name: "MuiFormLabel"
  }), {
    children: o,
    className: s,
    color: a,
    component: l = "label",
    disabled: c,
    error: u,
    filled: f,
    focused: d,
    required: h,
    ...g
  } = r, y = ni(), m = ti({
    props: r,
    muiFormControl: y,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), b = {
    ...r,
    color: m.color || "primary",
    component: l,
    disabled: m.disabled,
    error: m.error,
    filled: m.filled,
    focused: m.focused,
    required: m.required
  }, v = QI(b);
  return /* @__PURE__ */ Ce(JI, {
    as: l,
    ownerState: b,
    className: ge(v.root, s),
    ref: n,
    ...g,
    children: [o, m.required && /* @__PURE__ */ Ce(ZI, {
      ownerState: b,
      "aria-hidden": !0,
      className: v.asterisk,
      children: [" ", "*"]
    })]
  });
});
process.env.NODE_ENV !== "production" && (wb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: i.oneOfType([i.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: i.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: i.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: i.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function eP(e) {
  return Nt("MuiInputLabel", e);
}
Dt("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]);
const tP = (e) => {
  const {
    classes: t,
    formControl: n,
    size: r,
    shrink: o,
    disableAnimation: s,
    variant: a,
    required: l
  } = e, c = {
    root: ["root", n && "formControl", !s && "animated", o && "shrink", r && r !== "medium" && `size${Ft(r)}`, a],
    asterisk: [l && "asterisk"]
  }, u = _t(c, eP, t);
  return {
    ...t,
    // forward the focused, disabled, etc. classes to the FormLabel
    ...u
  };
}, nP = Be(wb, {
  shouldForwardProp: (e) => fr(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${Ai.asterisk}`]: t.asterisk
    }, t.root, n.formControl && t.formControl, n.size === "small" && t.sizeSmall, n.shrink && t.shrink, !n.disableAnimation && t.animated, n.focused && t.focused, t[n.variant]];
  }
})(Qt(({
  theme: e
}) => ({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%",
  variants: [{
    props: ({
      ownerState: t
    }) => t.formControl,
    style: {
      position: "absolute",
      left: 0,
      top: 0,
      // slight alteration to spec spacing to match visual spec result
      transform: "translate(0, 20px) scale(1)"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      // Compensation for the `Input.inputSizeSmall` style.
      transform: "translate(0, 17px) scale(1)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.shrink,
    style: {
      transform: "translate(0, -1.5px) scale(0.75)",
      transformOrigin: "top left",
      maxWidth: "133%"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableAnimation,
    style: {
      transition: e.transitions.create(["color", "transform", "max-width"], {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      // Chrome's autofill feature gives the input field a yellow background.
      // Since the input field is behind the label in the HTML tree,
      // the input field is drawn last and hides the label with an opaque background color.
      // zIndex: 1 will raise the label above opaque background-colors of input.
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(12px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "filled",
      size: "small"
    },
    style: {
      transform: "translate(12px, 13px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "filled" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      transform: "translate(12px, 7px) scale(0.75)",
      maxWidth: "calc(133% - 24px)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n,
      size: r
    }) => t === "filled" && n.shrink && r === "small",
    style: {
      transform: "translate(12px, 4px) scale(0.75)"
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      // see comment above on filled.zIndex
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(14px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "outlined",
      size: "small"
    },
    style: {
      transform: "translate(14px, 9px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "outlined" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      // Theoretically, we should have (8+5)*2/0.75 = 34px
      // but it feels a better when it bleeds a bit on the left, so 32px.
      maxWidth: "calc(133% - 32px)",
      transform: "translate(14px, -9px) scale(0.75)"
    }
  }]
}))), Sb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Wt({
    name: "MuiInputLabel",
    props: t
  }), {
    disableAnimation: o = !1,
    margin: s,
    shrink: a,
    variant: l,
    className: c,
    ...u
  } = r, f = ni();
  let d = a;
  typeof d > "u" && f && (d = f.filled || f.focused || f.adornedStart);
  const h = ti({
    props: r,
    muiFormControl: f,
    states: ["size", "variant", "required", "focused"]
  }), g = {
    ...r,
    disableAnimation: o,
    formControl: f,
    shrink: d,
    size: h.size,
    variant: h.variant,
    required: h.required,
    focused: h.focused
  }, y = tP(g);
  return /* @__PURE__ */ k(nP, {
    "data-shrink": d,
    ref: n,
    className: ge(y.root, c),
    ...u,
    ownerState: g,
    classes: y
  });
});
process.env.NODE_ENV !== "production" && (Sb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: i.oneOfType([i.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), i.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: i.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: i.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: i.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: i.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: i.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: i.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
});
function rP(e) {
  return Nt("MuiFormControl", e);
}
Dt("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]);
const oP = (e) => {
  const {
    classes: t,
    margin: n,
    fullWidth: r
  } = e, o = {
    root: ["root", n !== "none" && `margin${Ft(n)}`, r && "fullWidth"]
  };
  return _t(o, rP, t);
}, iP = Be("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`margin${Ft(n.margin)}`], n.fullWidth && t.fullWidth];
  }
})({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top",
  // Fix alignment issue on Safari.
  variants: [{
    props: {
      margin: "normal"
    },
    style: {
      marginTop: 16,
      marginBottom: 8
    }
  }, {
    props: {
      margin: "dense"
    },
    style: {
      marginTop: 8,
      marginBottom: 4
    }
  }, {
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }]
}), Tb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Wt({
    props: t,
    name: "MuiFormControl"
  }), {
    children: o,
    className: s,
    color: a = "primary",
    component: l = "div",
    disabled: c = !1,
    error: u = !1,
    focused: f,
    fullWidth: d = !1,
    hiddenLabel: h = !1,
    margin: g = "none",
    required: y = !1,
    size: m = "medium",
    variant: b = "outlined",
    ...v
  } = r, E = {
    ...r,
    color: a,
    component: l,
    disabled: c,
    error: u,
    fullWidth: d,
    hiddenLabel: h,
    margin: g,
    required: y,
    size: m,
    variant: b
  }, S = oP(E), [w, x] = C.useState(() => {
    let _ = !1;
    return o && C.Children.forEach(o, (L) => {
      if (!hc(L, ["Input", "Select"]))
        return;
      const U = hc(L, ["Select"]) ? L.props.input : L;
      U && EI(U.props) && (_ = !0);
    }), _;
  }), [T, R] = C.useState(() => {
    let _ = !1;
    return o && C.Children.forEach(o, (L) => {
      hc(L, ["Input", "Select"]) && (Pa(L.props, !0) || Pa(L.props.inputProps, !0)) && (_ = !0);
    }), _;
  }), [I, N] = C.useState(!1);
  c && I && N(!1);
  const p = f !== void 0 && !c ? f : I;
  let O;
  const $ = C.useRef(!1);
  process.env.NODE_ENV !== "production" && (O = () => ($.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), $.current = !0, () => {
    $.current = !1;
  }));
  const A = C.useCallback(() => {
    R(!0);
  }, []), D = C.useCallback(() => {
    R(!1);
  }, []), M = C.useMemo(() => ({
    adornedStart: w,
    setAdornedStart: x,
    color: a,
    disabled: c,
    error: u,
    filled: T,
    focused: p,
    fullWidth: d,
    hiddenLabel: h,
    size: m,
    onBlur: () => {
      N(!1);
    },
    onFocus: () => {
      N(!0);
    },
    onEmpty: D,
    onFilled: A,
    registerEffect: O,
    required: y,
    variant: b
  }), [w, a, c, u, T, p, d, h, O, D, A, y, m, b]);
  return /* @__PURE__ */ k(Pl.Provider, {
    value: M,
    children: /* @__PURE__ */ k(iP, {
      as: l,
      ownerState: E,
      className: ge(S.root, s),
      ref: n,
      ...v,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (Tb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: i.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: i.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: i.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: i.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
});
function sP(e) {
  return Nt("MuiFormHelperText", e);
}
const vm = Dt("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]);
var xm;
const aP = (e) => {
  const {
    classes: t,
    contained: n,
    size: r,
    disabled: o,
    error: s,
    filled: a,
    focused: l,
    required: c
  } = e, u = {
    root: ["root", o && "disabled", s && "error", r && `size${Ft(r)}`, n && "contained", l && "focused", a && "filled", c && "required"]
  };
  return _t(u, sP, t);
}, lP = Be("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size && t[`size${Ft(n.size)}`], n.contained && t.contained, n.filled && t.filled];
  }
})(Qt(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.caption,
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${vm.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${vm.error}`]: {
    color: (e.vars || e).palette.error.main
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginTop: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.contained,
    style: {
      marginLeft: 14,
      marginRight: 14
    }
  }]
}))), Eb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Wt({
    props: t,
    name: "MuiFormHelperText"
  }), {
    children: o,
    className: s,
    component: a = "p",
    disabled: l,
    error: c,
    filled: u,
    focused: f,
    margin: d,
    required: h,
    variant: g,
    ...y
  } = r, m = ni(), b = ti({
    props: r,
    muiFormControl: m,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), v = {
    ...r,
    component: a,
    contained: b.variant === "filled" || b.variant === "outlined",
    variant: b.variant,
    size: b.size,
    disabled: b.disabled,
    error: b.error,
    filled: b.filled,
    focused: b.focused,
    required: b.required
  };
  delete v.ownerState;
  const E = aP(v);
  return /* @__PURE__ */ k(lP, {
    as: a,
    className: ge(E.root, s),
    ref: n,
    ...y,
    ownerState: v,
    children: o === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      xm || (xm = /* @__PURE__ */ k("span", {
        className: "notranslate",
        "aria-hidden": !0,
        children: "​"
      }))
    ) : o
  });
});
process.env.NODE_ENV !== "production" && (Eb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: i.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: i.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: i.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: i.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: i.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   */
  variant: i.oneOfType([i.oneOf(["filled", "outlined", "standard"]), i.string])
});
const Cb = /* @__PURE__ */ C.createContext({});
process.env.NODE_ENV !== "production" && (Cb.displayName = "ListContext");
function cP(e) {
  return Nt("MuiList", e);
}
Dt("MuiList", ["root", "padding", "dense", "subheader"]);
const uP = (e) => {
  const {
    classes: t,
    disablePadding: n,
    dense: r,
    subheader: o
  } = e;
  return _t({
    root: ["root", !n && "padding", r && "dense", o && "subheader"]
  }, cP, t);
}, dP = Be("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disablePadding && t.padding, n.dense && t.dense, n.subheader && t.subheader];
  }
})({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative",
  variants: [{
    props: ({
      ownerState: e
    }) => !e.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: e
    }) => e.subheader,
    style: {
      paddingTop: 0
    }
  }]
}), Ob = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Wt({
    props: t,
    name: "MuiList"
  }), {
    children: o,
    className: s,
    component: a = "ul",
    dense: l = !1,
    disablePadding: c = !1,
    subheader: u,
    ...f
  } = r, d = C.useMemo(() => ({
    dense: l
  }), [l]), h = {
    ...r,
    component: a,
    dense: l,
    disablePadding: c
  }, g = uP(h);
  return /* @__PURE__ */ k(Cb.Provider, {
    value: d,
    children: /* @__PURE__ */ Ce(dP, {
      as: a,
      className: ge(g.root, s),
      ref: n,
      ownerState: h,
      ...f,
      children: [u, o]
    })
  });
});
process.env.NODE_ENV !== "production" && (Ob.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: i.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: i.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function gc(e, t, n) {
  return e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : n ? null : e.firstChild;
}
function wm(e, t, n) {
  return e === t ? n ? e.firstChild : e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : n ? null : e.lastChild;
}
function Rb(e, t) {
  if (t === void 0)
    return !0;
  let n = e.innerText;
  return n === void 0 && (n = e.textContent), n = n.trim().toLowerCase(), n.length === 0 ? !1 : t.repeating ? n[0] === t.keys[0] : n.startsWith(t.keys.join(""));
}
function pi(e, t, n, r, o, s) {
  let a = !1, l = o(e, t, t ? n : !1);
  for (; l; ) {
    if (l === e.firstChild) {
      if (a)
        return !1;
      a = !0;
    }
    const c = r ? !1 : l.disabled || l.getAttribute("aria-disabled") === "true";
    if (!l.hasAttribute("tabindex") || !Rb(l, s) || c)
      l = o(e, l, n);
    else
      return l.focus(), !0;
  }
  return !1;
}
const $b = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: r,
    autoFocus: o = !1,
    autoFocusItem: s = !1,
    children: a,
    className: l,
    disabledItemsFocusable: c = !1,
    disableListWrap: u = !1,
    onKeyDown: f,
    variant: d = "selectedMenu",
    ...h
  } = t, g = C.useRef(null), y = C.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  co(() => {
    o && g.current.focus();
  }, [o]), C.useImperativeHandle(r, () => ({
    adjustStyleForScrollbar: (S, {
      direction: w
    }) => {
      const x = !g.current.style.width;
      if (S.clientHeight < g.current.clientHeight && x) {
        const T = `${db(Cr(S))}px`;
        g.current.style[w === "rtl" ? "paddingLeft" : "paddingRight"] = T, g.current.style.width = `calc(100% + ${T})`;
      }
      return g.current;
    }
  }), []);
  const m = (S) => {
    const w = g.current, x = S.key;
    if (S.ctrlKey || S.metaKey || S.altKey) {
      f && f(S);
      return;
    }
    const R = Vn(w).activeElement;
    if (x === "ArrowDown")
      S.preventDefault(), pi(w, R, u, c, gc);
    else if (x === "ArrowUp")
      S.preventDefault(), pi(w, R, u, c, wm);
    else if (x === "Home")
      S.preventDefault(), pi(w, null, u, c, gc);
    else if (x === "End")
      S.preventDefault(), pi(w, null, u, c, wm);
    else if (x.length === 1) {
      const I = y.current, N = x.toLowerCase(), p = performance.now();
      I.keys.length > 0 && (p - I.lastTime > 500 ? (I.keys = [], I.repeating = !0, I.previousKeyMatched = !0) : I.repeating && N !== I.keys[0] && (I.repeating = !1)), I.lastTime = p, I.keys.push(N);
      const O = R && !I.repeating && Rb(R, I);
      I.previousKeyMatched && (O || pi(w, R, !1, c, gc, I)) ? S.preventDefault() : I.previousKeyMatched = !1;
    }
    f && f(S);
  }, b = Mn(g, n);
  let v = -1;
  C.Children.forEach(a, (S, w) => {
    if (!/* @__PURE__ */ C.isValidElement(S)) {
      v === w && (v += 1, v >= a.length && (v = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && bn.isFragment(S) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), S.props.disabled || (d === "selectedMenu" && S.props.selected || v === -1) && (v = w), v === w && (S.props.disabled || S.props.muiSkipListHighlight || S.type.muiSkipListHighlight) && (v += 1, v >= a.length && (v = -1));
  });
  const E = C.Children.map(a, (S, w) => {
    if (w === v) {
      const x = {};
      return s && (x.autoFocus = !0), S.props.tabIndex === void 0 && d === "selectedMenu" && (x.tabIndex = 0), /* @__PURE__ */ C.cloneElement(S, x);
    }
    return S;
  });
  return /* @__PURE__ */ k(Ob, {
    role: "menu",
    ref: b,
    className: l,
    onKeyDown: m,
    tabIndex: o ? 0 : -1,
    ...h,
    children: E
  });
});
process.env.NODE_ENV !== "production" && ($b.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: i.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: i.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: i.node,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: i.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: i.bool,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: i.oneOf(["menu", "selectedMenu"])
});
const kb = (e) => e.scrollTop;
function Aa(e, t) {
  const {
    timeout: n,
    easing: r,
    style: o = {}
  } = e;
  return {
    duration: o.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: o.transitionTimingFunction ?? (typeof r == "object" ? r[t.mode] : r),
    delay: o.transitionDelay
  };
}
function fu(e) {
  return `scale(${e}, ${e ** 2})`;
}
const fP = {
  entering: {
    opacity: 1,
    transform: fu(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, yc = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), Ma = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    addEndListener: r,
    appear: o = !0,
    children: s,
    easing: a,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: f,
    onExit: d,
    onExited: h,
    onExiting: g,
    style: y,
    timeout: m = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: b = xn,
    ...v
  } = t, E = bI(), S = C.useRef(), w = _d(), x = C.useRef(null), T = Mn(x, ws(s), n), R = (M) => (_) => {
    if (M) {
      const L = x.current;
      _ === void 0 ? M(L) : M(L, _);
    }
  }, I = R(f), N = R((M, _) => {
    kb(M);
    const {
      duration: L,
      delay: U,
      easing: z
    } = Aa({
      style: y,
      timeout: m,
      easing: a
    }, {
      mode: "enter"
    });
    let j;
    m === "auto" ? (j = w.transitions.getAutoHeightDuration(M.clientHeight), S.current = j) : j = L, M.style.transition = [w.transitions.create("opacity", {
      duration: j,
      delay: U
    }), w.transitions.create("transform", {
      duration: yc ? j : j * 0.666,
      delay: U,
      easing: z
    })].join(","), c && c(M, _);
  }), p = R(u), O = R(g), $ = R((M) => {
    const {
      duration: _,
      delay: L,
      easing: U
    } = Aa({
      style: y,
      timeout: m,
      easing: a
    }, {
      mode: "exit"
    });
    let z;
    m === "auto" ? (z = w.transitions.getAutoHeightDuration(M.clientHeight), S.current = z) : z = _, M.style.transition = [w.transitions.create("opacity", {
      duration: z,
      delay: L
    }), w.transitions.create("transform", {
      duration: yc ? z : z * 0.666,
      delay: yc ? L : L || z * 0.333,
      easing: U
    })].join(","), M.style.opacity = 0, M.style.transform = fu(0.75), d && d(M);
  }), A = R(h);
  return /* @__PURE__ */ k(b, {
    appear: o,
    in: l,
    nodeRef: x,
    onEnter: N,
    onEntered: p,
    onEntering: I,
    onExit: $,
    onExited: A,
    onExiting: O,
    addEndListener: (M) => {
      m === "auto" && E.start(S.current || 0, M), r && r(x.current, M);
    },
    timeout: m === "auto" ? null : m,
    ...v,
    children: (M, {
      ownerState: _,
      ...L
    }) => /* @__PURE__ */ C.cloneElement(s, {
      style: {
        opacity: 0,
        transform: fu(0.75),
        visibility: M === "exited" && !l ? "hidden" : void 0,
        ...fP[M],
        ...y,
        ...s.props.style
      },
      ref: T,
      ...L
    })
  });
});
process.env.NODE_ENV !== "production" && (Ma.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: xs.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
Ma && (Ma.muiSupportAuto = !0);
function pP(e) {
  const t = Vn(e);
  return t.body === e ? Cr(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Mi(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function Sm(e) {
  return parseInt(Cr(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function mP(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), r = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || r;
}
function Tm(e, t, n, r, o) {
  const s = [t, n, ...r];
  [].forEach.call(e.children, (a) => {
    const l = !s.includes(a), c = !mP(a);
    l && c && Mi(a, o);
  });
}
function bc(e, t) {
  let n = -1;
  return e.some((r, o) => t(r) ? (n = o, !0) : !1), n;
}
function hP(e, t) {
  const n = [], r = e.container;
  if (!t.disableScrollLock) {
    if (pP(r)) {
      const a = db(Cr(r));
      n.push({
        value: r.style.paddingRight,
        property: "padding-right",
        el: r
      }), r.style.paddingRight = `${Sm(r) + a}px`;
      const l = Vn(r).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${Sm(c) + a}px`;
      });
    }
    let s;
    if (r.parentNode instanceof DocumentFragment)
      s = Vn(r).body;
    else {
      const a = r.parentElement, l = Cr(r);
      s = (a == null ? void 0 : a.nodeName) === "HTML" && l.getComputedStyle(a).overflowY === "scroll" ? a : r;
    }
    n.push({
      value: s.style.overflow,
      property: "overflow",
      el: s
    }, {
      value: s.style.overflowX,
      property: "overflow-x",
      el: s
    }, {
      value: s.style.overflowY,
      property: "overflow-y",
      el: s
    }), s.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: s,
      el: a,
      property: l
    }) => {
      s ? a.style.setProperty(l, s) : a.style.removeProperty(l);
    });
  };
}
function gP(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
class yP {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let r = this.modals.indexOf(t);
    if (r !== -1)
      return r;
    r = this.modals.length, this.modals.push(t), t.modalRef && Mi(t.modalRef, !1);
    const o = gP(n);
    Tm(n, t.mount, t.modalRef, o, !0);
    const s = bc(this.containers, (a) => a.container === n);
    return s !== -1 ? (this.containers[s].modals.push(t), r) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: o
    }), r);
  }
  mount(t, n) {
    const r = bc(this.containers, (s) => s.modals.includes(t)), o = this.containers[r];
    o.restore || (o.restore = hP(o, n));
  }
  remove(t, n = !0) {
    const r = this.modals.indexOf(t);
    if (r === -1)
      return r;
    const o = bc(this.containers, (a) => a.modals.includes(t)), s = this.containers[o];
    if (s.modals.splice(s.modals.indexOf(t), 1), this.modals.splice(r, 1), s.modals.length === 0)
      s.restore && s.restore(), t.modalRef && Mi(t.modalRef, n), Tm(s.container, t.mount, t.modalRef, s.hiddenSiblings, !1), this.containers.splice(o, 1);
    else {
      const a = s.modals[s.modals.length - 1];
      a.modalRef && Mi(a.modalRef, !1);
    }
    return r;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
}
const bP = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function vP(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function xP(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (r) => e.ownerDocument.querySelector(`input[type="radio"]${r}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function wP(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || xP(e));
}
function SP(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(bP)).forEach((r, o) => {
    const s = vP(r);
    s === -1 || !wP(r) || (s === 0 ? t.push(r) : n.push({
      documentOrder: o,
      tabIndex: s,
      node: r
    }));
  }), n.sort((r, o) => r.tabIndex === o.tabIndex ? r.documentOrder - o.documentOrder : r.tabIndex - o.tabIndex).map((r) => r.node).concat(t);
}
function TP() {
  return !0;
}
function _a(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: r = !1,
    disableRestoreFocus: o = !1,
    getTabbable: s = SP,
    isEnabled: a = TP,
    open: l
  } = e, c = C.useRef(!1), u = C.useRef(null), f = C.useRef(null), d = C.useRef(null), h = C.useRef(null), g = C.useRef(!1), y = C.useRef(null), m = Mn(ws(t), y), b = C.useRef(null);
  C.useEffect(() => {
    !l || !y.current || (g.current = !n);
  }, [n, l]), C.useEffect(() => {
    if (!l || !y.current)
      return;
    const S = Vn(y.current);
    return y.current.contains(S.activeElement) || (y.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), y.current.setAttribute("tabIndex", "-1")), g.current && y.current.focus()), () => {
      o || (d.current && d.current.focus && (c.current = !0, d.current.focus()), d.current = null);
    };
  }, [l]), C.useEffect(() => {
    if (!l || !y.current)
      return;
    const S = Vn(y.current), w = (R) => {
      b.current = R, !(r || !a() || R.key !== "Tab") && S.activeElement === y.current && R.shiftKey && (c.current = !0, f.current && f.current.focus());
    }, x = () => {
      var N, p;
      const R = y.current;
      if (R === null)
        return;
      if (!S.hasFocus() || !a() || c.current) {
        c.current = !1;
        return;
      }
      if (R.contains(S.activeElement) || r && S.activeElement !== u.current && S.activeElement !== f.current)
        return;
      if (S.activeElement !== h.current)
        h.current = null;
      else if (h.current !== null)
        return;
      if (!g.current)
        return;
      let I = [];
      if ((S.activeElement === u.current || S.activeElement === f.current) && (I = s(y.current)), I.length > 0) {
        const O = !!((N = b.current) != null && N.shiftKey && ((p = b.current) == null ? void 0 : p.key) === "Tab"), $ = I[0], A = I[I.length - 1];
        typeof $ != "string" && typeof A != "string" && (O ? A.focus() : $.focus());
      } else
        R.focus();
    };
    S.addEventListener("focusin", x), S.addEventListener("keydown", w, !0);
    const T = setInterval(() => {
      S.activeElement && S.activeElement.tagName === "BODY" && x();
    }, 50);
    return () => {
      clearInterval(T), S.removeEventListener("focusin", x), S.removeEventListener("keydown", w, !0);
    };
  }, [n, r, o, a, l, s]);
  const v = (S) => {
    d.current === null && (d.current = S.relatedTarget), g.current = !0, h.current = S.target;
    const w = t.props.onFocus;
    w && w(S);
  }, E = (S) => {
    d.current === null && (d.current = S.relatedTarget), g.current = !0;
  };
  return /* @__PURE__ */ Ce(C.Fragment, {
    children: [/* @__PURE__ */ k("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ C.cloneElement(t, {
      ref: m,
      onFocus: v
    }), /* @__PURE__ */ k("div", {
      tabIndex: l ? 0 : -1,
      onFocus: E,
      ref: f,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (_a.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: xs,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: i.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: i.func,
  /**
   * If `true`, focus is locked.
   */
  open: i.bool.isRequired
});
process.env.NODE_ENV !== "production" && (_a.propTypes = cb(_a.propTypes));
function EP(e) {
  return typeof e == "function" ? e() : e;
}
const Da = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    children: r,
    container: o,
    disablePortal: s = !1
  } = t, [a, l] = C.useState(null), c = Mn(/* @__PURE__ */ C.isValidElement(r) ? ws(r) : null, n);
  if (co(() => {
    s || l(EP(o) || document.body);
  }, [o, s]), co(() => {
    if (a && !s)
      return um(n, a), () => {
        um(n, null);
      };
  }, [n, a, s]), s) {
    if (/* @__PURE__ */ C.isValidElement(r)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ C.cloneElement(r, u);
    }
    return r;
  }
  return a && /* @__PURE__ */ Jm.createPortal(r, a);
});
process.env.NODE_ENV !== "production" && (Da.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: i.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([es, i.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool
});
process.env.NODE_ENV !== "production" && (Da.propTypes = cb(Da.propTypes));
function en(e, t) {
  const {
    className: n,
    elementType: r,
    ownerState: o,
    externalForwardedProps: s,
    internalForwardedProps: a,
    shouldForwardComponentProp: l = !1,
    ...c
  } = t, {
    component: u,
    slots: f = {
      [e]: void 0
    },
    slotProps: d = {
      [e]: void 0
    },
    ...h
  } = s, g = f[e] || r, y = bb(d[e], o), {
    props: {
      component: m,
      ...b
    },
    internalRef: v
  } = yb({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? h : void 0,
    externalSlotProps: y
  }), E = Mn(v, y == null ? void 0 : y.ref, t.ref), S = e === "root" ? m || u : m, w = hb(g, {
    ...e === "root" && !u && !f[e] && a,
    ...e !== "root" && !f[e] && a,
    ...b,
    ...S && !l && {
      as: S
    },
    ...S && l && {
      component: S
    },
    ref: E
  }, o);
  return [g, w];
}
const CP = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, Ib = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = _d(), o = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    addEndListener: s,
    appear: a = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: f,
    onEntered: d,
    onEntering: h,
    onExit: g,
    onExited: y,
    onExiting: m,
    style: b,
    timeout: v = o,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: E = xn,
    ...S
  } = t, w = C.useRef(null), x = Mn(w, ws(l), n), T = (D) => (M) => {
    if (D) {
      const _ = w.current;
      M === void 0 ? D(_) : D(_, M);
    }
  }, R = T(h), I = T((D, M) => {
    kb(D);
    const _ = Aa({
      style: b,
      timeout: v,
      easing: c
    }, {
      mode: "enter"
    });
    D.style.webkitTransition = r.transitions.create("opacity", _), D.style.transition = r.transitions.create("opacity", _), f && f(D, M);
  }), N = T(d), p = T(m), O = T((D) => {
    const M = Aa({
      style: b,
      timeout: v,
      easing: c
    }, {
      mode: "exit"
    });
    D.style.webkitTransition = r.transitions.create("opacity", M), D.style.transition = r.transitions.create("opacity", M), g && g(D);
  }), $ = T(y);
  return /* @__PURE__ */ k(E, {
    appear: a,
    in: u,
    nodeRef: w,
    onEnter: I,
    onEntered: N,
    onEntering: R,
    onExit: O,
    onExited: $,
    onExiting: p,
    addEndListener: (D) => {
      s && s(w.current, D);
    },
    timeout: v,
    ...S,
    children: (D, {
      ownerState: M,
      ..._
    }) => /* @__PURE__ */ C.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: D === "exited" && !u ? "hidden" : void 0,
        ...CP[D],
        ...b,
        ...l.props.style
      },
      ref: x,
      ..._
    })
  });
});
process.env.NODE_ENV !== "production" && (Ib.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: xs.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function OP(e) {
  return Nt("MuiBackdrop", e);
}
Dt("MuiBackdrop", ["root", "invisible"]);
const RP = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return _t({
    root: ["root", n && "invisible"]
  }, OP, t);
}, $P = Be("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), Pb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Wt({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: o,
    className: s,
    component: a = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: f = {},
    slotProps: d = {},
    slots: h = {},
    TransitionComponent: g,
    transitionDuration: y,
    ...m
  } = r, b = {
    ...r,
    component: a,
    invisible: l
  }, v = RP(b), E = {
    transition: g,
    root: u.Root,
    ...h
  }, S = {
    ...f,
    ...d
  }, w = {
    slots: E,
    slotProps: S
  }, [x, T] = en("root", {
    elementType: $P,
    externalForwardedProps: w,
    className: ge(v.root, s),
    ownerState: b
  }), [R, I] = en("transition", {
    elementType: Ib,
    externalForwardedProps: w,
    ownerState: b
  });
  return /* @__PURE__ */ k(R, {
    in: c,
    timeout: y,
    ...m,
    ...I,
    children: /* @__PURE__ */ k(x, {
      "aria-hidden": !0,
      ...T,
      classes: v,
      ref: n,
      children: o
    })
  });
});
process.env.NODE_ENV !== "production" && (Pb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    root: i.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: i.bool,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  TransitionComponent: i.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
});
function kP(e) {
  return typeof e == "function" ? e() : e;
}
function IP(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const Em = () => {
}, qs = new yP();
function PP(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: r = !1,
    closeAfterTransition: o = !1,
    onTransitionEnter: s,
    onTransitionExited: a,
    children: l,
    onClose: c,
    open: u,
    rootRef: f
  } = e, d = C.useRef({}), h = C.useRef(null), g = C.useRef(null), y = Mn(g, f), [m, b] = C.useState(!u), v = IP(l);
  let E = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (E = !1);
  const S = () => Vn(h.current), w = () => (d.current.modalRef = g.current, d.current.mount = h.current, d.current), x = () => {
    qs.mount(w(), {
      disableScrollLock: r
    }), g.current && (g.current.scrollTop = 0);
  }, T = cu(() => {
    const M = kP(t) || S().body;
    qs.add(w(), M), g.current && x();
  }), R = () => qs.isTopModal(w()), I = cu((M) => {
    h.current = M, M && (u && R() ? x() : g.current && Mi(g.current, E));
  }), N = C.useCallback(() => {
    qs.remove(w(), E);
  }, [E]);
  C.useEffect(() => () => {
    N();
  }, [N]), C.useEffect(() => {
    u ? T() : (!v || !o) && N();
  }, [u, N, v, o, T]);
  const p = (M) => (_) => {
    var L;
    (L = M.onKeyDown) == null || L.call(M, _), !(_.key !== "Escape" || _.which === 229 || // Wait until IME is settled.
    !R()) && (n || (_.stopPropagation(), c && c(_, "escapeKeyDown")));
  }, O = (M) => (_) => {
    var L;
    (L = M.onClick) == null || L.call(M, _), _.target === _.currentTarget && c && c(_, "backdropClick");
  };
  return {
    getRootProps: (M = {}) => {
      const _ = gb(e);
      delete _.onTransitionEnter, delete _.onTransitionExited;
      const L = {
        ..._,
        ...M
      };
      return {
        /*
         * Marking an element with the role presentation indicates to assistive technology
         * that this element should be ignored; it exists to support the web application and
         * is not meant for humans to interact with directly.
         * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
         */
        role: "presentation",
        ...L,
        onKeyDown: p(L),
        ref: y
      };
    },
    getBackdropProps: (M = {}) => {
      const _ = M;
      return {
        "aria-hidden": !0,
        ..._,
        onClick: O(_),
        open: u
      };
    },
    getTransitionProps: () => {
      const M = () => {
        b(!1), s && s();
      }, _ = () => {
        b(!0), a && a(), o && N();
      };
      return {
        onEnter: cm(M, (l == null ? void 0 : l.props.onEnter) ?? Em),
        onExited: cm(_, (l == null ? void 0 : l.props.onExited) ?? Em)
      };
    },
    rootRef: y,
    portalRef: I,
    isTopModal: R,
    exited: m,
    hasTransition: v
  };
}
function NP(e) {
  return Nt("MuiModal", e);
}
Dt("MuiModal", ["root", "hidden", "backdrop"]);
const AP = (e) => {
  const {
    open: t,
    exited: n,
    classes: r
  } = e;
  return _t({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, NP, r);
}, MP = Be("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(Qt(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), _P = Be(Pb, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), Nb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Wt({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: o = _P,
    BackdropProps: s,
    classes: a,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: f,
    component: d,
    components: h = {},
    componentsProps: g = {},
    disableAutoFocus: y = !1,
    disableEnforceFocus: m = !1,
    disableEscapeKeyDown: b = !1,
    disablePortal: v = !1,
    disableRestoreFocus: E = !1,
    disableScrollLock: S = !1,
    hideBackdrop: w = !1,
    keepMounted: x = !1,
    onClose: T,
    onTransitionEnter: R,
    onTransitionExited: I,
    open: N,
    slotProps: p = {},
    slots: O = {},
    // eslint-disable-next-line react/prop-types
    theme: $,
    ...A
  } = r, D = {
    ...r,
    closeAfterTransition: c,
    disableAutoFocus: y,
    disableEnforceFocus: m,
    disableEscapeKeyDown: b,
    disablePortal: v,
    disableRestoreFocus: E,
    disableScrollLock: S,
    hideBackdrop: w,
    keepMounted: x
  }, {
    getRootProps: M,
    getBackdropProps: _,
    getTransitionProps: L,
    portalRef: U,
    isTopModal: z,
    exited: j,
    hasTransition: V
  } = PP({
    ...D,
    rootRef: n
  }), K = {
    ...D,
    exited: j
  }, Y = AP(K), te = {};
  if (u.props.tabIndex === void 0 && (te.tabIndex = "-1"), V) {
    const {
      onEnter: G,
      onExited: ne
    } = L();
    te.onEnter = G, te.onExited = ne;
  }
  const X = {
    slots: {
      root: h.Root,
      backdrop: h.Backdrop,
      ...O
    },
    slotProps: {
      ...g,
      ...p
    }
  }, [ee, re] = en("root", {
    ref: n,
    elementType: MP,
    externalForwardedProps: {
      ...X,
      ...A,
      component: d
    },
    getSlotProps: M,
    ownerState: K,
    className: ge(l, Y == null ? void 0 : Y.root, !K.open && K.exited && (Y == null ? void 0 : Y.hidden))
  }), [q, Q] = en("backdrop", {
    ref: s == null ? void 0 : s.ref,
    elementType: o,
    externalForwardedProps: X,
    shouldForwardComponentProp: !0,
    additionalProps: s,
    getSlotProps: (G) => _({
      ...G,
      onClick: (ne) => {
        G != null && G.onClick && G.onClick(ne);
      }
    }),
    className: ge(s == null ? void 0 : s.className, Y == null ? void 0 : Y.backdrop),
    ownerState: K
  });
  return !x && !N && (!V || j) ? null : /* @__PURE__ */ k(Da, {
    ref: U,
    container: f,
    disablePortal: v,
    children: /* @__PURE__ */ Ce(ee, {
      ...re,
      children: [!w && o ? /* @__PURE__ */ k(q, {
        ...Q
      }) : null, /* @__PURE__ */ k(_a, {
        disableEnforceFocus: m,
        disableAutoFocus: y,
        disableRestoreFocus: E,
        isEnabled: z,
        open: N,
        children: /* @__PURE__ */ C.cloneElement(u, te)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (Nb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: i.object,
  /**
   * A single child content element.
   */
  children: xs.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: i.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Backdrop: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([es, i.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: i.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: i.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
function DP(e) {
  return Nt("MuiPaper", e);
}
Dt("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const BP = (e) => {
  const {
    square: t,
    elevation: n,
    variant: r,
    classes: o
  } = e, s = {
    root: ["root", r, !t && "rounded", r === "elevation" && `elevation${n}`]
  };
  return _t(s, DP, o);
}, FP = Be("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(Qt(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), Ab = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var g;
  const r = Wt({
    props: t,
    name: "MuiPaper"
  }), o = _d(), {
    className: s,
    component: a = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...f
  } = r, d = {
    ...r,
    component: a,
    elevation: l,
    square: c,
    variant: u
  }, h = BP(d);
  return process.env.NODE_ENV !== "production" && o.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ k(FP, {
    as: a,
    ownerState: d,
    className: ge(h.root, s),
    ref: n,
    ...f,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (o.vars || o).shadows[l],
        ...o.vars && {
          "--Paper-overlay": (g = o.vars.overlays) == null ? void 0 : g[l]
        },
        ...!o.vars && o.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${su("#fff", lu(l))}, ${su("#fff", lu(l))})`
        }
      },
      ...f.style
    }
  });
});
process.env.NODE_ENV !== "production" && (Ab.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: vs(mb, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: i.bool,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: i.oneOfType([i.oneOf(["elevation", "outlined"]), i.string])
});
function jP(e) {
  return Nt("MuiPopover", e);
}
Dt("MuiPopover", ["root", "paper"]);
function Cm(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function Om(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function Rm(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function Ei(e) {
  return typeof e == "function" ? e() : e;
}
const LP = (e) => {
  const {
    classes: t
  } = e;
  return _t({
    root: ["root"],
    paper: ["paper"]
  }, jP, t);
}, VP = Be(Nb, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), Mb = Be(Ab, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), _b = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Wt({
    props: t,
    name: "MuiPopover"
  }), {
    action: o,
    anchorEl: s,
    anchorOrigin: a = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: f,
    container: d,
    elevation: h = 8,
    marginThreshold: g = 16,
    open: y,
    PaperProps: m = {},
    // TODO: remove in v7
    slots: b = {},
    slotProps: v = {},
    transformOrigin: E = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: S,
    // TODO: remove in v7
    transitionDuration: w = "auto",
    TransitionProps: x = {},
    // TODO: remove in v7
    disableScrollLock: T = !1,
    ...R
  } = r, I = C.useRef(), N = {
    ...r,
    anchorOrigin: a,
    anchorReference: c,
    elevation: h,
    marginThreshold: g,
    transformOrigin: E,
    TransitionComponent: S,
    transitionDuration: w,
    TransitionProps: x
  }, p = LP(N), O = C.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const G = Ei(s), ne = G && G.nodeType === 1 ? G : Vn(I.current).body, B = ne.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const pe = ne.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && pe.top === 0 && pe.left === 0 && pe.right === 0 && pe.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: B.top + Cm(B, a.vertical),
      left: B.left + Om(B, a.horizontal)
    };
  }, [s, a.horizontal, a.vertical, l, c]), $ = C.useCallback((G) => ({
    vertical: Cm(G, E.vertical),
    horizontal: Om(G, E.horizontal)
  }), [E.horizontal, E.vertical]), A = C.useCallback((G) => {
    const ne = {
      width: G.offsetWidth,
      height: G.offsetHeight
    }, B = $(ne);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: Rm(B)
      };
    const pe = O();
    let ae = pe.top - B.vertical, me = pe.left - B.horizontal;
    const Me = ae + ne.height, Re = me + ne.width, Oe = Cr(Ei(s)), we = Oe.innerHeight - g, Pe = Oe.innerWidth - g;
    if (g !== null && ae < g) {
      const Se = ae - g;
      ae -= Se, B.vertical += Se;
    } else if (g !== null && Me > we) {
      const Se = Me - we;
      ae -= Se, B.vertical += Se;
    }
    if (process.env.NODE_ENV !== "production" && ne.height > we && ne.height && we && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${ne.height - we}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), g !== null && me < g) {
      const Se = me - g;
      me -= Se, B.horizontal += Se;
    } else if (Re > Pe) {
      const Se = Re - Pe;
      me -= Se, B.horizontal += Se;
    }
    return {
      top: `${Math.round(ae)}px`,
      left: `${Math.round(me)}px`,
      transformOrigin: Rm(B)
    };
  }, [s, c, O, $, g]), [D, M] = C.useState(y), _ = C.useCallback(() => {
    const G = I.current;
    if (!G)
      return;
    const ne = A(G);
    ne.top !== null && G.style.setProperty("top", ne.top), ne.left !== null && (G.style.left = ne.left), G.style.transformOrigin = ne.transformOrigin, M(!0);
  }, [A]);
  C.useEffect(() => (T && window.addEventListener("scroll", _), () => window.removeEventListener("scroll", _)), [s, T, _]);
  const L = () => {
    _();
  }, U = () => {
    M(!1);
  };
  C.useEffect(() => {
    y && _();
  }), C.useImperativeHandle(o, () => y ? {
    updatePosition: () => {
      _();
    }
  } : null, [y, _]), C.useEffect(() => {
    if (!y)
      return;
    const G = ub(() => {
      _();
    }), ne = Cr(Ei(s));
    return ne.addEventListener("resize", G), () => {
      G.clear(), ne.removeEventListener("resize", G);
    };
  }, [s, y, _]);
  let z = w;
  const j = {
    slots: {
      transition: S,
      ...b
    },
    slotProps: {
      transition: x,
      paper: m,
      ...v
    }
  }, [V, K] = en("transition", {
    elementType: Ma,
    externalForwardedProps: j,
    ownerState: N,
    getSlotProps: (G) => ({
      ...G,
      onEntering: (ne, B) => {
        var pe;
        (pe = G.onEntering) == null || pe.call(G, ne, B), L();
      },
      onExited: (ne) => {
        var B;
        (B = G.onExited) == null || B.call(G, ne), U();
      }
    }),
    additionalProps: {
      appear: !0,
      in: y
    }
  });
  w === "auto" && !V.muiSupportAuto && (z = void 0);
  const Y = d || (s ? Vn(Ei(s)).body : void 0), [te, {
    slots: X,
    slotProps: ee,
    ...re
  }] = en("root", {
    ref: n,
    elementType: VP,
    externalForwardedProps: {
      ...j,
      ...R
    },
    shouldForwardComponentProp: !0,
    additionalProps: {
      slots: {
        backdrop: b.backdrop
      },
      slotProps: {
        backdrop: jI(typeof v.backdrop == "function" ? v.backdrop(N) : v.backdrop, {
          invisible: !0
        })
      },
      container: Y,
      open: y
    },
    ownerState: N,
    className: ge(p.root, f)
  }), [q, Q] = en("paper", {
    ref: I,
    className: p.paper,
    elementType: Mb,
    externalForwardedProps: j,
    shouldForwardComponentProp: !0,
    additionalProps: {
      elevation: h,
      style: D ? void 0 : {
        opacity: 0
      }
    },
    ownerState: N
  });
  return /* @__PURE__ */ k(te, {
    ...re,
    ...!du(te) && {
      slots: X,
      slotProps: ee,
      disableScrollLock: T
    },
    children: /* @__PURE__ */ k(V, {
      ...K,
      timeout: z,
      children: /* @__PURE__ */ k(q, {
        ...Q,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (_b.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: Yr,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: vs(i.oneOfType([es, i.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = Ei(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: i.shape({
    left: i.number.isRequired,
    top: i.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: i.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  BackdropProps: i.object,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([es, i.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: mb,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: i.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: i.shape({
    component: ab
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @deprecated use the `slots.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default Grow
   */
  TransitionComponent: i.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: i.object
});
function zP(e) {
  return Nt("MuiMenu", e);
}
Dt("MuiMenu", ["root", "paper", "list"]);
const WP = {
  vertical: "top",
  horizontal: "right"
}, UP = {
  vertical: "top",
  horizontal: "left"
}, HP = (e) => {
  const {
    classes: t
  } = e;
  return _t({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, zP, t);
}, qP = Be(_b, {
  shouldForwardProp: (e) => fr(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), GP = Be(Mb, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), YP = Be($b, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, t) => t.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), Db = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Wt({
    props: t,
    name: "MuiMenu"
  }), {
    autoFocus: o = !0,
    children: s,
    className: a,
    disableAutoFocusItem: l = !1,
    MenuListProps: c = {},
    onClose: u,
    open: f,
    PaperProps: d = {},
    PopoverClasses: h,
    transitionDuration: g = "auto",
    TransitionProps: {
      onEntering: y,
      ...m
    } = {},
    variant: b = "selectedMenu",
    slots: v = {},
    slotProps: E = {},
    ...S
  } = r, w = vk(), x = {
    ...r,
    autoFocus: o,
    disableAutoFocusItem: l,
    MenuListProps: c,
    onEntering: y,
    PaperProps: d,
    transitionDuration: g,
    TransitionProps: m,
    variant: b
  }, T = HP(x), R = o && !l && f, I = C.useRef(null), N = (z, j) => {
    I.current && I.current.adjustStyleForScrollbar(z, {
      direction: w ? "rtl" : "ltr"
    }), y && y(z, j);
  }, p = (z) => {
    z.key === "Tab" && (z.preventDefault(), u && u(z, "tabKeyDown"));
  };
  let O = -1;
  C.Children.map(s, (z, j) => {
    /* @__PURE__ */ C.isValidElement(z) && (process.env.NODE_ENV !== "production" && bn.isFragment(z) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), z.props.disabled || (b === "selectedMenu" && z.props.selected || O === -1) && (O = j));
  });
  const $ = {
    slots: v,
    slotProps: {
      list: c,
      transition: m,
      paper: d,
      ...E
    }
  }, A = wI({
    elementType: v.root,
    externalSlotProps: E.root,
    ownerState: x,
    className: [T.root, a]
  }), [D, M] = en("paper", {
    className: T.paper,
    elementType: GP,
    externalForwardedProps: $,
    shouldForwardComponentProp: !0,
    ownerState: x
  }), [_, L] = en("list", {
    className: ge(T.list, c.className),
    elementType: YP,
    shouldForwardComponentProp: !0,
    externalForwardedProps: $,
    getSlotProps: (z) => ({
      ...z,
      onKeyDown: (j) => {
        var V;
        p(j), (V = z.onKeyDown) == null || V.call(z, j);
      }
    }),
    ownerState: x
  }), U = typeof $.slotProps.transition == "function" ? $.slotProps.transition(x) : $.slotProps.transition;
  return /* @__PURE__ */ k(qP, {
    onClose: u,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: w ? "right" : "left"
    },
    transformOrigin: w ? WP : UP,
    slots: {
      root: v.root,
      paper: D,
      backdrop: v.backdrop,
      ...v.transition && {
        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover
        transition: v.transition
      }
    },
    slotProps: {
      root: A,
      paper: M,
      backdrop: typeof E.backdrop == "function" ? E.backdrop(x) : E.backdrop,
      transition: {
        ...U,
        onEntering: (...z) => {
          var j;
          N(...z), (j = U == null ? void 0 : U.onEntering) == null || j.call(U, ...z);
        }
      }
    },
    open: f,
    ref: n,
    transitionDuration: g,
    ownerState: x,
    ...S,
    classes: h,
    children: /* @__PURE__ */ k(_, {
      actions: I,
      autoFocus: o && (O === -1 || l),
      autoFocusItem: R,
      variant: b,
      ...L,
      children: s
    })
  });
});
process.env.NODE_ENV !== "production" && (Db.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: i.oneOfType([es, i.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: i.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: i.bool,
  /**
   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.
   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  MenuListProps: i.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: i.object,
  /**
   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.
   */
  PopoverClasses: i.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    list: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    list: i.elementType,
    paper: i.elementType,
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  TransitionProps: i.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: i.oneOf(["menu", "selectedMenu"])
});
function KP(e) {
  return Nt("MuiNativeSelect", e);
}
const Bd = Dt("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), XP = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: r,
    multiple: o,
    open: s,
    error: a
  } = e, l = {
    select: ["select", n, r && "disabled", o && "multiple", a && "error"],
    icon: ["icon", `icon${Ft(n)}`, s && "iconOpen", r && "disabled"]
  };
  return _t(l, KP, t);
}, Bb = Be("select")(({
  theme: e
}) => ({
  // Reset
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  // Reset
  borderRadius: 0,
  cursor: "pointer",
  "&:focus": {
    // Reset Chrome style
    borderRadius: 0
  },
  [`&.${Bd.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (e.vars || e).palette.background.paper
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.variant !== "filled" && t.variant !== "outlined",
    style: {
      // Bump specificity to allow extending custom inputs
      "&&&": {
        paddingRight: 24,
        minWidth: 16
        // So it doesn't collapse.
      }
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      "&&&": {
        paddingRight: 32
      }
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius,
      "&:focus": {
        borderRadius: (e.vars || e).shape.borderRadius
        // Reset the reset for Chrome style
      },
      "&&&": {
        paddingRight: 32
      }
    }
  }]
})), QP = Be(Bb, {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: fr,
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.select, t[n.variant], n.error && t.error, {
      [`&.${Bd.multiple}`]: t.multiple
    }];
  }
})({}), Fb = Be("svg")(({
  theme: e
}) => ({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  // Center vertically, height is 1em
  top: "calc(50% - .5em)",
  // Don't block pointer events on the select under the icon.
  pointerEvents: "none",
  color: (e.vars || e).palette.action.active,
  [`&.${Bd.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.open,
    style: {
      transform: "rotate(180deg)"
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      right: 7
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      right: 7
    }
  }]
})), JP = Be(Fb, {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${Ft(n.variant)}`], n.open && t.iconOpen];
  }
})({}), jb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const {
    className: r,
    disabled: o,
    error: s,
    IconComponent: a,
    inputRef: l,
    variant: c = "standard",
    ...u
  } = t, f = {
    ...t,
    disabled: o,
    variant: c,
    error: s
  }, d = XP(f);
  return /* @__PURE__ */ Ce(C.Fragment, {
    children: [/* @__PURE__ */ k(QP, {
      ownerState: f,
      className: ge(d.select, r),
      disabled: o,
      ref: l || n,
      ...u
    }), t.multiple ? null : /* @__PURE__ */ k(JP, {
      as: a,
      ownerState: f,
      className: d.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (jb.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The CSS class name of the select element.
   */
  className: i.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: i.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: i.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: Yr,
  /**
   * @ignore
   */
  multiple: i.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: i.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The input value.
   */
  value: i.any,
  /**
   * The variant to use.
   */
  variant: i.oneOf(["standard", "outlined", "filled"])
});
function Lb(e) {
  return Nt("MuiSelect", e);
}
const mi = Dt("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var $m;
const ZP = Be(Bb, {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${mi.select}`]: t.select
      },
      {
        [`&.${mi.select}`]: t[n.variant]
      },
      {
        [`&.${mi.error}`]: t.error
      },
      {
        [`&.${mi.multiple}`]: t.multiple
      }
    ];
  }
})({
  // Win specificity over the input base
  [`&.${mi.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), eN = Be(Fb, {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${Ft(n.variant)}`], n.open && t.iconOpen];
  }
})({}), tN = Be("input", {
  shouldForwardProp: (e) => ob(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, t) => t.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function km(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
function nN(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const rN = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: r,
    multiple: o,
    open: s,
    error: a
  } = e, l = {
    select: ["select", n, r && "disabled", o && "multiple", a && "error"],
    icon: ["icon", `icon${Ft(n)}`, s && "iconOpen", r && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return _t(l, Lb, t);
}, Vb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  var _n;
  const {
    "aria-describedby": r,
    "aria-label": o,
    autoFocus: s,
    autoWidth: a,
    children: l,
    className: c,
    defaultOpen: u,
    defaultValue: f,
    disabled: d,
    displayEmpty: h,
    error: g = !1,
    IconComponent: y,
    inputRef: m,
    labelId: b,
    MenuProps: v = {},
    multiple: E,
    name: S,
    onBlur: w,
    onChange: x,
    onClose: T,
    onFocus: R,
    onOpen: I,
    open: N,
    readOnly: p,
    renderValue: O,
    required: $,
    SelectDisplayProps: A = {},
    tabIndex: D,
    // catching `type` from Input which makes no sense for SelectInput
    type: M,
    value: _,
    variant: L = "standard",
    ...U
  } = t, [z, j] = dm({
    controlled: _,
    default: f,
    name: "Select"
  }), [V, K] = dm({
    controlled: N,
    default: u,
    name: "Select"
  }), Y = C.useRef(null), te = C.useRef(null), [X, ee] = C.useState(null), {
    current: re
  } = C.useRef(N != null), [q, Q] = C.useState(), G = Mn(n, m), ne = C.useCallback((ye) => {
    te.current = ye, ye && ee(ye);
  }, []), B = X == null ? void 0 : X.parentNode;
  C.useImperativeHandle(G, () => ({
    focus: () => {
      te.current.focus();
    },
    node: Y.current,
    value: z
  }), [z]), C.useEffect(() => {
    u && V && X && !re && (Q(a ? null : B.clientWidth), te.current.focus());
  }, [X, a]), C.useEffect(() => {
    s && te.current.focus();
  }, [s]), C.useEffect(() => {
    if (!b)
      return;
    const ye = Vn(te.current).getElementById(b);
    if (ye) {
      const Fe = () => {
        getSelection().isCollapsed && te.current.focus();
      };
      return ye.addEventListener("click", Fe), () => {
        ye.removeEventListener("click", Fe);
      };
    }
  }, [b]);
  const pe = (ye, Fe) => {
    ye ? I && I(Fe) : T && T(Fe), re || (Q(a ? null : B.clientWidth), K(ye));
  }, ae = (ye) => {
    ye.button === 0 && (ye.preventDefault(), te.current.focus(), pe(!0, ye));
  }, me = (ye) => {
    pe(!1, ye);
  }, Me = C.Children.toArray(l), Re = (ye) => {
    const Fe = Me.find((Je) => Je.props.value === ye.target.value);
    Fe !== void 0 && (j(Fe.props.value), x && x(ye, Fe));
  }, Oe = (ye) => (Fe) => {
    let Je;
    if (Fe.currentTarget.hasAttribute("tabindex")) {
      if (E) {
        Je = Array.isArray(z) ? z.slice() : [];
        const jt = z.indexOf(ye.props.value);
        jt === -1 ? Je.push(ye.props.value) : Je.splice(jt, 1);
      } else
        Je = ye.props.value;
      if (ye.props.onClick && ye.props.onClick(Fe), z !== Je && (j(Je), x)) {
        const jt = Fe.nativeEvent || Fe, mo = new jt.constructor(jt.type, jt);
        Object.defineProperty(mo, "target", {
          writable: !0,
          value: {
            value: Je,
            name: S
          }
        }), x(mo, ye);
      }
      E || pe(!1, Fe);
    }
  }, we = (ye) => {
    p || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].includes(ye.key) && (ye.preventDefault(), pe(!0, ye));
  }, Pe = X !== null && V, Se = (ye) => {
    !Pe && w && (Object.defineProperty(ye, "target", {
      writable: !0,
      value: {
        value: z,
        name: S
      }
    }), w(ye));
  };
  delete U["aria-invalid"];
  let P, W;
  const H = [];
  let le = !1, se = !1;
  (Pa({
    value: z
  }) || h) && (O ? P = O(z) : le = !0);
  const ie = Me.map((ye) => {
    if (!/* @__PURE__ */ C.isValidElement(ye))
      return null;
    process.env.NODE_ENV !== "production" && bn.isFragment(ye) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let Fe;
    if (E) {
      if (!Array.isArray(z))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : ao(2));
      Fe = z.some((Je) => km(Je, ye.props.value)), Fe && le && H.push(ye.props.children);
    } else
      Fe = km(z, ye.props.value), Fe && le && (W = ye.props.children);
    return Fe && (se = !0), /* @__PURE__ */ C.cloneElement(ye, {
      "aria-selected": Fe ? "true" : "false",
      onClick: Oe(ye),
      onKeyUp: (Je) => {
        Je.key === " " && Je.preventDefault(), ye.props.onKeyUp && ye.props.onKeyUp(Je);
      },
      role: "option",
      selected: Fe,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": ye.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && C.useEffect(() => {
    if (!se && !E && z !== "") {
      const ye = Me.map((Fe) => Fe.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${z}\` for the select ${S ? `(name="${S}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${ye.filter((Fe) => Fe != null).map((Fe) => `\`${Fe}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [se, Me, E, S, z]), le && (E ? H.length === 0 ? P = null : P = H.reduce((ye, Fe, Je) => (ye.push(Fe), Je < H.length - 1 && ye.push(", "), ye), []) : P = W);
  let ue = q;
  !a && re && X && (ue = B.clientWidth);
  let be;
  typeof D < "u" ? be = D : be = d ? null : 0;
  const xe = A.id || (S ? `mui-component-select-${S}` : void 0), oe = {
    ...t,
    variant: L,
    value: z,
    open: Pe,
    error: g
  }, Le = rN(oe), Ve = {
    ...v.PaperProps,
    ...(_n = v.slotProps) == null ? void 0 : _n.paper
  }, We = ib();
  return /* @__PURE__ */ Ce(C.Fragment, {
    children: [/* @__PURE__ */ k(ZP, {
      as: "div",
      ref: ne,
      tabIndex: be,
      role: "combobox",
      "aria-controls": Pe ? We : void 0,
      "aria-disabled": d ? "true" : void 0,
      "aria-expanded": Pe ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": o,
      "aria-labelledby": [b, xe].filter(Boolean).join(" ") || void 0,
      "aria-describedby": r,
      "aria-required": $ ? "true" : void 0,
      "aria-invalid": g ? "true" : void 0,
      onKeyDown: we,
      onMouseDown: d || p ? null : ae,
      onBlur: Se,
      onFocus: R,
      ...A,
      ownerState: oe,
      className: ge(A.className, Le.select, c),
      id: xe,
      children: nN(P) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        $m || ($m = /* @__PURE__ */ k("span", {
          className: "notranslate",
          "aria-hidden": !0,
          children: "​"
        }))
      ) : P
    }), /* @__PURE__ */ k(tN, {
      "aria-invalid": g,
      value: Array.isArray(z) ? z.join(",") : z,
      name: S,
      ref: Y,
      "aria-hidden": !0,
      onChange: Re,
      tabIndex: -1,
      disabled: d,
      className: Le.nativeInput,
      autoFocus: s,
      required: $,
      ...U,
      ownerState: oe
    }), /* @__PURE__ */ k(eN, {
      as: y,
      className: Le.icon,
      ownerState: oe
    }), /* @__PURE__ */ k(Db, {
      id: `menu-${S || ""}`,
      anchorEl: B,
      open: Pe,
      onClose: me,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      },
      ...v,
      slotProps: {
        ...v.slotProps,
        list: {
          "aria-labelledby": b,
          role: "listbox",
          "aria-multiselectable": E ? "true" : void 0,
          disableListWrap: !0,
          id: We,
          ...v.MenuListProps
        },
        paper: {
          ...Ve,
          style: {
            minWidth: ue,
            ...Ve != null ? Ve.style : null
          }
        }
      },
      children: ie
    })]
  });
});
process.env.NODE_ENV !== "production" && (Vb.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": i.string,
  /**
   * @ignore
   */
  "aria-label": i.string,
  /**
   * @ignore
   */
  autoFocus: i.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: i.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The CSS class name of the select element.
   */
  className: i.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: i.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: i.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: i.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: i.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: Yr,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: i.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: i.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: i.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: i.string,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: i.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool,
  /**
   * @ignore
   */
  readOnly: i.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: i.func,
  /**
   * If `true`, the component is required.
   */
  required: i.bool,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: i.object,
  /**
   * @ignore
   */
  tabIndex: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  type: i.any,
  /**
   * The input value.
   */
  value: i.any,
  /**
   * The variant to use.
   */
  variant: i.oneOf(["standard", "outlined", "filled"])
});
const oN = BI(/* @__PURE__ */ k("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown"), iN = (e) => {
  const {
    classes: t
  } = e, r = _t({
    root: ["root"]
  }, Lb, t);
  return {
    ...t,
    ...r
  };
}, Fd = {
  name: "MuiSelect",
  overridesResolver: (e, t) => t.root,
  shouldForwardProp: (e) => fr(e) && e !== "variant",
  slot: "Root"
}, sN = Be(Fl, Fd)(""), aN = Be(Ll, Fd)(""), lN = Be(jl, Fd)(""), jd = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Wt({
    name: "MuiSelect",
    props: t
  }), {
    autoWidth: o = !1,
    children: s,
    classes: a = {},
    className: l,
    defaultOpen: c = !1,
    displayEmpty: u = !1,
    IconComponent: f = oN,
    id: d,
    input: h,
    inputProps: g,
    label: y,
    labelId: m,
    MenuProps: b,
    multiple: v = !1,
    native: E = !1,
    onClose: S,
    onOpen: w,
    open: x,
    renderValue: T,
    SelectDisplayProps: R,
    variant: I = "outlined",
    ...N
  } = r, p = E ? jb : Vb, O = ni(), $ = ti({
    props: r,
    muiFormControl: O,
    states: ["variant", "error"]
  }), A = $.variant || I, D = {
    ...r,
    variant: A,
    classes: a
  }, M = iN(D), {
    root: _,
    ...L
  } = M, U = h || {
    standard: /* @__PURE__ */ k(sN, {
      ownerState: D
    }),
    outlined: /* @__PURE__ */ k(aN, {
      label: y,
      ownerState: D
    }),
    filled: /* @__PURE__ */ k(lN, {
      ownerState: D
    })
  }[A], z = Mn(n, ws(U));
  return /* @__PURE__ */ k(C.Fragment, {
    children: /* @__PURE__ */ C.cloneElement(U, {
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: p,
      inputProps: {
        children: s,
        error: $.error,
        IconComponent: f,
        variant: A,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: v,
        ...E ? {
          id: d
        } : {
          autoWidth: o,
          defaultOpen: c,
          displayEmpty: u,
          labelId: m,
          MenuProps: b,
          onClose: S,
          onOpen: w,
          open: x,
          renderValue: T,
          SelectDisplayProps: {
            id: d,
            ...R
          }
        },
        ...g,
        classes: g ? rr(L, g.classes) : L,
        ...h ? h.props.inputProps : {}
      },
      ...(v && E || u) && A === "outlined" ? {
        notched: !0
      } : {},
      ref: z,
      className: ge(U.props.className, l, M.root),
      // If a custom input is provided via 'input' prop, do not allow 'variant' to be propagated to it's root element. See https://github.com/mui/material-ui/issues/33894.
      ...!h && {
        variant: A
      },
      ...N
    })
  });
});
process.env.NODE_ENV !== "production" && (jd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: i.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: i.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: i.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: i.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: i.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: i.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: i.object,
  /**
   * See [OutlinedInput#label](https://mui.com/material-ui/api/outlined-input/#props)
   */
  label: i.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: i.string,
  /**
   * Props applied to the [`Menu`](https://mui.com/material-ui/api/menu/) element.
   */
  MenuProps: i.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: i.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: i.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: i.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: i.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: i.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: i.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: i.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: i.oneOfType([i.oneOf([""]), i.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
});
jd.muiName = "Select";
function cN(e) {
  return Nt("MuiTextField", e);
}
Dt("MuiTextField", ["root"]);
const uN = {
  standard: Fl,
  filled: jl,
  outlined: Ll
}, dN = (e) => {
  const {
    classes: t
  } = e;
  return _t({
    root: ["root"]
  }, cN, t);
}, fN = Be(Tb, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), zb = /* @__PURE__ */ C.forwardRef(function(t, n) {
  const r = Wt({
    props: t,
    name: "MuiTextField"
  }), {
    autoComplete: o,
    autoFocus: s = !1,
    children: a,
    className: l,
    color: c = "primary",
    defaultValue: u,
    disabled: f = !1,
    error: d = !1,
    FormHelperTextProps: h,
    fullWidth: g = !1,
    helperText: y,
    id: m,
    InputLabelProps: b,
    inputProps: v,
    InputProps: E,
    inputRef: S,
    label: w,
    maxRows: x,
    minRows: T,
    multiline: R = !1,
    name: I,
    onBlur: N,
    onChange: p,
    onFocus: O,
    placeholder: $,
    required: A = !1,
    rows: D,
    select: M = !1,
    SelectProps: _,
    slots: L = {},
    slotProps: U = {},
    type: z,
    value: j,
    variant: V = "outlined",
    ...K
  } = r, Y = {
    ...r,
    autoFocus: s,
    color: c,
    disabled: f,
    error: d,
    fullWidth: g,
    multiline: R,
    required: A,
    select: M,
    variant: V
  }, te = dN(Y);
  process.env.NODE_ENV !== "production" && M && !a && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const X = ib(m), ee = y && X ? `${X}-helper-text` : void 0, re = w && X ? `${X}-label` : void 0, q = uN[V], Q = {
    slots: L,
    slotProps: {
      input: E,
      inputLabel: b,
      htmlInput: v,
      formHelperText: h,
      select: _,
      ...U
    }
  }, G = {}, ne = Q.slotProps.inputLabel;
  V === "outlined" && (ne && typeof ne.shrink < "u" && (G.notched = ne.shrink), G.label = w), M && ((!_ || !_.native) && (G.id = void 0), G["aria-describedby"] = void 0);
  const [B, pe] = en("root", {
    elementType: fN,
    shouldForwardComponentProp: !0,
    externalForwardedProps: {
      ...Q,
      ...K
    },
    ownerState: Y,
    className: ge(te.root, l),
    ref: n,
    additionalProps: {
      disabled: f,
      error: d,
      fullWidth: g,
      required: A,
      color: c,
      variant: V
    }
  }), [ae, me] = en("input", {
    elementType: q,
    externalForwardedProps: Q,
    additionalProps: G,
    ownerState: Y
  }), [Me, Re] = en("inputLabel", {
    elementType: Sb,
    externalForwardedProps: Q,
    ownerState: Y
  }), [Oe, we] = en("htmlInput", {
    elementType: "input",
    externalForwardedProps: Q,
    ownerState: Y
  }), [Pe, Se] = en("formHelperText", {
    elementType: Eb,
    externalForwardedProps: Q,
    ownerState: Y
  }), [P, W] = en("select", {
    elementType: jd,
    externalForwardedProps: Q,
    ownerState: Y
  }), H = /* @__PURE__ */ k(ae, {
    "aria-describedby": ee,
    autoComplete: o,
    autoFocus: s,
    defaultValue: u,
    fullWidth: g,
    multiline: R,
    name: I,
    rows: D,
    maxRows: x,
    minRows: T,
    type: z,
    value: j,
    id: X,
    inputRef: S,
    onBlur: N,
    onChange: p,
    onFocus: O,
    placeholder: $,
    inputProps: we,
    slots: {
      input: L.htmlInput ? Oe : void 0
    },
    ...me
  });
  return /* @__PURE__ */ Ce(B, {
    ...pe,
    children: [w != null && w !== "" && /* @__PURE__ */ k(Me, {
      htmlFor: X,
      id: re,
      ...Re,
      children: w
    }), M ? /* @__PURE__ */ k(P, {
      "aria-describedby": ee,
      id: X,
      labelId: re,
      value: j,
      input: H,
      ...W,
      children: a
    }) : H, y && /* @__PURE__ */ k(Pe, {
      id: ee,
      ...Se,
      children: y
    })]
  });
});
process.env.NODE_ENV !== "production" && (zb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: i.bool,
  /**
   * @ignore
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: i.bool,
  /**
   * Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.
   * @deprecated Use `slotProps.formHelperText` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  FormHelperTextProps: i.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The helper text content.
   */
  helperText: i.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: i.string,
  /**
   * Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   * @deprecated Use `slotProps.inputLabel` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputLabelProps: i.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.htmlInput` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),
   * [`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)
   * component depending on the `variant` prop value.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Yr,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: i.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: i.bool,
  /**
   * Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.
   * @deprecated Use `slotProps.select` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SelectProps: i.object,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    formHelperText: i.oneOfType([i.func, i.object]),
    htmlInput: i.oneOfType([i.func, i.object]),
    input: i.oneOfType([i.func, i.object]),
    inputLabel: i.oneOfType([i.func, i.object]),
    select: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    formHelperText: i.elementType,
    htmlInput: i.elementType,
    input: i.elementType,
    inputLabel: i.elementType,
    root: i.elementType,
    select: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
});
const pN = Dt("MuiBox", ["root"]), mN = rb(), Wb = ok({
  themeId: xl,
  defaultTheme: mN,
  defaultClassName: pN.root,
  generateClassName: Zy.generate
});
process.env.NODE_ENV !== "production" && (Wb.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
});
const hN = Be(zb)`
  input {
    text-align: center;
  }
`, gN = {
  TextFieldStyled: hN
}, yN = (e) => /* @__PURE__ */ k(gN.TextFieldStyled, { ...e }), hi = {
  left: "ArrowLeft",
  right: "ArrowRight",
  backspace: "Backspace",
  home: "Home",
  end: "End"
};
function bN(e, t) {
  return e <= 0 ? [] : Array.from({ length: e }, t);
}
function vN(e, t, n) {
  return e.map((r, o) => t === o ? n : r);
}
function Im(e) {
  return e.join("");
}
function Pm(e, t) {
  return [...e, t];
}
function xN(e, t, n) {
  return e.reduce(
    (r, o, s) => {
      const { characters: a, restArrayMerged: l } = r;
      if (s < n)
        return {
          restArrayMerged: l,
          characters: Pm(a, o)
        };
      const [c, ...u] = l;
      return {
        restArrayMerged: u,
        characters: Pm(a, c || "")
      };
    },
    {
      restArrayMerged: t,
      characters: []
    }
  ).characters;
}
function wN(e) {
  return (t) => {
    e.forEach((n) => {
      typeof n == "function" ? n(t) : n != null && (n.current = t);
    });
  };
}
function SN(e) {
  return e.split("");
}
function Nm(e) {
  const t = F.useRef(() => {
    throw new Error("Cannot call an event handler while rendering.");
  });
  return F.useInsertionEffect(() => {
    t.current = e;
  }), F.useCallback((...n) => {
    var r;
    return (r = t.current) == null ? void 0 : r.call(t, ...n);
  }, []);
}
const TN = () => !0, EN = F.forwardRef(
  (e, t) => {
    const {
      value: n = "",
      length: r = 4,
      autoFocus: o = !1,
      onChange: s,
      TextFieldsProps: a,
      onComplete: l,
      validateChar: c = TN,
      className: u,
      onBlur: f,
      ...d
    } = e, h = F.useRef(n), g = Nm(l), y = Nm((O) => {
      const $ = O.slice(0, r);
      return {
        isCompleted: $.length === r,
        finalValue: $
      };
    });
    F.useEffect(() => {
      const { isCompleted: O, finalValue: $ } = y(
        h.current
      );
      O && g($);
    }, [r, g, y]);
    const m = bN(
      r,
      (O, $) => ({
        character: n[$] || "",
        inputRef: F.createRef()
      })
    ), b = (O) => m.findIndex(({ inputRef: $ }) => $.current === O), v = () => m.map(({ character: O }) => O), E = (O, $) => {
      const A = vN(
        v(),
        O,
        $
      );
      return Im(A);
    }, S = (O) => {
      var $, A;
      (A = ($ = m[O]) == null ? void 0 : $.inputRef.current) == null || A.focus();
    }, w = (O) => {
      var $, A;
      (A = ($ = m[O]) == null ? void 0 : $.inputRef.current) == null || A.select();
    }, x = (O) => {
      O + 1 !== r && (m[O + 1].character ? w(O + 1) : S(O + 1));
    }, T = (O, $) => typeof c != "function" ? !0 : c(O, $), R = (O) => {
      const $ = b(O.target);
      if ($ === 0 && O.target.value.length > 1) {
        const { finalValue: U, isCompleted: z } = y(
          O.target.value
        );
        s == null || s(U), z && (l == null || l(U)), w(U.length - 1);
        return;
      }
      const A = O.target.value[0] || "";
      let D = A;
      D && !T(D, $) && (D = "");
      const M = E($, D);
      s == null || s(M);
      const { isCompleted: _, finalValue: L } = y(M);
      _ && (l == null || l(L)), D !== "" ? M.length - 1 < $ ? w(M.length) : x($) : A === "" && M.length <= $ && w($ - 1);
    }, I = (O) => {
      const $ = O.target, A = $.selectionStart, D = $.selectionEnd, M = b($), _ = A === 0 && D === 0;
      if ($.value === O.key)
        O.preventDefault(), x(M);
      else if (hi.backspace === O.key) {
        if (!$.value)
          O.preventDefault(), w(M - 1);
        else if (_) {
          O.preventDefault();
          const L = E(M, "");
          s == null || s(L), L.length <= M && w(M - 1);
        }
      } else hi.left === O.key ? (O.preventDefault(), w(M - 1)) : hi.right === O.key ? (O.preventDefault(), w(M + 1)) : hi.home === O.key ? (O.preventDefault(), w(0)) : hi.end === O.key && (O.preventDefault(), w(m.length - 1));
    }, N = (O) => {
      const $ = O.clipboardData.getData("text/plain"), A = O.target, D = m.findIndex(
        ({ character: j, inputRef: V }) => j === "" || V.current === A
      ), M = v(), _ = xN(
        M,
        SN($),
        D
      ).map((j, V) => T(j, V) ? j : ""), L = Im(_);
      s == null || s(L);
      const { isCompleted: U, finalValue: z } = y(L);
      U ? (l == null || l(z), w(r - 1)) : w(L.length);
    }, p = (O) => {
      if (!m.some(({ inputRef: $ }) => $.current === O.relatedTarget)) {
        const { isCompleted: $, finalValue: A } = y(n);
        f == null || f(A, $);
      }
    };
    return /* @__PURE__ */ k(
      Wb,
      {
        display: "flex",
        gap: "20px",
        alignItems: "center",
        ref: t,
        className: `MuiOtpInput-Box ${u || ""}`,
        ...d,
        children: m.map(({ character: O, inputRef: $ }, A) => {
          const {
            onPaste: D,
            onFocus: M,
            onKeyDown: _,
            className: L,
            onBlur: U,
            inputRef: z,
            ...j
          } = typeof a == "function" ? a(A) || {} : a || {};
          return /* @__PURE__ */ k(
            yN,
            {
              autoFocus: o ? A === 0 : !1,
              autoComplete: "one-time-code",
              value: O,
              inputRef: wN([$, z]),
              className: `MuiOtpInput-TextField MuiOtpInput-TextField-${A + 1} ${L || ""}`,
              onPaste: (V) => {
                V.preventDefault(), N(V), D == null || D(V);
              },
              onFocus: (V) => {
                V.preventDefault(), V.target.select(), M == null || M(V);
              },
              onChange: R,
              onKeyDown: (V) => {
                I(V), _ == null || _(V);
              },
              onBlur: (V) => {
                U == null || U(V), p(V);
              },
              ...j
            },
            A
          );
        })
      }
    );
  }
), Ub = _e(
  ({
    label: e = "",
    tooltip: t,
    value: n,
    onChange: r,
    isRequired: o,
    isDisabled: s,
    isError: a,
    errorMessage: l = ""
  }) => {
    const { textCommonStyles: c } = fl({
      isTitle: !1,
      isLabel: !0,
      textColor: s ? "disabled" : a ? "error" : "auto"
    });
    return /* @__PURE__ */ Ce(Xt, { gap: 0, children: [
      /* @__PURE__ */ k(
        Go,
        {
          label: e,
          elementId: void 0,
          tooltip: t,
          isRequired: o,
          isDisabled: s,
          isError: a
        }
      ),
      /* @__PURE__ */ k(
        EN,
        {
          value: n,
          onChange: r,
          length: 6,
          TextFieldsProps: {
            disabled: s,
            error: a
          },
          sx: {
            "& .MuiInputBase-root": {
              borderRadius: "8px"
            },
            "& input": {
              width: "8px",
              height: "8px",
              p: "16px",
              borderRadius: "8px"
            }
          }
        }
      ),
      /* @__PURE__ */ k(
        cn,
        {
          text: a ? l : "",
          isLabel: !0,
          sx: { ...c, minHeight: "24px" }
        }
      )
    ] });
  }
);
Ub.displayName = "OtpInput";
const Hb = _e(({ isError: e, fullWidth: t, sx: n, ...r }) => {
  const [o, s] = _r(!1);
  return /* @__PURE__ */ k(
    Ed,
    {
      type: o ? "text" : "password",
      fullWidth: t,
      isError: e,
      endAdornment: /* @__PURE__ */ k(
        lr,
        {
          isCircle: !0,
          isGhost: !0,
          icon: o ? "solar:eye-closed-bold-duotone" : "solar:eye-bold-duotone",
          color: e ? "error" : "primary",
          sx: { mr: -2 },
          onClick: () => s((a) => !a)
        }
      ),
      sx: {
        width: t ? "100%" : "calc(200px - 40px) !important",
        ...n
      },
      ...r
    }
  );
});
Hb.displayName = "Password";
const qb = _e(
  ({ label: e = "", tooltip: t, name: n, options: r, optionLabelDirection: o = "end", value: s, onChange: a }) => /* @__PURE__ */ Ce(Xt, { gap: 0, children: [
    /* @__PURE__ */ k(Go, { label: e, elementId: void 0, tooltip: t }),
    /* @__PURE__ */ k(Xt, { gap: 0, children: r.map((l) => /* @__PURE__ */ k(
      vl,
      {
        labelsDirection: "row",
        startLabel: o === "start" ? l.label : "",
        endLabel: o === "end" ? l.label : "",
        isDisabled: l.isDisabled,
        renderElement: (c) => /* @__PURE__ */ k(
          Vg,
          {
            id: c,
            name: n,
            value: l.value,
            checked: s === l.value,
            disabled: l.isDisabled,
            onChange: (u) => a(r.find(({ value: f }) => f === u.target.value)),
            sx: {
              py: "6px",
              px: 0,
              mr: o === "start" ? "2px" : "8px",
              ml: o === "end" ? "2px" : "8px"
            }
          }
        )
      },
      l.value
    )) })
  ] })
);
qb.displayName = "Radios";
const Gb = _e(
  ({ value: e, onChange: t, startLabel: n, endLabel: r, labelsDirection: o = "row", isDisabled: s }) => {
    const a = $n(
      (l) => /* @__PURE__ */ k(
        zg,
        {
          id: l,
          color: "primary",
          checked: e,
          disabled: s,
          onChange: (c) => t(c.target.checked),
          sx: {
            "& .MuiSwitch-track": {
              transition: "background-color 0s"
            }
          }
        }
      ),
      [e, t]
    );
    return n || r ? /* @__PURE__ */ k(
      vl,
      {
        labelsDirection: o,
        startLabel: n,
        endLabel: r,
        isDisabled: s,
        renderElement: a
      }
    ) : a();
  }
);
Gb.displayName = "Switch";
var Ss = (e) => e.type === "checkbox", no = (e) => e instanceof Date, Zt = (e) => e == null;
const Yb = (e) => typeof e == "object";
var St = (e) => !Zt(e) && !Array.isArray(e) && Yb(e) && !no(e), Kb = (e) => St(e) && e.target ? Ss(e.target) ? e.target.checked : e.target.value : e, CN = (e) => e.substring(0, e.search(/\.\d+(\.|$)/)) || e, Xb = (e, t) => e.has(CN(t)), ON = (e) => {
  const t = e.constructor && e.constructor.prototype;
  return St(t) && t.hasOwnProperty("isPrototypeOf");
}, Ld = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
function ht(e) {
  let t;
  const n = Array.isArray(e), r = typeof FileList < "u" ? e instanceof FileList : !1;
  if (e instanceof Date)
    t = new Date(e);
  else if (e instanceof Set)
    t = new Set(e);
  else if (!(Ld && (e instanceof Blob || r)) && (n || St(e)))
    if (t = n ? [] : {}, !n && !ON(e))
      t = e;
    else
      for (const o in e)
        e.hasOwnProperty(o) && (t[o] = ht(e[o]));
  else
    return e;
  return t;
}
var Ts = (e) => Array.isArray(e) ? e.filter(Boolean) : [], ct = (e) => e === void 0, fe = (e, t, n) => {
  if (!t || !St(e))
    return n;
  const r = Ts(t.split(/[,[\].]+?/)).reduce((o, s) => Zt(o) ? o : o[s], e);
  return ct(r) || r === e ? ct(e[t]) ? n : e[t] : r;
}, un = (e) => typeof e == "boolean", Vd = (e) => /^\w*$/.test(e), Qb = (e) => Ts(e.replace(/["|']|\]/g, "").split(/\.|\[/)), Ue = (e, t, n) => {
  let r = -1;
  const o = Vd(t) ? [t] : Qb(t), s = o.length, a = s - 1;
  for (; ++r < s; ) {
    const l = o[r];
    let c = n;
    if (r !== a) {
      const u = e[l];
      c = St(u) || Array.isArray(u) ? u : isNaN(+o[r + 1]) ? {} : [];
    }
    if (l === "__proto__" || l === "constructor" || l === "prototype")
      return;
    e[l] = c, e = e[l];
  }
};
const Ba = {
  BLUR: "blur",
  FOCUS_OUT: "focusout",
  CHANGE: "change"
}, Cn = {
  onBlur: "onBlur",
  onChange: "onChange",
  onSubmit: "onSubmit",
  onTouched: "onTouched",
  all: "all"
}, gr = {
  max: "max",
  min: "min",
  maxLength: "maxLength",
  minLength: "minLength",
  pattern: "pattern",
  required: "required",
  validate: "validate"
}, Jb = F.createContext(null), zn = () => F.useContext(Jb), RN = (e) => {
  const { children: t, ...n } = e;
  return F.createElement(Jb.Provider, { value: n }, t);
};
var Zb = (e, t, n, r = !0) => {
  const o = {
    defaultValues: t._defaultValues
  };
  for (const s in e)
    Object.defineProperty(o, s, {
      get: () => {
        const a = s;
        return t._proxyFormState[a] !== Cn.all && (t._proxyFormState[a] = !r || Cn.all), n && (n[a] = !0), e[a];
      }
    });
  return o;
};
function $N(e) {
  const t = zn(), { control: n = t.control, disabled: r, name: o, exact: s } = e || {}, [a, l] = F.useState(n._formState), c = F.useRef({
    isDirty: !1,
    isLoading: !1,
    dirtyFields: !1,
    touchedFields: !1,
    validatingFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  }), u = F.useRef(o);
  return u.current = o, F.useEffect(() => n._subscribe({
    name: u.current,
    formState: c.current,
    exact: s,
    callback: (f) => {
      !r && l({
        ...n._formState,
        ...f
      });
    }
  }), [n, r, s]), F.useEffect(() => {
    c.current.isValid && n._setValid(!0);
  }, [n]), F.useMemo(() => Zb(a, n, c.current, !1), [a, n]);
}
var Zn = (e) => typeof e == "string", ev = (e, t, n, r, o) => Zn(e) ? (r && t.watch.add(e), fe(n, e, o)) : Array.isArray(e) ? e.map((s) => (r && t.watch.add(s), fe(n, s))) : (r && (t.watchAll = !0), n);
function kN(e) {
  const t = zn(), { control: n = t.control, name: r, defaultValue: o, disabled: s, exact: a } = e || {}, l = F.useRef(r), c = F.useRef(o);
  l.current = r, F.useEffect(() => n._subscribe({
    name: l.current,
    formState: {
      values: !0
    },
    exact: a,
    callback: (d) => !s && f(ev(l.current, n._names, d.values || n._formValues, !1, c.current))
  }), [n, s, a]);
  const [u, f] = F.useState(n._getWatch(r, o));
  return F.useEffect(() => n._removeUnmounted()), u;
}
function IN(e) {
  const t = zn(), { name: n, disabled: r, control: o = t.control, shouldUnregister: s } = e, a = Xb(o._names.array, n), l = kN({
    control: o,
    name: n,
    defaultValue: fe(o._formValues, n, fe(o._defaultValues, n, e.defaultValue)),
    exact: !0
  }), c = $N({
    control: o,
    name: n,
    exact: !0
  }), u = F.useRef(e), f = F.useRef(o.register(n, {
    ...e.rules,
    value: l,
    ...un(e.disabled) ? { disabled: e.disabled } : {}
  })), d = F.useMemo(() => Object.defineProperties({}, {
    invalid: {
      enumerable: !0,
      get: () => !!fe(c.errors, n)
    },
    isDirty: {
      enumerable: !0,
      get: () => !!fe(c.dirtyFields, n)
    },
    isTouched: {
      enumerable: !0,
      get: () => !!fe(c.touchedFields, n)
    },
    isValidating: {
      enumerable: !0,
      get: () => !!fe(c.validatingFields, n)
    },
    error: {
      enumerable: !0,
      get: () => fe(c.errors, n)
    }
  }), [c, n]), h = F.useCallback((b) => f.current.onChange({
    target: {
      value: Kb(b),
      name: n
    },
    type: Ba.CHANGE
  }), [n]), g = F.useCallback(() => f.current.onBlur({
    target: {
      value: fe(o._formValues, n),
      name: n
    },
    type: Ba.BLUR
  }), [n, o._formValues]), y = F.useCallback((b) => {
    const v = fe(o._fields, n);
    v && b && (v._f.ref = {
      focus: () => b.focus(),
      select: () => b.select(),
      setCustomValidity: (E) => b.setCustomValidity(E),
      reportValidity: () => b.reportValidity()
    });
  }, [o._fields, n]), m = F.useMemo(() => ({
    name: n,
    value: l,
    ...un(r) || c.disabled ? { disabled: c.disabled || r } : {},
    onChange: h,
    onBlur: g,
    ref: y
  }), [n, r, c.disabled, h, g, y, l]);
  return F.useEffect(() => {
    const b = o._options.shouldUnregister || s;
    o.register(n, {
      ...u.current.rules,
      ...un(u.current.disabled) ? { disabled: u.current.disabled } : {}
    });
    const v = (E, S) => {
      const w = fe(o._fields, E);
      w && w._f && (w._f.mount = S);
    };
    if (v(n, !0), b) {
      const E = ht(fe(o._options.defaultValues, n));
      Ue(o._defaultValues, n, E), ct(fe(o._formValues, n)) && Ue(o._formValues, n, E);
    }
    return !a && o.register(n), () => {
      (a ? b && !o._state.action : b) ? o.unregister(n) : v(n, !1);
    };
  }, [n, o, a, s]), F.useEffect(() => {
    o._setDisabledField({
      disabled: r,
      name: n
    });
  }, [r, n, o]), F.useMemo(() => ({
    field: m,
    formState: c,
    fieldState: d
  }), [m, c, d]);
}
const ri = (e) => e.render(IN(e));
var tv = (e, t, n, r, o) => t ? {
  ...n[e],
  types: {
    ...n[e] && n[e].types ? n[e].types : {},
    [r]: o || !0
  }
} : {}, rn = (e) => Array.isArray(e) ? e : [e], Am = () => {
  let e = [];
  return {
    get observers() {
      return e;
    },
    next: (o) => {
      for (const s of e)
        s.next && s.next(o);
    },
    subscribe: (o) => (e.push(o), {
      unsubscribe: () => {
        e = e.filter((s) => s !== o);
      }
    }),
    unsubscribe: () => {
      e = [];
    }
  };
}, pu = (e) => Zt(e) || !Yb(e);
function Ar(e, t) {
  if (pu(e) || pu(t))
    return e === t;
  if (no(e) && no(t))
    return e.getTime() === t.getTime();
  const n = Object.keys(e), r = Object.keys(t);
  if (n.length !== r.length)
    return !1;
  for (const o of n) {
    const s = e[o];
    if (!r.includes(o))
      return !1;
    if (o !== "ref") {
      const a = t[o];
      if (no(s) && no(a) || St(s) && St(a) || Array.isArray(s) && Array.isArray(a) ? !Ar(s, a) : s !== a)
        return !1;
    }
  }
  return !0;
}
var qt = (e) => St(e) && !Object.keys(e).length, zd = (e) => e.type === "file", Fn = (e) => typeof e == "function", Fa = (e) => {
  if (!Ld)
    return !1;
  const t = e ? e.ownerDocument : 0;
  return e instanceof (t && t.defaultView ? t.defaultView.HTMLElement : HTMLElement);
}, nv = (e) => e.type === "select-multiple", Wd = (e) => e.type === "radio", PN = (e) => Wd(e) || Ss(e), vc = (e) => Fa(e) && e.isConnected;
function NN(e, t) {
  const n = t.slice(0, -1).length;
  let r = 0;
  for (; r < n; )
    e = ct(e) ? r++ : e[t[r++]];
  return e;
}
function AN(e) {
  for (const t in e)
    if (e.hasOwnProperty(t) && !ct(e[t]))
      return !1;
  return !0;
}
function kt(e, t) {
  const n = Array.isArray(t) ? t : Vd(t) ? [t] : Qb(t), r = n.length === 1 ? e : NN(e, n), o = n.length - 1, s = n[o];
  return r && delete r[s], o !== 0 && (St(r) && qt(r) || Array.isArray(r) && AN(r)) && kt(e, n.slice(0, -1)), e;
}
var rv = (e) => {
  for (const t in e)
    if (Fn(e[t]))
      return !0;
  return !1;
};
function ja(e, t = {}) {
  const n = Array.isArray(e);
  if (St(e) || n)
    for (const r in e)
      Array.isArray(e[r]) || St(e[r]) && !rv(e[r]) ? (t[r] = Array.isArray(e[r]) ? [] : {}, ja(e[r], t[r])) : Zt(e[r]) || (t[r] = !0);
  return t;
}
function ov(e, t, n) {
  const r = Array.isArray(e);
  if (St(e) || r)
    for (const o in e)
      Array.isArray(e[o]) || St(e[o]) && !rv(e[o]) ? ct(t) || pu(n[o]) ? n[o] = Array.isArray(e[o]) ? ja(e[o], []) : { ...ja(e[o]) } : ov(e[o], Zt(t) ? {} : t[o], n[o]) : n[o] = !Ar(e[o], t[o]);
  return n;
}
var gi = (e, t) => ov(e, t, ja(t));
const Mm = {
  value: !1,
  isValid: !1
}, _m = { value: !0, isValid: !0 };
var iv = (e) => {
  if (Array.isArray(e)) {
    if (e.length > 1) {
      const t = e.filter((n) => n && n.checked && !n.disabled).map((n) => n.value);
      return { value: t, isValid: !!t.length };
    }
    return e[0].checked && !e[0].disabled ? (
      // @ts-expect-error expected to work in the browser
      e[0].attributes && !ct(e[0].attributes.value) ? ct(e[0].value) || e[0].value === "" ? _m : { value: e[0].value, isValid: !0 } : _m
    ) : Mm;
  }
  return Mm;
}, sv = (e, { valueAsNumber: t, valueAsDate: n, setValueAs: r }) => ct(e) ? e : t ? e === "" ? NaN : e && +e : n && Zn(e) ? new Date(e) : r ? r(e) : e;
const Dm = {
  isValid: !1,
  value: null
};
var av = (e) => Array.isArray(e) ? e.reduce((t, n) => n && n.checked && !n.disabled ? {
  isValid: !0,
  value: n.value
} : t, Dm) : Dm;
function Bm(e) {
  const t = e.ref;
  return zd(t) ? t.files : Wd(t) ? av(e.refs).value : nv(t) ? [...t.selectedOptions].map(({ value: n }) => n) : Ss(t) ? iv(e.refs).value : sv(ct(t.value) ? e.ref.value : t.value, e);
}
var MN = (e, t, n, r) => {
  const o = {};
  for (const s of e) {
    const a = fe(t, s);
    a && Ue(o, s, a._f);
  }
  return {
    criteriaMode: n,
    names: [...e],
    fields: o,
    shouldUseNativeValidation: r
  };
}, La = (e) => e instanceof RegExp, yi = (e) => ct(e) ? e : La(e) ? e.source : St(e) ? La(e.value) ? e.value.source : e.value : e, Po = (e) => ({
  isOnSubmit: !e || e === Cn.onSubmit,
  isOnBlur: e === Cn.onBlur,
  isOnChange: e === Cn.onChange,
  isOnAll: e === Cn.all,
  isOnTouch: e === Cn.onTouched
});
const Fm = "AsyncFunction";
var _N = (e) => !!e && !!e.validate && !!(Fn(e.validate) && e.validate.constructor.name === Fm || St(e.validate) && Object.values(e.validate).find((t) => t.constructor.name === Fm)), DN = (e) => e.mount && (e.required || e.min || e.max || e.maxLength || e.minLength || e.pattern || e.validate), mu = (e, t, n) => !n && (t.watchAll || t.watch.has(e) || [...t.watch].some((r) => e.startsWith(r) && /^\.\w+/.test(e.slice(r.length))));
const Do = (e, t, n, r) => {
  for (const o of n || Object.keys(e)) {
    const s = fe(e, o);
    if (s) {
      const { _f: a, ...l } = s;
      if (a) {
        if (a.refs && a.refs[0] && t(a.refs[0], o) && !r)
          return !0;
        if (a.ref && t(a.ref, a.name) && !r)
          return !0;
        if (Do(l, t))
          break;
      } else if (St(l) && Do(l, t))
        break;
    }
  }
};
function jm(e, t, n) {
  const r = fe(e, n);
  if (r || Vd(n))
    return {
      error: r,
      name: n
    };
  const o = n.split(".");
  for (; o.length; ) {
    const s = o.join("."), a = fe(t, s), l = fe(e, s);
    if (a && !Array.isArray(a) && n !== s)
      return { name: n };
    if (l && l.type)
      return {
        name: s,
        error: l
      };
    o.pop();
  }
  return {
    name: n
  };
}
var BN = (e, t, n, r) => {
  n(e);
  const { name: o, ...s } = e;
  return qt(s) || Object.keys(s).length >= Object.keys(t).length || Object.keys(s).find((a) => t[a] === (!r || Cn.all));
}, FN = (e, t, n) => !e || !t || e === t || rn(e).some((r) => r && (n ? r === t : r.startsWith(t) || t.startsWith(r))), jN = (e, t, n, r, o) => o.isOnAll ? !1 : !n && o.isOnTouch ? !(t || e) : (n ? r.isOnBlur : o.isOnBlur) ? !e : (n ? r.isOnChange : o.isOnChange) ? e : !0, LN = (e, t) => !Ts(fe(e, t)).length && kt(e, t), lv = (e, t, n) => {
  const r = rn(fe(e, n));
  return Ue(r, "root", t[n]), Ue(e, n, r), e;
}, la = (e) => Zn(e);
function Lm(e, t, n = "validate") {
  if (la(e) || Array.isArray(e) && e.every(la) || un(e) && !e)
    return {
      type: n,
      message: la(e) ? e : "",
      ref: t
    };
}
var Oo = (e) => St(e) && !La(e) ? e : {
  value: e,
  message: ""
}, hu = async (e, t, n, r, o, s) => {
  const { ref: a, refs: l, required: c, maxLength: u, minLength: f, min: d, max: h, pattern: g, validate: y, name: m, valueAsNumber: b, mount: v } = e._f, E = fe(n, m);
  if (!v || t.has(m))
    return {};
  const S = l ? l[0] : a, w = ($) => {
    o && S.reportValidity && (S.setCustomValidity(un($) ? "" : $ || ""), S.reportValidity());
  }, x = {}, T = Wd(a), R = Ss(a), I = T || R, N = (b || zd(a)) && ct(a.value) && ct(E) || Fa(a) && a.value === "" || E === "" || Array.isArray(E) && !E.length, p = tv.bind(null, m, r, x), O = ($, A, D, M = gr.maxLength, _ = gr.minLength) => {
    const L = $ ? A : D;
    x[m] = {
      type: $ ? M : _,
      message: L,
      ref: a,
      ...p($ ? M : _, L)
    };
  };
  if (s ? !Array.isArray(E) || !E.length : c && (!I && (N || Zt(E)) || un(E) && !E || R && !iv(l).isValid || T && !av(l).isValid)) {
    const { value: $, message: A } = la(c) ? { value: !!c, message: c } : Oo(c);
    if ($ && (x[m] = {
      type: gr.required,
      message: A,
      ref: S,
      ...p(gr.required, A)
    }, !r))
      return w(A), x;
  }
  if (!N && (!Zt(d) || !Zt(h))) {
    let $, A;
    const D = Oo(h), M = Oo(d);
    if (!Zt(E) && !isNaN(E)) {
      const _ = a.valueAsNumber || E && +E;
      Zt(D.value) || ($ = _ > D.value), Zt(M.value) || (A = _ < M.value);
    } else {
      const _ = a.valueAsDate || new Date(E), L = (j) => /* @__PURE__ */ new Date((/* @__PURE__ */ new Date()).toDateString() + " " + j), U = a.type == "time", z = a.type == "week";
      Zn(D.value) && E && ($ = U ? L(E) > L(D.value) : z ? E > D.value : _ > new Date(D.value)), Zn(M.value) && E && (A = U ? L(E) < L(M.value) : z ? E < M.value : _ < new Date(M.value));
    }
    if (($ || A) && (O(!!$, D.message, M.message, gr.max, gr.min), !r))
      return w(x[m].message), x;
  }
  if ((u || f) && !N && (Zn(E) || s && Array.isArray(E))) {
    const $ = Oo(u), A = Oo(f), D = !Zt($.value) && E.length > +$.value, M = !Zt(A.value) && E.length < +A.value;
    if ((D || M) && (O(D, $.message, A.message), !r))
      return w(x[m].message), x;
  }
  if (g && !N && Zn(E)) {
    const { value: $, message: A } = Oo(g);
    if (La($) && !E.match($) && (x[m] = {
      type: gr.pattern,
      message: A,
      ref: a,
      ...p(gr.pattern, A)
    }, !r))
      return w(A), x;
  }
  if (y) {
    if (Fn(y)) {
      const $ = await y(E, n), A = Lm($, S);
      if (A && (x[m] = {
        ...A,
        ...p(gr.validate, A.message)
      }, !r))
        return w(A.message), x;
    } else if (St(y)) {
      let $ = {};
      for (const A in y) {
        if (!qt($) && !r)
          break;
        const D = Lm(await y[A](E, n), S, A);
        D && ($ = {
          ...D,
          ...p(A, D.message)
        }, w(D.message), r && (x[m] = $));
      }
      if (!qt($) && (x[m] = {
        ref: S,
        ...$
      }, !r))
        return x;
    }
  }
  return w(!0), x;
};
const VN = {
  mode: Cn.onSubmit,
  reValidateMode: Cn.onChange,
  shouldFocusError: !0
};
function zN(e = {}) {
  let t = {
    ...VN,
    ...e
  }, n = {
    submitCount: 0,
    isDirty: !1,
    isLoading: Fn(t.defaultValues),
    isValidating: !1,
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    touchedFields: {},
    dirtyFields: {},
    validatingFields: {},
    errors: t.errors || {},
    disabled: t.disabled || !1
  };
  const r = {};
  let o = St(t.defaultValues) || St(t.values) ? ht(t.values || t.defaultValues) || {} : {}, s = t.shouldUnregister ? {} : ht(o), a = {
    action: !1,
    mount: !1,
    watch: !1
  }, l = {
    mount: /* @__PURE__ */ new Set(),
    disabled: /* @__PURE__ */ new Set(),
    unMount: /* @__PURE__ */ new Set(),
    array: /* @__PURE__ */ new Set(),
    watch: /* @__PURE__ */ new Set()
  }, c, u = 0;
  const f = {
    isDirty: !1,
    dirtyFields: !1,
    validatingFields: !1,
    touchedFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  };
  let d = {
    ...f
  };
  const h = {
    array: Am(),
    state: Am()
  }, g = Po(t.mode), y = Po(t.reValidateMode), m = t.criteriaMode === Cn.all, b = (P) => (W) => {
    clearTimeout(u), u = setTimeout(P, W);
  }, v = async (P) => {
    if (!t.disabled && (f.isValid || d.isValid || P)) {
      const W = t.resolver ? qt((await N()).errors) : await O(r, !0);
      W !== n.isValid && h.state.next({
        isValid: W
      });
    }
  }, E = (P, W) => {
    !t.disabled && (f.isValidating || f.validatingFields || d.isValidating || d.validatingFields) && ((P || Array.from(l.mount)).forEach((H) => {
      H && (W ? Ue(n.validatingFields, H, W) : kt(n.validatingFields, H));
    }), h.state.next({
      validatingFields: n.validatingFields,
      isValidating: !qt(n.validatingFields)
    }));
  }, S = (P, W = [], H, le, se = !0, ie = !0) => {
    if (le && H && !t.disabled) {
      if (a.action = !0, ie && Array.isArray(fe(r, P))) {
        const ue = H(fe(r, P), le.argA, le.argB);
        se && Ue(r, P, ue);
      }
      if (ie && Array.isArray(fe(n.errors, P))) {
        const ue = H(fe(n.errors, P), le.argA, le.argB);
        se && Ue(n.errors, P, ue), LN(n.errors, P);
      }
      if ((f.touchedFields || d.touchedFields) && ie && Array.isArray(fe(n.touchedFields, P))) {
        const ue = H(fe(n.touchedFields, P), le.argA, le.argB);
        se && Ue(n.touchedFields, P, ue);
      }
      (f.dirtyFields || d.dirtyFields) && (n.dirtyFields = gi(o, s)), h.state.next({
        name: P,
        isDirty: A(P, W),
        dirtyFields: n.dirtyFields,
        errors: n.errors,
        isValid: n.isValid
      });
    } else
      Ue(s, P, W);
  }, w = (P, W) => {
    Ue(n.errors, P, W), h.state.next({
      errors: n.errors
    });
  }, x = (P) => {
    n.errors = P, h.state.next({
      errors: n.errors,
      isValid: !1
    });
  }, T = (P, W, H, le) => {
    const se = fe(r, P);
    if (se) {
      const ie = fe(s, P, ct(H) ? fe(o, P) : H);
      ct(ie) || le && le.defaultChecked || W ? Ue(s, P, W ? ie : Bm(se._f)) : _(P, ie), a.mount && v();
    }
  }, R = (P, W, H, le, se) => {
    let ie = !1, ue = !1;
    const be = {
      name: P
    };
    if (!t.disabled) {
      if (!H || le) {
        (f.isDirty || d.isDirty) && (ue = n.isDirty, n.isDirty = be.isDirty = A(), ie = ue !== be.isDirty);
        const xe = Ar(fe(o, P), W);
        ue = !!fe(n.dirtyFields, P), xe ? kt(n.dirtyFields, P) : Ue(n.dirtyFields, P, !0), be.dirtyFields = n.dirtyFields, ie = ie || (f.dirtyFields || d.dirtyFields) && ue !== !xe;
      }
      if (H) {
        const xe = fe(n.touchedFields, P);
        xe || (Ue(n.touchedFields, P, H), be.touchedFields = n.touchedFields, ie = ie || (f.touchedFields || d.touchedFields) && xe !== H);
      }
      ie && se && h.state.next(be);
    }
    return ie ? be : {};
  }, I = (P, W, H, le) => {
    const se = fe(n.errors, P), ie = (f.isValid || d.isValid) && un(W) && n.isValid !== W;
    if (t.delayError && H ? (c = b(() => w(P, H)), c(t.delayError)) : (clearTimeout(u), c = null, H ? Ue(n.errors, P, H) : kt(n.errors, P)), (H ? !Ar(se, H) : se) || !qt(le) || ie) {
      const ue = {
        ...le,
        ...ie && un(W) ? { isValid: W } : {},
        errors: n.errors,
        name: P
      };
      n = {
        ...n,
        ...ue
      }, h.state.next(ue);
    }
  }, N = async (P) => {
    E(P, !0);
    const W = await t.resolver(s, t.context, MN(P || l.mount, r, t.criteriaMode, t.shouldUseNativeValidation));
    return E(P), W;
  }, p = async (P) => {
    const { errors: W } = await N(P);
    if (P)
      for (const H of P) {
        const le = fe(W, H);
        le ? Ue(n.errors, H, le) : kt(n.errors, H);
      }
    else
      n.errors = W;
    return W;
  }, O = async (P, W, H = {
    valid: !0
  }) => {
    for (const le in P) {
      const se = P[le];
      if (se) {
        const { _f: ie, ...ue } = se;
        if (ie) {
          const be = l.array.has(ie.name), xe = se._f && _N(se._f);
          xe && f.validatingFields && E([le], !0);
          const oe = await hu(se, l.disabled, s, m, t.shouldUseNativeValidation && !W, be);
          if (xe && f.validatingFields && E([le]), oe[ie.name] && (H.valid = !1, W))
            break;
          !W && (fe(oe, ie.name) ? be ? lv(n.errors, oe, ie.name) : Ue(n.errors, ie.name, oe[ie.name]) : kt(n.errors, ie.name));
        }
        !qt(ue) && await O(ue, W, H);
      }
    }
    return H.valid;
  }, $ = () => {
    for (const P of l.unMount) {
      const W = fe(r, P);
      W && (W._f.refs ? W._f.refs.every((H) => !vc(H)) : !vc(W._f.ref)) && Q(P);
    }
    l.unMount = /* @__PURE__ */ new Set();
  }, A = (P, W) => !t.disabled && (P && W && Ue(s, P, W), !Ar(K(), o)), D = (P, W, H) => ev(P, l, {
    ...a.mount ? s : ct(W) ? o : Zn(P) ? { [P]: W } : W
  }, H, W), M = (P) => Ts(fe(a.mount ? s : o, P, t.shouldUnregister ? fe(o, P, []) : [])), _ = (P, W, H = {}) => {
    const le = fe(r, P);
    let se = W;
    if (le) {
      const ie = le._f;
      ie && (!ie.disabled && Ue(s, P, sv(W, ie)), se = Fa(ie.ref) && Zt(W) ? "" : W, nv(ie.ref) ? [...ie.ref.options].forEach((ue) => ue.selected = se.includes(ue.value)) : ie.refs ? Ss(ie.ref) ? ie.refs.length > 1 ? ie.refs.forEach((ue) => (!ue.defaultChecked || !ue.disabled) && (ue.checked = Array.isArray(se) ? !!se.find((be) => be === ue.value) : se === ue.value)) : ie.refs[0] && (ie.refs[0].checked = !!se) : ie.refs.forEach((ue) => ue.checked = ue.value === se) : zd(ie.ref) ? ie.ref.value = "" : (ie.ref.value = se, ie.ref.type || h.state.next({
        name: P,
        values: ht(s)
      })));
    }
    (H.shouldDirty || H.shouldTouch) && R(P, se, H.shouldTouch, H.shouldDirty, !0), H.shouldValidate && V(P);
  }, L = (P, W, H) => {
    for (const le in W) {
      const se = W[le], ie = `${P}.${le}`, ue = fe(r, ie);
      (l.array.has(P) || St(se) || ue && !ue._f) && !no(se) ? L(ie, se, H) : _(ie, se, H);
    }
  }, U = (P, W, H = {}) => {
    const le = fe(r, P), se = l.array.has(P), ie = ht(W);
    Ue(s, P, ie), se ? (h.array.next({
      name: P,
      values: ht(s)
    }), (f.isDirty || f.dirtyFields || d.isDirty || d.dirtyFields) && H.shouldDirty && h.state.next({
      name: P,
      dirtyFields: gi(o, s),
      isDirty: A(P, ie)
    })) : le && !le._f && !Zt(ie) ? L(P, ie, H) : _(P, ie, H), mu(P, l) && h.state.next({ ...n }), h.state.next({
      name: a.mount ? P : void 0,
      values: ht(s)
    });
  }, z = async (P) => {
    a.mount = !0;
    const W = P.target;
    let H = W.name, le = !0;
    const se = fe(r, H), ie = (ue) => {
      le = Number.isNaN(ue) || no(ue) && isNaN(ue.getTime()) || Ar(ue, fe(s, H, ue));
    };
    if (se) {
      let ue, be;
      const xe = W.type ? Bm(se._f) : Kb(P), oe = P.type === Ba.BLUR || P.type === Ba.FOCUS_OUT, Le = !DN(se._f) && !t.resolver && !fe(n.errors, H) && !se._f.deps || jN(oe, fe(n.touchedFields, H), n.isSubmitted, y, g), Ve = mu(H, l, oe);
      Ue(s, H, xe), oe ? (se._f.onBlur && se._f.onBlur(P), c && c(0)) : se._f.onChange && se._f.onChange(P);
      const We = R(H, xe, oe), _n = !qt(We) || Ve;
      if (!oe && h.state.next({
        name: H,
        type: P.type,
        values: ht(s)
      }), Le)
        return (f.isValid || d.isValid) && (t.mode === "onBlur" ? oe && v() : oe || v()), _n && h.state.next({ name: H, ...Ve ? {} : We });
      if (!oe && Ve && h.state.next({ ...n }), t.resolver) {
        const { errors: ye } = await N([H]);
        if (ie(xe), le) {
          const Fe = jm(n.errors, r, H), Je = jm(ye, r, Fe.name || H);
          ue = Je.error, H = Je.name, be = qt(ye);
        }
      } else
        E([H], !0), ue = (await hu(se, l.disabled, s, m, t.shouldUseNativeValidation))[H], E([H]), ie(xe), le && (ue ? be = !1 : (f.isValid || d.isValid) && (be = await O(r, !0)));
      le && (se._f.deps && V(se._f.deps), I(H, be, ue, We));
    }
  }, j = (P, W) => {
    if (fe(n.errors, W) && P.focus)
      return P.focus(), 1;
  }, V = async (P, W = {}) => {
    let H, le;
    const se = rn(P);
    if (t.resolver) {
      const ie = await p(ct(P) ? P : se);
      H = qt(ie), le = P ? !se.some((ue) => fe(ie, ue)) : H;
    } else P ? (le = (await Promise.all(se.map(async (ie) => {
      const ue = fe(r, ie);
      return await O(ue && ue._f ? { [ie]: ue } : ue);
    }))).every(Boolean), !(!le && !n.isValid) && v()) : le = H = await O(r);
    return h.state.next({
      ...!Zn(P) || (f.isValid || d.isValid) && H !== n.isValid ? {} : { name: P },
      ...t.resolver || !P ? { isValid: H } : {},
      errors: n.errors
    }), W.shouldFocus && !le && Do(r, j, P ? se : l.mount), le;
  }, K = (P) => {
    const W = {
      ...a.mount ? s : o
    };
    return ct(P) ? W : Zn(P) ? fe(W, P) : P.map((H) => fe(W, H));
  }, Y = (P, W) => ({
    invalid: !!fe((W || n).errors, P),
    isDirty: !!fe((W || n).dirtyFields, P),
    error: fe((W || n).errors, P),
    isValidating: !!fe(n.validatingFields, P),
    isTouched: !!fe((W || n).touchedFields, P)
  }), te = (P) => {
    P && rn(P).forEach((W) => kt(n.errors, W)), h.state.next({
      errors: P ? n.errors : {}
    });
  }, X = (P, W, H) => {
    const le = (fe(r, P, { _f: {} })._f || {}).ref, se = fe(n.errors, P) || {}, { ref: ie, message: ue, type: be, ...xe } = se;
    Ue(n.errors, P, {
      ...xe,
      ...W,
      ref: le
    }), h.state.next({
      name: P,
      errors: n.errors,
      isValid: !1
    }), H && H.shouldFocus && le && le.focus && le.focus();
  }, ee = (P, W) => Fn(P) ? h.state.subscribe({
    next: (H) => P(D(void 0, W), H)
  }) : D(P, W, !0), re = (P) => h.state.subscribe({
    next: (W) => {
      FN(P.name, W.name, P.exact) && BN(W, P.formState || f, we, P.reRenderRoot) && P.callback({
        values: { ...s },
        ...n,
        ...W
      });
    }
  }).unsubscribe, q = (P) => (a.mount = !0, d = {
    ...d,
    ...P.formState
  }, re({
    ...P,
    formState: d
  })), Q = (P, W = {}) => {
    for (const H of P ? rn(P) : l.mount)
      l.mount.delete(H), l.array.delete(H), W.keepValue || (kt(r, H), kt(s, H)), !W.keepError && kt(n.errors, H), !W.keepDirty && kt(n.dirtyFields, H), !W.keepTouched && kt(n.touchedFields, H), !W.keepIsValidating && kt(n.validatingFields, H), !t.shouldUnregister && !W.keepDefaultValue && kt(o, H);
    h.state.next({
      values: ht(s)
    }), h.state.next({
      ...n,
      ...W.keepDirty ? { isDirty: A() } : {}
    }), !W.keepIsValid && v();
  }, G = ({ disabled: P, name: W }) => {
    (un(P) && a.mount || P || l.disabled.has(W)) && (P ? l.disabled.add(W) : l.disabled.delete(W));
  }, ne = (P, W = {}) => {
    let H = fe(r, P);
    const le = un(W.disabled) || un(t.disabled);
    return Ue(r, P, {
      ...H || {},
      _f: {
        ...H && H._f ? H._f : { ref: { name: P } },
        name: P,
        mount: !0,
        ...W
      }
    }), l.mount.add(P), H ? G({
      disabled: un(W.disabled) ? W.disabled : t.disabled,
      name: P
    }) : T(P, !0, W.value), {
      ...le ? { disabled: W.disabled || t.disabled } : {},
      ...t.progressive ? {
        required: !!W.required,
        min: yi(W.min),
        max: yi(W.max),
        minLength: yi(W.minLength),
        maxLength: yi(W.maxLength),
        pattern: yi(W.pattern)
      } : {},
      name: P,
      onChange: z,
      onBlur: z,
      ref: (se) => {
        if (se) {
          ne(P, W), H = fe(r, P);
          const ie = ct(se.value) && se.querySelectorAll && se.querySelectorAll("input,select,textarea")[0] || se, ue = PN(ie), be = H._f.refs || [];
          if (ue ? be.find((xe) => xe === ie) : ie === H._f.ref)
            return;
          Ue(r, P, {
            _f: {
              ...H._f,
              ...ue ? {
                refs: [
                  ...be.filter(vc),
                  ie,
                  ...Array.isArray(fe(o, P)) ? [{}] : []
                ],
                ref: { type: ie.type, name: P }
              } : { ref: ie }
            }
          }), T(P, !1, void 0, ie);
        } else
          H = fe(r, P, {}), H._f && (H._f.mount = !1), (t.shouldUnregister || W.shouldUnregister) && !(Xb(l.array, P) && a.action) && l.unMount.add(P);
      }
    };
  }, B = () => t.shouldFocusError && Do(r, j, l.mount), pe = (P) => {
    un(P) && (h.state.next({ disabled: P }), Do(r, (W, H) => {
      const le = fe(r, H);
      le && (W.disabled = le._f.disabled || P, Array.isArray(le._f.refs) && le._f.refs.forEach((se) => {
        se.disabled = le._f.disabled || P;
      }));
    }, 0, !1));
  }, ae = (P, W) => async (H) => {
    let le;
    H && (H.preventDefault && H.preventDefault(), H.persist && H.persist());
    let se = ht(s);
    if (h.state.next({
      isSubmitting: !0
    }), t.resolver) {
      const { errors: ie, values: ue } = await N();
      n.errors = ie, se = ue;
    } else
      await O(r);
    if (l.disabled.size)
      for (const ie of l.disabled)
        Ue(se, ie, void 0);
    if (kt(n.errors, "root"), qt(n.errors)) {
      h.state.next({
        errors: {}
      });
      try {
        await P(se, H);
      } catch (ie) {
        le = ie;
      }
    } else
      W && await W({ ...n.errors }, H), B(), setTimeout(B);
    if (h.state.next({
      isSubmitted: !0,
      isSubmitting: !1,
      isSubmitSuccessful: qt(n.errors) && !le,
      submitCount: n.submitCount + 1,
      errors: n.errors
    }), le)
      throw le;
  }, me = (P, W = {}) => {
    fe(r, P) && (ct(W.defaultValue) ? U(P, ht(fe(o, P))) : (U(P, W.defaultValue), Ue(o, P, ht(W.defaultValue))), W.keepTouched || kt(n.touchedFields, P), W.keepDirty || (kt(n.dirtyFields, P), n.isDirty = W.defaultValue ? A(P, ht(fe(o, P))) : A()), W.keepError || (kt(n.errors, P), f.isValid && v()), h.state.next({ ...n }));
  }, Me = (P, W = {}) => {
    const H = P ? ht(P) : o, le = ht(H), se = qt(P), ie = se ? o : le;
    if (W.keepDefaultValues || (o = H), !W.keepValues) {
      if (W.keepDirtyValues) {
        const ue = /* @__PURE__ */ new Set([
          ...l.mount,
          ...Object.keys(gi(o, s))
        ]);
        for (const be of Array.from(ue))
          fe(n.dirtyFields, be) ? Ue(ie, be, fe(s, be)) : U(be, fe(ie, be));
      } else {
        if (Ld && ct(P))
          for (const ue of l.mount) {
            const be = fe(r, ue);
            if (be && be._f) {
              const xe = Array.isArray(be._f.refs) ? be._f.refs[0] : be._f.ref;
              if (Fa(xe)) {
                const oe = xe.closest("form");
                if (oe) {
                  oe.reset();
                  break;
                }
              }
            }
          }
        for (const ue of l.mount)
          U(ue, fe(ie, ue));
      }
      s = ht(ie), h.array.next({
        values: { ...ie }
      }), h.state.next({
        values: { ...ie }
      });
    }
    l = {
      mount: W.keepDirtyValues ? l.mount : /* @__PURE__ */ new Set(),
      unMount: /* @__PURE__ */ new Set(),
      array: /* @__PURE__ */ new Set(),
      disabled: /* @__PURE__ */ new Set(),
      watch: /* @__PURE__ */ new Set(),
      watchAll: !1,
      focus: ""
    }, a.mount = !f.isValid || !!W.keepIsValid || !!W.keepDirtyValues, a.watch = !!t.shouldUnregister, h.state.next({
      submitCount: W.keepSubmitCount ? n.submitCount : 0,
      isDirty: se ? !1 : W.keepDirty ? n.isDirty : !!(W.keepDefaultValues && !Ar(P, o)),
      isSubmitted: W.keepIsSubmitted ? n.isSubmitted : !1,
      dirtyFields: se ? {} : W.keepDirtyValues ? W.keepDefaultValues && s ? gi(o, s) : n.dirtyFields : W.keepDefaultValues && P ? gi(o, P) : W.keepDirty ? n.dirtyFields : {},
      touchedFields: W.keepTouched ? n.touchedFields : {},
      errors: W.keepErrors ? n.errors : {},
      isSubmitSuccessful: W.keepIsSubmitSuccessful ? n.isSubmitSuccessful : !1,
      isSubmitting: !1
    });
  }, Re = (P, W) => Me(Fn(P) ? P(s) : P, W), Oe = (P, W = {}) => {
    const H = fe(r, P), le = H && H._f;
    if (le) {
      const se = le.refs ? le.refs[0] : le.ref;
      se.focus && (se.focus(), W.shouldSelect && Fn(se.select) && se.select());
    }
  }, we = (P) => {
    n = {
      ...n,
      ...P
    };
  }, Se = {
    control: {
      register: ne,
      unregister: Q,
      getFieldState: Y,
      handleSubmit: ae,
      setError: X,
      _subscribe: re,
      _runSchema: N,
      _getWatch: D,
      _getDirty: A,
      _setValid: v,
      _setFieldArray: S,
      _setDisabledField: G,
      _setErrors: x,
      _getFieldArray: M,
      _reset: Me,
      _resetDefaultValues: () => Fn(t.defaultValues) && t.defaultValues().then((P) => {
        Re(P, t.resetOptions), h.state.next({
          isLoading: !1
        });
      }),
      _removeUnmounted: $,
      _disableForm: pe,
      _subjects: h,
      _proxyFormState: f,
      get _fields() {
        return r;
      },
      get _formValues() {
        return s;
      },
      get _state() {
        return a;
      },
      set _state(P) {
        a = P;
      },
      get _defaultValues() {
        return o;
      },
      get _names() {
        return l;
      },
      set _names(P) {
        l = P;
      },
      get _formState() {
        return n;
      },
      get _options() {
        return t;
      },
      set _options(P) {
        t = {
          ...t,
          ...P
        };
      }
    },
    subscribe: q,
    trigger: V,
    register: ne,
    handleSubmit: ae,
    watch: ee,
    setValue: U,
    getValues: K,
    reset: Re,
    resetField: me,
    clearErrors: te,
    unregister: Q,
    setError: X,
    setFocus: Oe,
    getFieldState: Y
  };
  return {
    ...Se,
    formControl: Se
  };
}
var Ir = () => {
  const e = typeof performance > "u" ? Date.now() : performance.now() * 1e3;
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (t) => {
    const n = (Math.random() * 16 + e) % 16 | 0;
    return (t == "x" ? n : n & 3 | 8).toString(16);
  });
}, xc = (e, t, n = {}) => n.shouldFocus || ct(n.shouldFocus) ? n.focusName || `${e}.${ct(n.focusIndex) ? t : n.focusIndex}.` : "", wc = (e, t) => [
  ...e,
  ...rn(t)
], Sc = (e) => Array.isArray(e) ? e.map(() => {
}) : void 0;
function Tc(e, t, n) {
  return [
    ...e.slice(0, t),
    ...rn(n),
    ...e.slice(t)
  ];
}
var Ec = (e, t, n) => Array.isArray(e) ? (ct(e[n]) && (e[n] = void 0), e.splice(n, 0, e.splice(t, 1)[0]), e) : [], Cc = (e, t) => [
  ...rn(t),
  ...rn(e)
];
function WN(e, t) {
  let n = 0;
  const r = [...e];
  for (const o of t)
    r.splice(o - n, 1), n++;
  return Ts(r).length ? r : [];
}
var Oc = (e, t) => ct(t) ? [] : WN(e, rn(t).sort((n, r) => n - r)), Rc = (e, t, n) => {
  [e[t], e[n]] = [e[n], e[t]];
}, Vm = (e, t, n) => (e[t] = n, e);
function aM(e) {
  const t = zn(), { control: n = t.control, name: r, keyName: o = "id", shouldUnregister: s, rules: a } = e, [l, c] = F.useState(n._getFieldArray(r)), u = F.useRef(n._getFieldArray(r).map(Ir)), f = F.useRef(l), d = F.useRef(r), h = F.useRef(!1);
  d.current = r, f.current = l, n._names.array.add(r), a && n.register(r, a), F.useEffect(() => n._subjects.array.subscribe({
    next: ({ values: T, name: R }) => {
      if (R === d.current || !R) {
        const I = fe(T, d.current);
        Array.isArray(I) && (c(I), u.current = I.map(Ir));
      }
    }
  }).unsubscribe, [n]);
  const g = F.useCallback((T) => {
    h.current = !0, n._setFieldArray(r, T);
  }, [n, r]), y = (T, R) => {
    const I = rn(ht(T)), N = wc(n._getFieldArray(r), I);
    n._names.focus = xc(r, N.length - 1, R), u.current = wc(u.current, I.map(Ir)), g(N), c(N), n._setFieldArray(r, N, wc, {
      argA: Sc(T)
    });
  }, m = (T, R) => {
    const I = rn(ht(T)), N = Cc(n._getFieldArray(r), I);
    n._names.focus = xc(r, 0, R), u.current = Cc(u.current, I.map(Ir)), g(N), c(N), n._setFieldArray(r, N, Cc, {
      argA: Sc(T)
    });
  }, b = (T) => {
    const R = Oc(n._getFieldArray(r), T);
    u.current = Oc(u.current, T), g(R), c(R), !Array.isArray(fe(n._fields, r)) && Ue(n._fields, r, void 0), n._setFieldArray(r, R, Oc, {
      argA: T
    });
  }, v = (T, R, I) => {
    const N = rn(ht(R)), p = Tc(n._getFieldArray(r), T, N);
    n._names.focus = xc(r, T, I), u.current = Tc(u.current, T, N.map(Ir)), g(p), c(p), n._setFieldArray(r, p, Tc, {
      argA: T,
      argB: Sc(R)
    });
  }, E = (T, R) => {
    const I = n._getFieldArray(r);
    Rc(I, T, R), Rc(u.current, T, R), g(I), c(I), n._setFieldArray(r, I, Rc, {
      argA: T,
      argB: R
    }, !1);
  }, S = (T, R) => {
    const I = n._getFieldArray(r);
    Ec(I, T, R), Ec(u.current, T, R), g(I), c(I), n._setFieldArray(r, I, Ec, {
      argA: T,
      argB: R
    }, !1);
  }, w = (T, R) => {
    const I = ht(R), N = Vm(n._getFieldArray(r), T, I);
    u.current = [...N].map((p, O) => !p || O === T ? Ir() : u.current[O]), g(N), c([...N]), n._setFieldArray(r, N, Vm, {
      argA: T,
      argB: I
    }, !0, !1);
  }, x = (T) => {
    const R = rn(ht(T));
    u.current = R.map(Ir), g([...R]), c([...R]), n._setFieldArray(r, [...R], (I) => I, {}, !0, !1);
  };
  return F.useEffect(() => {
    if (n._state.action = !1, mu(r, n._names) && n._subjects.state.next({
      ...n._formState
    }), h.current && (!Po(n._options.mode).isOnSubmit || n._formState.isSubmitted) && !Po(n._options.reValidateMode).isOnSubmit)
      if (n._options.resolver)
        n._runSchema([r]).then((T) => {
          const R = fe(T.errors, r), I = fe(n._formState.errors, r);
          (I ? !R && I.type || R && (I.type !== R.type || I.message !== R.message) : R && R.type) && (R ? Ue(n._formState.errors, r, R) : kt(n._formState.errors, r), n._subjects.state.next({
            errors: n._formState.errors
          }));
        });
      else {
        const T = fe(n._fields, r);
        T && T._f && !(Po(n._options.reValidateMode).isOnSubmit && Po(n._options.mode).isOnSubmit) && hu(T, n._names.disabled, n._formValues, n._options.criteriaMode === Cn.all, n._options.shouldUseNativeValidation, !0).then((R) => !qt(R) && n._subjects.state.next({
          errors: lv(n._formState.errors, R, r)
        }));
      }
    n._subjects.state.next({
      name: r,
      values: ht(n._formValues)
    }), n._names.focus && Do(n._fields, (T, R) => {
      if (n._names.focus && R.startsWith(n._names.focus) && T.focus)
        return T.focus(), 1;
    }), n._names.focus = "", n._setValid(), h.current = !1;
  }, [l, r, n]), F.useEffect(() => (!fe(n._formValues, r) && n._setFieldArray(r), () => {
    const T = (R, I) => {
      const N = fe(n._fields, R);
      N && N._f && (N._f.mount = I);
    };
    n._options.shouldUnregister || s ? n.unregister(r) : T(r, !1);
  }), [r, n, o, s]), {
    swap: F.useCallback(E, [g, r, n]),
    move: F.useCallback(S, [g, r, n]),
    prepend: F.useCallback(m, [g, r, n]),
    append: F.useCallback(y, [g, r, n]),
    remove: F.useCallback(b, [g, r, n]),
    insert: F.useCallback(v, [g, r, n]),
    update: F.useCallback(w, [g, r, n]),
    replace: F.useCallback(x, [g, r, n]),
    fields: F.useMemo(() => l.map((T, R) => ({
      ...T,
      [o]: u.current[R] || Ir()
    })), [l, o])
  };
}
function lM(e = {}) {
  const t = F.useRef(void 0), n = F.useRef(void 0), [r, o] = F.useState({
    isDirty: !1,
    isValidating: !1,
    isLoading: Fn(e.defaultValues),
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    submitCount: 0,
    dirtyFields: {},
    touchedFields: {},
    validatingFields: {},
    errors: e.errors || {},
    disabled: e.disabled || !1,
    defaultValues: Fn(e.defaultValues) ? void 0 : e.defaultValues
  });
  t.current || (t.current = {
    ...e.formControl ? e.formControl : zN(e),
    formState: r
  }, e.formControl && e.defaultValues && !Fn(e.defaultValues) && e.formControl.reset(e.defaultValues, e.resetOptions));
  const s = t.current.control;
  return s._options = e, F.useLayoutEffect(() => s._subscribe({
    formState: s._proxyFormState,
    callback: () => o({ ...s._formState }),
    reRenderRoot: !0
  }), [s]), F.useEffect(() => s._disableForm(e.disabled), [s, e.disabled]), F.useEffect(() => {
    if (s._proxyFormState.isDirty) {
      const a = s._getDirty();
      a !== r.isDirty && s._subjects.state.next({
        isDirty: a
      });
    }
  }, [s, r.isDirty]), F.useEffect(() => {
    e.values && !Ar(e.values, n.current) ? (s._reset(e.values, s._options.resetOptions), n.current = e.values, o((a) => ({ ...a }))) : s._resetDefaultValues();
  }, [e.values, s]), F.useEffect(() => {
    e.errors && !qt(e.errors) && s._setErrors(e.errors);
  }, [e.errors, s]), F.useEffect(() => {
    s._state.mount || (s._setValid(), s._state.mount = !0), s._state.watch && (s._state.watch = !1, s._subjects.state.next({ ...s._formState })), s._removeUnmounted();
  }), F.useEffect(() => {
    e.shouldUnregister && s._subjects.state.next({
      values: s._getWatch()
    });
  }, [e.shouldUnregister, s]), t.current.formState = Zb(r, s), t.current;
}
const zm = (e, t, n) => {
  if (e && "reportValidity" in e) {
    const r = fe(n, t);
    e.setCustomValidity(r && r.message || ""), e.reportValidity();
  }
}, cv = (e, t) => {
  for (const n in t.fields) {
    const r = t.fields[n];
    r && r.ref && "reportValidity" in r.ref ? zm(r.ref, n, e) : r && r.refs && r.refs.forEach((o) => zm(o, n, e));
  }
}, UN = (e, t) => {
  t.shouldUseNativeValidation && cv(e, t);
  const n = {};
  for (const r in e) {
    const o = fe(t.fields, r), s = Object.assign(e[r] || {}, { ref: o && o.ref });
    if (HN(t.names || Object.keys(e), r)) {
      const a = Object.assign({}, fe(n, r));
      Ue(a, "root", s), Ue(n, r, a);
    } else Ue(n, r, s);
  }
  return n;
}, HN = (e, t) => {
  const n = Wm(t);
  return e.some((r) => Wm(r).match(`^${n}\\.\\d+`));
};
function Wm(e) {
  return e.replace(/\]|\[/g, "");
}
function qN(e, t) {
  for (var n = {}; e.length; ) {
    var r = e[0], o = r.code, s = r.message, a = r.path.join(".");
    if (!n[a]) if ("unionErrors" in r) {
      var l = r.unionErrors[0].errors[0];
      n[a] = { message: l.message, type: l.code };
    } else n[a] = { message: s, type: o };
    if ("unionErrors" in r && r.unionErrors.forEach(function(f) {
      return f.errors.forEach(function(d) {
        return e.push(d);
      });
    }), t) {
      var c = n[a].types, u = c && c[r.code];
      n[a] = tv(a, t, n, o, u ? [].concat(u, r.message) : r.message);
    }
    e.shift();
  }
  return n;
}
function cM(e, t, n) {
  return n === void 0 && (n = {}), function(r, o, s) {
    try {
      return Promise.resolve(function(a, l) {
        try {
          var c = Promise.resolve(e[n.mode === "sync" ? "parse" : "parseAsync"](r, t)).then(function(u) {
            return s.shouldUseNativeValidation && cv({}, s), { errors: {}, values: n.raw ? Object.assign({}, r) : u };
          });
        } catch (u) {
          return l(u);
        }
        return c && c.then ? c.then(void 0, l) : c;
      }(0, function(a) {
        if (function(l) {
          return Array.isArray(l == null ? void 0 : l.errors);
        }(a)) return { values: {}, errors: UN(qN(a.errors, !s.shouldUseNativeValidation && s.criteriaMode === "all"), s) };
        throw a;
      }));
    } catch (a) {
      return Promise.reject(a);
    }
  };
}
function GN({
  children: e,
  formInstance: t,
  onSubmit: n
}) {
  const { handleSubmit: r, trigger: o } = t;
  return _i(() => {
    o();
  }, [o]), t ? /* @__PURE__ */ k(RN, { ...t, children: /* @__PURE__ */ k(Sr, { component: "form", autoComplete: "off", onSubmit: r(n), children: e }) }) : null;
}
const uM = _e(GN), YN = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ k(
    ri,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, value: o, ref: s }, fieldState: { error: a } }) => /* @__PURE__ */ k(
        Fy,
        {
          ...t,
          value: o,
          onChange: r,
          inputRef: s,
          isError: !!a
        }
      )
    }
  );
});
YN.displayName = "CheckboxUncontrolled";
function KN({
  isSubmitting: e,
  submitButtonText: t = "Submit",
  cancelButtonText: n = "Cancel"
}) {
  const r = zn();
  if (!r)
    return null;
  const { formState: o, reset: s } = r, { isValid: a, isSubmitting: l, defaultValues: c } = o;
  return /* @__PURE__ */ Ce(Xt, { row: !0, mt: "32px", children: [
    /* @__PURE__ */ k(
      lr,
      {
        type: "reset",
        text: n,
        isOutlined: !0,
        loading: e || l,
        onClick: () => s(c)
      }
    ),
    /* @__PURE__ */ k(
      lr,
      {
        type: "submit",
        text: t,
        loading: e || l,
        disabled: !a
      }
    )
  ] });
}
KN.displayName = "FormUncontrolledAction";
const XN = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ k(
    ri,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ k(
        Ed,
        {
          ...t,
          value: s,
          onChange: r,
          onBlur: o,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
XN.displayName = "InputUncontrolled";
const QN = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ k(
    ri,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ k(
        Ub,
        {
          ...t,
          value: s,
          onChange: r,
          onBlur: o,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
QN.displayName = "OtpInputUncontrolled";
const JN = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ k(
    ri,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, onBlur: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ k(
        Hb,
        {
          ...t,
          value: s,
          onChange: r,
          onBlur: o,
          inputRef: a,
          isError: !!l,
          errorMessage: (l == null ? void 0 : l.message) || ""
        }
      )
    }
  );
});
JN.displayName = "PasswordUncontrolled";
const ZN = [], eA = _e(
  ({ name: e, options: t = ZN, ...n }) => {
    const { control: r } = zn();
    return /* @__PURE__ */ k(
      ri,
      {
        control: r,
        name: e,
        render: ({ field: { onChange: o, value: s, ref: a }, fieldState: { error: l } }) => /* @__PURE__ */ k(
          qb,
          {
            ...n,
            name: e,
            options: t,
            value: s,
            onChange: (c) => o(c.value),
            inputRef: a,
            isError: !!l
          }
        )
      }
    );
  }
);
eA.displayName = "RadiosUncontrolled";
const tA = _e(({ name: e, ...t }) => {
  const { control: n } = zn();
  return /* @__PURE__ */ k(
    ri,
    {
      control: n,
      name: e,
      render: ({ field: { onChange: r, value: o, ref: s } }) => /* @__PURE__ */ k(Gb, { ...t, value: o, onChange: r, inputRef: s })
    }
  );
});
tA.displayName = "SwitchUncontrolled";
const $o = {
  xs: 1,
  // 1行1个
  sm: 1,
  // 1行1个
  md: 2,
  // 1行2个
  lg: 3,
  // 1行3个
  xl: 4
  // 1行4个
}, nA = [], Um = (e) => {
  let t;
  const n = /* @__PURE__ */ new Set(), r = (u, f) => {
    const d = typeof u == "function" ? u(t) : u;
    if (!Object.is(d, t)) {
      const h = t;
      t = f ?? (typeof d != "object" || d === null) ? d : Object.assign({}, t, d), n.forEach((g) => g(t, h));
    }
  }, o = () => t, l = { setState: r, getState: o, getInitialState: () => c, subscribe: (u) => (n.add(u), () => n.delete(u)) }, c = t = e(r, o, l);
  return l;
}, rA = (e) => e ? Um(e) : Um, oA = (e) => e;
function uv(e, t = oA) {
  const n = F.useSyncExternalStore(
    e.subscribe,
    () => t(e.getState()),
    () => t(e.getInitialState())
  );
  return F.useDebugValue(n), n;
}
const Hm = (e) => {
  const t = rA(e), n = (r) => uv(t, r);
  return Object.assign(n, t), n;
}, Ud = (e) => e ? Hm(e) : Hm, qm = { BASE_URL: "/", DEV: !1, MODE: "production", PROD: !0, SSR: !1 }, gu = /* @__PURE__ */ new Map(), Gs = (e) => {
  const t = gu.get(e);
  return t ? Object.fromEntries(
    Object.entries(t.stores).map(([n, r]) => [n, r.getState()])
  ) : {};
}, iA = (e, t, n) => {
  if (e === void 0)
    return {
      type: "untracked",
      connection: t.connect(n)
    };
  const r = gu.get(n.name);
  if (r)
    return { type: "tracked", store: e, ...r };
  const o = {
    connection: t.connect(n),
    stores: {}
  };
  return gu.set(n.name, o), { type: "tracked", store: e, ...o };
}, sA = (e, t = {}) => (n, r, o) => {
  const { enabled: s, anonymousActionType: a, store: l, ...c } = t;
  let u;
  try {
    u = (s ?? (qm ? "production" : void 0) !== "production") && window.__REDUX_DEVTOOLS_EXTENSION__;
  } catch {
  }
  if (!u)
    return e(n, r, o);
  const { connection: f, ...d } = iA(l, u, c);
  let h = !0;
  o.setState = (m, b, v) => {
    const E = n(m, b);
    if (!h) return E;
    const S = v === void 0 ? { type: a || "anonymous" } : typeof v == "string" ? { type: v } : v;
    return l === void 0 ? (f == null || f.send(S, r()), E) : (f == null || f.send(
      {
        ...S,
        type: `${l}/${S.type}`
      },
      {
        ...Gs(c.name),
        [l]: o.getState()
      }
    ), E);
  };
  const g = (...m) => {
    const b = h;
    h = !1, n(...m), h = b;
  }, y = e(o.setState, r, o);
  if (d.type === "untracked" ? f == null || f.init(y) : (d.stores[d.store] = o, f == null || f.init(
    Object.fromEntries(
      Object.entries(d.stores).map(([m, b]) => [
        m,
        m === d.store ? y : b.getState()
      ])
    )
  )), o.dispatchFromDevtools && typeof o.dispatch == "function") {
    let m = !1;
    const b = o.dispatch;
    o.dispatch = (...v) => {
      (qm ? "production" : void 0) !== "production" && v[0].type === "__setState" && !m && (console.warn(
        '[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'
      ), m = !0), b(...v);
    };
  }
  return f.subscribe((m) => {
    var b;
    switch (m.type) {
      case "ACTION":
        if (typeof m.payload != "string") {
          console.error(
            "[zustand devtools middleware] Unsupported action format"
          );
          return;
        }
        return $c(
          m.payload,
          (v) => {
            if (v.type === "__setState") {
              if (l === void 0) {
                g(v.state);
                return;
              }
              Object.keys(v.state).length !== 1 && console.error(
                `
                    [zustand devtools middleware] Unsupported __setState action format.
                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),
                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }
                    `
              );
              const E = v.state[l];
              if (E == null)
                return;
              JSON.stringify(o.getState()) !== JSON.stringify(E) && g(E);
              return;
            }
            o.dispatchFromDevtools && typeof o.dispatch == "function" && o.dispatch(v);
          }
        );
      case "DISPATCH":
        switch (m.payload.type) {
          case "RESET":
            return g(y), l === void 0 ? f == null ? void 0 : f.init(o.getState()) : f == null ? void 0 : f.init(Gs(c.name));
          case "COMMIT":
            if (l === void 0) {
              f == null || f.init(o.getState());
              return;
            }
            return f == null ? void 0 : f.init(Gs(c.name));
          case "ROLLBACK":
            return $c(m.state, (v) => {
              if (l === void 0) {
                g(v), f == null || f.init(o.getState());
                return;
              }
              g(v[l]), f == null || f.init(Gs(c.name));
            });
          case "JUMP_TO_STATE":
          case "JUMP_TO_ACTION":
            return $c(m.state, (v) => {
              if (l === void 0) {
                g(v);
                return;
              }
              JSON.stringify(o.getState()) !== JSON.stringify(v[l]) && g(v[l]);
            });
          case "IMPORT_STATE": {
            const { nextLiftedState: v } = m.payload, E = (b = v.computedStates.slice(-1)[0]) == null ? void 0 : b.state;
            if (!E) return;
            g(l === void 0 ? E : E[l]), f == null || f.send(
              null,
              // FIXME no-any
              v
            );
            return;
          }
          case "PAUSE_RECORDING":
            return h = !h;
        }
        return;
    }
  }), y;
}, dv = sA, $c = (e, t) => {
  let n;
  try {
    n = JSON.parse(e);
  } catch (r) {
    console.error(
      "[zustand devtools middleware] Could not parse the received json",
      r
    );
  }
  n !== void 0 && t(n);
};
function aA(e, t) {
  let n;
  try {
    n = e();
  } catch {
    return;
  }
  return {
    getItem: (o) => {
      var s;
      const a = (c) => c === null ? null : JSON.parse(c, void 0), l = (s = n.getItem(o)) != null ? s : null;
      return l instanceof Promise ? l.then(a) : a(l);
    },
    setItem: (o, s) => n.setItem(
      o,
      JSON.stringify(s, void 0)
    ),
    removeItem: (o) => n.removeItem(o)
  };
}
const yu = (e) => (t) => {
  try {
    const n = e(t);
    return n instanceof Promise ? n : {
      then(r) {
        return yu(r)(n);
      },
      catch(r) {
        return this;
      }
    };
  } catch (n) {
    return {
      then(r) {
        return this;
      },
      catch(r) {
        return yu(r)(n);
      }
    };
  }
}, lA = (e, t) => (n, r, o) => {
  let s = {
    storage: aA(() => localStorage),
    partialize: (m) => m,
    version: 0,
    merge: (m, b) => ({
      ...b,
      ...m
    }),
    ...t
  }, a = !1;
  const l = /* @__PURE__ */ new Set(), c = /* @__PURE__ */ new Set();
  let u = s.storage;
  if (!u)
    return e(
      (...m) => {
        console.warn(
          `[zustand persist middleware] Unable to update item '${s.name}', the given storage is currently unavailable.`
        ), n(...m);
      },
      r,
      o
    );
  const f = () => {
    const m = s.partialize({ ...r() });
    return u.setItem(s.name, {
      state: m,
      version: s.version
    });
  }, d = o.setState;
  o.setState = (m, b) => {
    d(m, b), f();
  };
  const h = e(
    (...m) => {
      n(...m), f();
    },
    r,
    o
  );
  o.getInitialState = () => h;
  let g;
  const y = () => {
    var m, b;
    if (!u) return;
    a = !1, l.forEach((E) => {
      var S;
      return E((S = r()) != null ? S : h);
    });
    const v = ((b = s.onRehydrateStorage) == null ? void 0 : b.call(s, (m = r()) != null ? m : h)) || void 0;
    return yu(u.getItem.bind(u))(s.name).then((E) => {
      if (E)
        if (typeof E.version == "number" && E.version !== s.version) {
          if (s.migrate) {
            const S = s.migrate(
              E.state,
              E.version
            );
            return S instanceof Promise ? S.then((w) => [!0, w]) : [!0, S];
          }
          console.error(
            "State loaded from storage couldn't be migrated since no migrate function was provided"
          );
        } else
          return [!1, E.state];
      return [!1, void 0];
    }).then((E) => {
      var S;
      const [w, x] = E;
      if (g = s.merge(
        x,
        (S = r()) != null ? S : h
      ), n(g, !0), w)
        return f();
    }).then(() => {
      v == null || v(g, void 0), g = r(), a = !0, c.forEach((E) => E(g));
    }).catch((E) => {
      v == null || v(void 0, E);
    });
  };
  return o.persist = {
    setOptions: (m) => {
      s = {
        ...s,
        ...m
      }, m.storage && (u = m.storage);
    },
    clearStorage: () => {
      u == null || u.removeItem(s.name);
    },
    getOptions: () => s,
    rehydrate: () => y(),
    hasHydrated: () => a,
    onHydrate: (m) => (l.add(m), () => {
      l.delete(m);
    }),
    onFinishHydration: (m) => (c.add(m), () => {
      c.delete(m);
    })
  }, s.skipHydration || y(), g || h;
}, fv = lA;
function Gm() {
  return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
const cA = Ud()(
  dv(
    fv(
      (e) => ({
        themeMode: Gm(),
        setThemeMode: (t) => e({ themeMode: t }),
        toggleThemeMode: () => e((t) => ({ themeMode: t.themeMode === "dark" ? "light" : "dark" })),
        resetThemeMode: () => e({ themeMode: Gm() })
      }),
      {
        name: "VENOMOUS_UI__THEME_MODE"
      }
    )
  )
);
function Hd() {
  const e = uv(cA);
  return {
    ...e,
    isDarkMode: e.themeMode === "dark"
  };
}
var pv = /* @__PURE__ */ ((e) => (e.Skyblue = "Skyblue", e.Teal = "Teal", e))(pv || {});
const mv = {
  Skyblue: "#0097a7",
  Teal: "#009688"
};
function Va(e) {
  const t = mv[e];
  return {
    main: t,
    light: as(t, 0.5),
    dark: ss(t, 0.5),
    opacity: Vt(t, 0.5),
    contrastText: "#fff"
  };
}
const uA = Ud()(
  dv(
    fv(
      (e) => ({
        themePaletteName: "Skyblue",
        themePalette: Va(
          "Skyblue"
          /* Skyblue */
        ),
        setThemePaletteName: (t) => e({ themePaletteName: t, themePalette: Va(t) })
      }),
      {
        name: "VENOMOUS_UI__THEME_PALETTE"
      }
    )
  )
);
function hv() {
  return {
    ...uA(),
    allPaletteNames: Object.keys(pv),
    allPaletteMainColors: mv
  };
}
function dA() {
  const { breakpoints: e } = Rr(), t = li(e.down("sm")), n = li(e.between("sm", "md")), r = li(e.between("md", "lg")), o = li(e.between("lg", "xl")), s = li(e.up("xl")), a = or(() => {
    var l;
    return ((l = [
      ["xs", t],
      ["sm", n],
      ["md", r],
      ["lg", o],
      ["xl", s]
    ].find(([, c]) => c)) == null ? void 0 : l[0].toString()) || "xs";
  }, [t, n, r, o, s]);
  return {
    isXs: t,
    isSm: n,
    isMd: r,
    isLg: o,
    isXl: s,
    breakpoints: {
      current: a,
      unit: "px",
      values: {
        xs: 0,
        sm: 600,
        md: 900,
        lg: 1200,
        xl: 1536
      }
    }
  };
}
function dM() {
  return (e) => e;
}
function fA({
  gridStyle: e,
  cols: t
}) {
  const { isXs: n, isSm: r, isMd: o, isLg: s } = dA(), a = or(() => {
    let c;
    return n ? c = (t == null ? void 0 : t.xs) ?? $o.xs : r ? c = (t == null ? void 0 : t.sm) ?? $o.sm : o ? c = (t == null ? void 0 : t.md) ?? $o.md : s ? c = (t == null ? void 0 : t.lg) ?? $o.lg : c = (t == null ? void 0 : t.xl) ?? $o.xl, `${100 / c}%`;
  }, [n, r, o, s, t]);
  return {
    gridComponents: or(
      () => ({
        List: ({ ref: c, style: u, children: f, ...d }) => /* @__PURE__ */ k(
          "div",
          {
            ref: c,
            ...d,
            style: { display: "flex", flexWrap: "wrap", ...u, ...e },
            children: f
          }
        ),
        Item: ({ children: c, ...u }) => /* @__PURE__ */ k(
          "div",
          {
            ...u,
            style: {
              width: a,
              display: "flex",
              boxSizing: "border-box",
              flex: "none",
              alignContent: "stretch"
            },
            children: c
          }
        )
      }),
      [a, e]
    )
  };
}
const pA = ({
  height: e,
  width: t,
  items: n = nA,
  renderGridItem: r,
  gridStyle: o,
  cols: s = $o
}) => {
  const { gridComponents: a } = fA({ gridStyle: o, cols: s });
  return /* @__PURE__ */ k(
    Xt,
    {
      id: "VenomousUI-Grid",
      sx: {
        height: e || "100%",
        width: t || "100%",
        "& > *": {
          flex: "unset",
          width: "100%"
        }
      },
      children: /* @__PURE__ */ k(
        HR,
        {
          style: { height: "100%" },
          totalCount: n.length,
          components: a,
          itemContent: (l) => r(n[l], l)
        }
      )
    }
  );
}, mA = _e(pA), gv = _e(
  ({ isOpen: e, closeModal: t, isPrevented: n = !0, children: r, sx: o, ...s }) => {
    const { paperCommonStyles: a } = fs();
    return /* @__PURE__ */ k(
      Ng,
      {
        id: "VenomousUI-Modal",
        open: e,
        onClose: n ? void 0 : t,
        scroll: "paper",
        keepMounted: !0,
        sx: { ...o },
        slotProps: {
          paper: {
            sx: {
              ...a
            }
          }
        },
        ...s,
        children: r
      }
    );
  }
);
gv.displayName = "Modal";
function fM() {
  const [e, t] = _r(!1), n = $n(() => t(!0), []), r = $n(() => t(!1), []);
  return {
    isOpen: e,
    openModal: n,
    closeModal: r
  };
}
const hA = _e(
  ({
    onSubmit: e,
    onClose: t,
    isSubmitting: n = !1,
    title: r = "",
    contentMessage: o = "",
    cancelButtonText: s = "Cancel",
    confirmButtonText: a = "Confirm",
    confirmButtonIsDisabled: l = !1,
    cancelButtonIsDisabled: c = !1,
    ...u
  }) => {
    const f = Tv(u.isOpen);
    return _i(() => {
      f.current && !u.isOpen && (t == null || t()), f.current = u.isOpen;
    }, [u.isOpen, t]), /* @__PURE__ */ Ce(gv, { isPrevented: !0, ...u, children: [
      /* @__PURE__ */ k(cn, { isTitle: !0, text: r, p: "8px" }),
      /* @__PURE__ */ k(cn, { text: o, p: "8px", pb: "24px" }),
      /* @__PURE__ */ Ce(Xt, { row: !0, justifyContent: "flex-end", children: [
        /* @__PURE__ */ k(
          lr,
          {
            text: s,
            onClick: u.closeModal,
            disabled: c || n,
            isOutlined: !0
          }
        ),
        /* @__PURE__ */ k(
          lr,
          {
            text: a,
            onClick: () => {
              (async () => (await (e == null ? void 0 : e()), u.closeModal()))();
            },
            disabled: l,
            loading: n,
            autoFocus: !0
          }
        )
      ] })
    ] });
  }
);
hA.displayName = "ConfirmModal";
const gA = Ud((e) => ({
  activeId: null,
  setActiveId: (t) => e({ activeId: t })
}));
function yA(e) {
  const { activeId: t, setActiveId: n } = gA(), [r, o] = _r(null), s = !!r && (!e || t === e), a = $n(
    (c) => {
      const u = c.currentTarget;
      e ? (n(e), o(u)) : o(r ? null : u);
    },
    [e, n]
  ), l = $n(() => {
    var c;
    (c = window.getSelection()) != null && c.toString() || (e && n(null), o(null));
  }, [e, n]);
  return {
    anchorEl: r,
    isOpen: s,
    openPopper: a,
    closePopper: l
  };
}
const yv = _e(
  ({ id: e, children: t, renderPopperHandler: n, position: r = "bottom", sx: o, contentSx: s }) => {
    const { anchorEl: a, isOpen: l, openPopper: c, closePopper: u } = yA(e);
    return /* @__PURE__ */ k(xa, { onClickAway: u, children: /* @__PURE__ */ Ce(Sr, { sx: { position: "relative", ...o }, role: "presentation", id: "#VenomousUI-Popper", children: [
      n({ anchorEl: a, isOpen: l, openPopper: c, closePopper: u }),
      /* @__PURE__ */ k(sl, { open: l, anchorEl: a, placement: r, transition: !0, keepMounted: !0, children: ({ TransitionProps: f }) => /* @__PURE__ */ k(Uo, { ...f, children: /* @__PURE__ */ k(Gi, { isOutlined: !0, sx: { width: "100%", ...s }, children: t }) }) })
    ] }) });
  }
);
yv.displayName = "Popper";
function bA() {
  const { themeMode: e } = Hd(), { themePalette: t } = hv(), n = or(() => rl({
    palette: {
      mode: e,
      primary: {
        main: t.main,
        dark: t.dark,
        light: t.light,
        contrastText: t.contrastText
      }
    }
  }), [e, t]);
  return vA(t), { theme: n };
}
function vA(e) {
  _i(() => {
    const t = document.createElement("style");
    return t.innerHTML = `
          /* 设置选中文本的样式 */
          ::selection {
            background-color: ${e.opacity};                      /* 设置选中文本的背景色 */
            color: white;                                                   /* 设置选中文本的文字颜色 */
          }
    
          /* 设置滚动条的样式 */
          ::-webkit-scrollbar {
            width: 8px;                                                     /* 设置滚动条的宽度 */
            height: 8px;                                                    /* 设置滚动条的高度 */
          }
          ::-webkit-scrollbar-thumb {
            background-color: ${e.main};                         /* 设置滚动条的颜色 */
            border-radius: 4px;                                             /* 设置滚动条的圆角 */
          }
          ::-webkit-scrollbar-thumb:hover {
            background-color: ${e.dark};                         /* 悬停时加深颜色 */
          } 
          ::-webkit-scrollbar-track {
            background-color: rgba(0, 0, 0, 0.1);                         /* 滑轨颜色 */
            border-radius: 4px;                                             /* 圆角 */
            transition: opacity 0.5s ease-in-out;                           /* 滑轨过渡效果 */
          }
          /* Firefox 滚动条样式 */
          * {
            scrollbar-color: ${e.main} rgba(0, 0, 0, 0.1);     /* 滑块 和 滑轨颜色 */
            scrollbar-width: medium;                                        /* 滚动条宽度 */
          }
          /* Firefox 滚动条的过渡效果 */
          *::-webkit-scrollbar {
            transition: opacity 0.5s ease-in-out;
          }
        `, document.head.appendChild(t), () => {
      document.head.removeChild(t);
    };
  }, [e]);
}
const xA = _e(({ children: e }) => {
  const { theme: t } = bA();
  return /* @__PURE__ */ Ce(gS, { theme: t, disableTransitionOnChange: !0, children: [
    /* @__PURE__ */ k(Ig, {}),
    e
  ] });
});
xA.displayName = "ThemeProvider";
function wA(e) {
  if (typeof document > "u") return;
  let t = document.head || document.getElementsByTagName("head")[0], n = document.createElement("style");
  n.type = "text/css", t.appendChild(n), n.styleSheet ? n.styleSheet.cssText = e : n.appendChild(document.createTextNode(e));
}
const SA = (e) => {
  switch (e) {
    case "success":
      return CA;
    case "info":
      return RA;
    case "warning":
      return OA;
    case "error":
      return $A;
    default:
      return null;
  }
}, TA = Array(12).fill(0), EA = ({ visible: e, className: t }) => /* @__PURE__ */ F.createElement("div", {
  className: [
    "sonner-loading-wrapper",
    t
  ].filter(Boolean).join(" "),
  "data-visible": e
}, /* @__PURE__ */ F.createElement("div", {
  className: "sonner-spinner"
}, TA.map((n, r) => /* @__PURE__ */ F.createElement("div", {
  className: "sonner-loading-bar",
  key: `spinner-bar-${r}`
})))), CA = /* @__PURE__ */ F.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ F.createElement("path", {
  fillRule: "evenodd",
  d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
  clipRule: "evenodd"
})), OA = /* @__PURE__ */ F.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ F.createElement("path", {
  fillRule: "evenodd",
  d: "M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z",
  clipRule: "evenodd"
})), RA = /* @__PURE__ */ F.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ F.createElement("path", {
  fillRule: "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z",
  clipRule: "evenodd"
})), $A = /* @__PURE__ */ F.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
}, /* @__PURE__ */ F.createElement("path", {
  fillRule: "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z",
  clipRule: "evenodd"
})), kA = /* @__PURE__ */ F.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "12",
  height: "12",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "1.5",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, /* @__PURE__ */ F.createElement("line", {
  x1: "18",
  y1: "6",
  x2: "6",
  y2: "18"
}), /* @__PURE__ */ F.createElement("line", {
  x1: "6",
  y1: "6",
  x2: "18",
  y2: "18"
})), IA = () => {
  const [e, t] = F.useState(document.hidden);
  return F.useEffect(() => {
    const n = () => {
      t(document.hidden);
    };
    return document.addEventListener("visibilitychange", n), () => window.removeEventListener("visibilitychange", n);
  }, []), e;
};
let bu = 1;
class PA {
  constructor() {
    this.subscribe = (t) => (this.subscribers.push(t), () => {
      const n = this.subscribers.indexOf(t);
      this.subscribers.splice(n, 1);
    }), this.publish = (t) => {
      this.subscribers.forEach((n) => n(t));
    }, this.addToast = (t) => {
      this.publish(t), this.toasts = [
        ...this.toasts,
        t
      ];
    }, this.create = (t) => {
      var n;
      const { message: r, ...o } = t, s = typeof (t == null ? void 0 : t.id) == "number" || ((n = t.id) == null ? void 0 : n.length) > 0 ? t.id : bu++, a = this.toasts.find((c) => c.id === s), l = t.dismissible === void 0 ? !0 : t.dismissible;
      return this.dismissedToasts.has(s) && this.dismissedToasts.delete(s), a ? this.toasts = this.toasts.map((c) => c.id === s ? (this.publish({
        ...c,
        ...t,
        id: s,
        title: r
      }), {
        ...c,
        ...t,
        id: s,
        dismissible: l,
        title: r
      }) : c) : this.addToast({
        title: r,
        ...o,
        dismissible: l,
        id: s
      }), s;
    }, this.dismiss = (t) => (t ? (this.dismissedToasts.add(t), requestAnimationFrame(() => this.subscribers.forEach((n) => n({
      id: t,
      dismiss: !0
    })))) : this.toasts.forEach((n) => {
      this.subscribers.forEach((r) => r({
        id: n.id,
        dismiss: !0
      }));
    }), t), this.message = (t, n) => this.create({
      ...n,
      message: t
    }), this.error = (t, n) => this.create({
      ...n,
      message: t,
      type: "error"
    }), this.success = (t, n) => this.create({
      ...n,
      type: "success",
      message: t
    }), this.info = (t, n) => this.create({
      ...n,
      type: "info",
      message: t
    }), this.warning = (t, n) => this.create({
      ...n,
      type: "warning",
      message: t
    }), this.loading = (t, n) => this.create({
      ...n,
      type: "loading",
      message: t
    }), this.promise = (t, n) => {
      if (!n)
        return;
      let r;
      n.loading !== void 0 && (r = this.create({
        ...n,
        promise: t,
        type: "loading",
        message: n.loading,
        description: typeof n.description != "function" ? n.description : void 0
      }));
      const o = Promise.resolve(t instanceof Function ? t() : t);
      let s = r !== void 0, a;
      const l = o.then(async (u) => {
        if (a = [
          "resolve",
          u
        ], F.isValidElement(u))
          s = !1, this.create({
            id: r,
            type: "default",
            message: u
          });
        else if (AA(u) && !u.ok) {
          s = !1;
          const d = typeof n.error == "function" ? await n.error(`HTTP error! status: ${u.status}`) : n.error, h = typeof n.description == "function" ? await n.description(`HTTP error! status: ${u.status}`) : n.description, y = typeof d == "object" && !F.isValidElement(d) ? d : {
            message: d
          };
          this.create({
            id: r,
            type: "error",
            description: h,
            ...y
          });
        } else if (u instanceof Error) {
          s = !1;
          const d = typeof n.error == "function" ? await n.error(u) : n.error, h = typeof n.description == "function" ? await n.description(u) : n.description, y = typeof d == "object" && !F.isValidElement(d) ? d : {
            message: d
          };
          this.create({
            id: r,
            type: "error",
            description: h,
            ...y
          });
        } else if (n.success !== void 0) {
          s = !1;
          const d = typeof n.success == "function" ? await n.success(u) : n.success, h = typeof n.description == "function" ? await n.description(u) : n.description, y = typeof d == "object" && !F.isValidElement(d) ? d : {
            message: d
          };
          this.create({
            id: r,
            type: "success",
            description: h,
            ...y
          });
        }
      }).catch(async (u) => {
        if (a = [
          "reject",
          u
        ], n.error !== void 0) {
          s = !1;
          const f = typeof n.error == "function" ? await n.error(u) : n.error, d = typeof n.description == "function" ? await n.description(u) : n.description, g = typeof f == "object" && !F.isValidElement(f) ? f : {
            message: f
          };
          this.create({
            id: r,
            type: "error",
            description: d,
            ...g
          });
        }
      }).finally(() => {
        s && (this.dismiss(r), r = void 0), n.finally == null || n.finally.call(n);
      }), c = () => new Promise((u, f) => l.then(() => a[0] === "reject" ? f(a[1]) : u(a[1])).catch(f));
      return typeof r != "string" && typeof r != "number" ? {
        unwrap: c
      } : Object.assign(r, {
        unwrap: c
      });
    }, this.custom = (t, n) => {
      const r = (n == null ? void 0 : n.id) || bu++;
      return this.create({
        jsx: t(r),
        id: r,
        ...n
      }), r;
    }, this.getActiveToasts = () => this.toasts.filter((t) => !this.dismissedToasts.has(t.id)), this.subscribers = [], this.toasts = [], this.dismissedToasts = /* @__PURE__ */ new Set();
  }
}
const nn = new PA(), NA = (e, t) => {
  const n = (t == null ? void 0 : t.id) || bu++;
  return nn.addToast({
    title: e,
    ...t,
    id: n
  }), n;
}, AA = (e) => e && typeof e == "object" && "ok" in e && typeof e.ok == "boolean" && "status" in e && typeof e.status == "number", MA = NA, _A = () => nn.toasts, DA = () => nn.getActiveToasts(), kc = Object.assign(MA, {
  success: nn.success,
  info: nn.info,
  warning: nn.warning,
  error: nn.error,
  custom: nn.custom,
  message: nn.message,
  promise: nn.promise,
  dismiss: nn.dismiss,
  loading: nn.loading
}, {
  getHistory: _A,
  getToasts: DA
});
wA("[data-sonner-toaster][dir=ltr],html[dir=ltr]{--toast-icon-margin-start:-3px;--toast-icon-margin-end:4px;--toast-svg-margin-start:-1px;--toast-svg-margin-end:0px;--toast-button-margin-start:auto;--toast-button-margin-end:0;--toast-close-button-start:0;--toast-close-button-end:unset;--toast-close-button-transform:translate(-35%, -35%)}[data-sonner-toaster][dir=rtl],html[dir=rtl]{--toast-icon-margin-start:4px;--toast-icon-margin-end:-3px;--toast-svg-margin-start:0px;--toast-svg-margin-end:-1px;--toast-button-margin-start:0;--toast-button-margin-end:auto;--toast-close-button-start:unset;--toast-close-button-end:0;--toast-close-button-transform:translate(35%, -35%)}[data-sonner-toaster]{position:fixed;width:var(--width);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;--gray1:hsl(0, 0%, 99%);--gray2:hsl(0, 0%, 97.3%);--gray3:hsl(0, 0%, 95.1%);--gray4:hsl(0, 0%, 93%);--gray5:hsl(0, 0%, 90.9%);--gray6:hsl(0, 0%, 88.7%);--gray7:hsl(0, 0%, 85.8%);--gray8:hsl(0, 0%, 78%);--gray9:hsl(0, 0%, 56.1%);--gray10:hsl(0, 0%, 52.3%);--gray11:hsl(0, 0%, 43.5%);--gray12:hsl(0, 0%, 9%);--border-radius:8px;box-sizing:border-box;padding:0;margin:0;list-style:none;outline:0;z-index:999999999;transition:transform .4s ease}[data-sonner-toaster][data-lifted=true]{transform:translateY(-8px)}@media (hover:none) and (pointer:coarse){[data-sonner-toaster][data-lifted=true]{transform:none}}[data-sonner-toaster][data-x-position=right]{right:var(--offset-right)}[data-sonner-toaster][data-x-position=left]{left:var(--offset-left)}[data-sonner-toaster][data-x-position=center]{left:50%;transform:translateX(-50%)}[data-sonner-toaster][data-y-position=top]{top:var(--offset-top)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--offset-bottom)}[data-sonner-toast]{--y:translateY(100%);--lift-amount:calc(var(--lift) * var(--gap));z-index:var(--z-index);position:absolute;opacity:0;transform:var(--y);touch-action:none;transition:transform .4s,opacity .4s,height .4s,box-shadow .2s;box-sizing:border-box;outline:0;overflow-wrap:anywhere}[data-sonner-toast][data-styled=true]{padding:16px;background:var(--normal-bg);border:1px solid var(--normal-border);color:var(--normal-text);border-radius:var(--border-radius);box-shadow:0 4px 12px rgba(0,0,0,.1);width:var(--width);font-size:13px;display:flex;align-items:center;gap:6px}[data-sonner-toast]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-y-position=top]{top:0;--y:translateY(-100%);--lift:1;--lift-amount:calc(1 * var(--gap))}[data-sonner-toast][data-y-position=bottom]{bottom:0;--y:translateY(100%);--lift:-1;--lift-amount:calc(var(--lift) * var(--gap))}[data-sonner-toast][data-styled=true] [data-description]{font-weight:400;line-height:1.4;color:#3f3f3f}[data-rich-colors=true][data-sonner-toast][data-styled=true] [data-description]{color:inherit}[data-sonner-toaster][data-sonner-theme=dark] [data-description]{color:#e8e8e8}[data-sonner-toast][data-styled=true] [data-title]{font-weight:500;line-height:1.5;color:inherit}[data-sonner-toast][data-styled=true] [data-icon]{display:flex;height:16px;width:16px;position:relative;justify-content:flex-start;align-items:center;flex-shrink:0;margin-left:var(--toast-icon-margin-start);margin-right:var(--toast-icon-margin-end)}[data-sonner-toast][data-promise=true] [data-icon]>svg{opacity:0;transform:scale(.8);transform-origin:center;animation:sonner-fade-in .3s ease forwards}[data-sonner-toast][data-styled=true] [data-icon]>*{flex-shrink:0}[data-sonner-toast][data-styled=true] [data-icon] svg{margin-left:var(--toast-svg-margin-start);margin-right:var(--toast-svg-margin-end)}[data-sonner-toast][data-styled=true] [data-content]{display:flex;flex-direction:column;gap:2px}[data-sonner-toast][data-styled=true] [data-button]{border-radius:4px;padding-left:8px;padding-right:8px;height:24px;font-size:12px;color:var(--normal-bg);background:var(--normal-text);margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end);border:none;font-weight:500;cursor:pointer;outline:0;display:flex;align-items:center;flex-shrink:0;transition:opacity .4s,box-shadow .2s}[data-sonner-toast][data-styled=true] [data-button]:focus-visible{box-shadow:0 0 0 2px rgba(0,0,0,.4)}[data-sonner-toast][data-styled=true] [data-button]:first-of-type{margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end)}[data-sonner-toast][data-styled=true] [data-cancel]{color:var(--normal-text);background:rgba(0,0,0,.08)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-styled=true] [data-cancel]{background:rgba(255,255,255,.3)}[data-sonner-toast][data-styled=true] [data-close-button]{position:absolute;left:var(--toast-close-button-start);right:var(--toast-close-button-end);top:0;height:20px;width:20px;display:flex;justify-content:center;align-items:center;padding:0;color:var(--gray12);background:var(--normal-bg);border:1px solid var(--gray4);transform:var(--toast-close-button-transform);border-radius:50%;cursor:pointer;z-index:1;transition:opacity .1s,background .2s,border-color .2s}[data-sonner-toast][data-styled=true] [data-close-button]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-styled=true] [data-disabled=true]{cursor:not-allowed}[data-sonner-toast][data-styled=true]:hover [data-close-button]:hover{background:var(--gray2);border-color:var(--gray5)}[data-sonner-toast][data-swiping=true]::before{content:'';position:absolute;left:-100%;right:-100%;height:100%;z-index:-1}[data-sonner-toast][data-y-position=top][data-swiping=true]::before{bottom:50%;transform:scaleY(3) translateY(50%)}[data-sonner-toast][data-y-position=bottom][data-swiping=true]::before{top:50%;transform:scaleY(3) translateY(-50%)}[data-sonner-toast][data-swiping=false][data-removed=true]::before{content:'';position:absolute;inset:0;transform:scaleY(2)}[data-sonner-toast][data-expanded=true]::after{content:'';position:absolute;left:0;height:calc(var(--gap) + 1px);bottom:100%;width:100%}[data-sonner-toast][data-mounted=true]{--y:translateY(0);opacity:1}[data-sonner-toast][data-expanded=false][data-front=false]{--scale:var(--toasts-before) * 0.05 + 1;--y:translateY(calc(var(--lift-amount) * var(--toasts-before))) scale(calc(-1 * var(--scale)));height:var(--front-toast-height)}[data-sonner-toast]>*{transition:opacity .4s}[data-sonner-toast][data-x-position=right]{right:0}[data-sonner-toast][data-x-position=left]{left:0}[data-sonner-toast][data-expanded=false][data-front=false][data-styled=true]>*{opacity:0}[data-sonner-toast][data-visible=false]{opacity:0;pointer-events:none}[data-sonner-toast][data-mounted=true][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset)));height:var(--initial-height)}[data-sonner-toast][data-removed=true][data-front=true][data-swipe-out=false]{--y:translateY(calc(var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset) + var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=false]{--y:translateY(40%);opacity:0;transition:transform .5s,opacity .2s}[data-sonner-toast][data-removed=true][data-front=false]::before{height:calc(var(--initial-height) + 20%)}[data-sonner-toast][data-swiping=true]{transform:var(--y) translateY(var(--swipe-amount-y,0)) translateX(var(--swipe-amount-x,0));transition:none}[data-sonner-toast][data-swiped=true]{user-select:none}[data-sonner-toast][data-swipe-out=true][data-y-position=bottom],[data-sonner-toast][data-swipe-out=true][data-y-position=top]{animation-duration:.2s;animation-timing-function:ease-out;animation-fill-mode:forwards}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=left]{animation-name:swipe-out-left}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=right]{animation-name:swipe-out-right}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=up]{animation-name:swipe-out-up}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=down]{animation-name:swipe-out-down}@keyframes swipe-out-left{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) - 100%));opacity:0}}@keyframes swipe-out-right{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) + 100%));opacity:0}}@keyframes swipe-out-up{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) - 100%));opacity:0}}@keyframes swipe-out-down{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) + 100%));opacity:0}}@media (max-width:600px){[data-sonner-toaster]{position:fixed;right:var(--mobile-offset-right);left:var(--mobile-offset-left);width:100%}[data-sonner-toaster][dir=rtl]{left:calc(var(--mobile-offset-left) * -1)}[data-sonner-toaster] [data-sonner-toast]{left:0;right:0;width:calc(100% - var(--mobile-offset-left) * 2)}[data-sonner-toaster][data-x-position=left]{left:var(--mobile-offset-left)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--mobile-offset-bottom)}[data-sonner-toaster][data-y-position=top]{top:var(--mobile-offset-top)}[data-sonner-toaster][data-x-position=center]{left:var(--mobile-offset-left);right:var(--mobile-offset-right);transform:none}}[data-sonner-toaster][data-sonner-theme=light]{--normal-bg:#fff;--normal-border:var(--gray4);--normal-text:var(--gray12);--success-bg:hsl(143, 85%, 96%);--success-border:hsl(145, 92%, 87%);--success-text:hsl(140, 100%, 27%);--info-bg:hsl(208, 100%, 97%);--info-border:hsl(221, 91%, 93%);--info-text:hsl(210, 92%, 45%);--warning-bg:hsl(49, 100%, 97%);--warning-border:hsl(49, 91%, 84%);--warning-text:hsl(31, 92%, 45%);--error-bg:hsl(359, 100%, 97%);--error-border:hsl(359, 100%, 94%);--error-text:hsl(360, 100%, 45%)}[data-sonner-toaster][data-sonner-theme=light] [data-sonner-toast][data-invert=true]{--normal-bg:#000;--normal-border:hsl(0, 0%, 20%);--normal-text:var(--gray1)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-invert=true]{--normal-bg:#fff;--normal-border:var(--gray3);--normal-text:var(--gray12)}[data-sonner-toaster][data-sonner-theme=dark]{--normal-bg:#000;--normal-bg-hover:hsl(0, 0%, 12%);--normal-border:hsl(0, 0%, 20%);--normal-border-hover:hsl(0, 0%, 25%);--normal-text:var(--gray1);--success-bg:hsl(150, 100%, 6%);--success-border:hsl(147, 100%, 12%);--success-text:hsl(150, 86%, 65%);--info-bg:hsl(215, 100%, 6%);--info-border:hsl(223, 43%, 17%);--info-text:hsl(216, 87%, 65%);--warning-bg:hsl(64, 100%, 6%);--warning-border:hsl(60, 100%, 9%);--warning-text:hsl(46, 87%, 65%);--error-bg:hsl(358, 76%, 10%);--error-border:hsl(357, 89%, 16%);--error-text:hsl(358, 100%, 81%)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]{background:var(--normal-bg);border-color:var(--normal-border);color:var(--normal-text)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]:hover{background:var(--normal-bg-hover);border-color:var(--normal-border-hover)}[data-rich-colors=true][data-sonner-toast][data-type=success]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=success] [data-close-button]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=info]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=info] [data-close-button]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning] [data-close-button]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=error]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}[data-rich-colors=true][data-sonner-toast][data-type=error] [data-close-button]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}.sonner-loading-wrapper{--size:16px;height:var(--size);width:var(--size);position:absolute;inset:0;z-index:10}.sonner-loading-wrapper[data-visible=false]{transform-origin:center;animation:sonner-fade-out .2s ease forwards}.sonner-spinner{position:relative;top:50%;left:50%;height:var(--size);width:var(--size)}.sonner-loading-bar{animation:sonner-spin 1.2s linear infinite;background:var(--gray11);border-radius:6px;height:8%;left:-10%;position:absolute;top:-3.9%;width:24%}.sonner-loading-bar:first-child{animation-delay:-1.2s;transform:rotate(.0001deg) translate(146%)}.sonner-loading-bar:nth-child(2){animation-delay:-1.1s;transform:rotate(30deg) translate(146%)}.sonner-loading-bar:nth-child(3){animation-delay:-1s;transform:rotate(60deg) translate(146%)}.sonner-loading-bar:nth-child(4){animation-delay:-.9s;transform:rotate(90deg) translate(146%)}.sonner-loading-bar:nth-child(5){animation-delay:-.8s;transform:rotate(120deg) translate(146%)}.sonner-loading-bar:nth-child(6){animation-delay:-.7s;transform:rotate(150deg) translate(146%)}.sonner-loading-bar:nth-child(7){animation-delay:-.6s;transform:rotate(180deg) translate(146%)}.sonner-loading-bar:nth-child(8){animation-delay:-.5s;transform:rotate(210deg) translate(146%)}.sonner-loading-bar:nth-child(9){animation-delay:-.4s;transform:rotate(240deg) translate(146%)}.sonner-loading-bar:nth-child(10){animation-delay:-.3s;transform:rotate(270deg) translate(146%)}.sonner-loading-bar:nth-child(11){animation-delay:-.2s;transform:rotate(300deg) translate(146%)}.sonner-loading-bar:nth-child(12){animation-delay:-.1s;transform:rotate(330deg) translate(146%)}@keyframes sonner-fade-in{0%{opacity:0;transform:scale(.8)}100%{opacity:1;transform:scale(1)}}@keyframes sonner-fade-out{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(.8)}}@keyframes sonner-spin{0%{opacity:1}100%{opacity:.15}}@media (prefers-reduced-motion){.sonner-loading-bar,[data-sonner-toast],[data-sonner-toast]>*{transition:none!important;animation:none!important}}.sonner-loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transform-origin:center;transition:opacity .2s,transform .2s}.sonner-loader[data-visible=false]{opacity:0;transform:scale(.8) translate(-50%,-50%)}");
function Ys(e) {
  return e.label !== void 0;
}
const BA = 3, FA = "24px", jA = "16px", Ym = 4e3, LA = 356, VA = 14, zA = 45, WA = 200;
function Gn(...e) {
  return e.filter(Boolean).join(" ");
}
function UA(e) {
  const [t, n] = e.split("-"), r = [];
  return t && r.push(t), n && r.push(n), r;
}
const HA = (e) => {
  var t, n, r, o, s, a, l, c, u;
  const { invert: f, toast: d, unstyled: h, interacting: g, setHeights: y, visibleToasts: m, heights: b, index: v, toasts: E, expanded: S, removeToast: w, defaultRichColors: x, closeButton: T, style: R, cancelButtonStyle: I, actionButtonStyle: N, className: p = "", descriptionClassName: O = "", duration: $, position: A, gap: D, expandByDefault: M, classNames: _, icons: L, closeButtonAriaLabel: U = "Close toast" } = e, [z, j] = F.useState(null), [V, K] = F.useState(null), [Y, te] = F.useState(!1), [X, ee] = F.useState(!1), [re, q] = F.useState(!1), [Q, G] = F.useState(!1), [ne, B] = F.useState(!1), [pe, ae] = F.useState(0), [me, Me] = F.useState(0), Re = F.useRef(d.duration || $ || Ym), Oe = F.useRef(null), we = F.useRef(null), Pe = v === 0, Se = v + 1 <= m, P = d.type, W = d.dismissible !== !1, H = d.className || "", le = d.descriptionClassName || "", se = F.useMemo(() => b.findIndex((Ae) => Ae.toastId === d.id) || 0, [
    b,
    d.id
  ]), ie = F.useMemo(() => {
    var Ae;
    return (Ae = d.closeButton) != null ? Ae : T;
  }, [
    d.closeButton,
    T
  ]), ue = F.useMemo(() => d.duration || $ || Ym, [
    d.duration,
    $
  ]), be = F.useRef(0), xe = F.useRef(0), oe = F.useRef(0), Le = F.useRef(null), [Ve, We] = A.split("-"), _n = F.useMemo(() => b.reduce((Ae, Rt, Bt) => Bt >= se ? Ae : Ae + Rt.height, 0), [
    b,
    se
  ]), ye = IA(), Fe = d.invert || f, Je = P === "loading";
  xe.current = F.useMemo(() => se * D + _n, [
    se,
    _n
  ]), F.useEffect(() => {
    Re.current = ue;
  }, [
    ue
  ]), F.useEffect(() => {
    te(!0);
  }, []), F.useEffect(() => {
    const Ae = we.current;
    if (Ae) {
      const Rt = Ae.getBoundingClientRect().height;
      return Me(Rt), y((Bt) => [
        {
          toastId: d.id,
          height: Rt,
          position: d.position
        },
        ...Bt
      ]), () => y((Bt) => Bt.filter((Te) => Te.toastId !== d.id));
    }
  }, [
    y,
    d.id
  ]), F.useLayoutEffect(() => {
    if (!Y) return;
    const Ae = we.current, Rt = Ae.style.height;
    Ae.style.height = "auto";
    const Bt = Ae.getBoundingClientRect().height;
    Ae.style.height = Rt, Me(Bt), y((Te) => Te.find(($t) => $t.toastId === d.id) ? Te.map(($t) => $t.toastId === d.id ? {
      ...$t,
      height: Bt
    } : $t) : [
      {
        toastId: d.id,
        height: Bt,
        position: d.position
      },
      ...Te
    ]);
  }, [
    Y,
    d.title,
    d.description,
    y,
    d.id
  ]);
  const jt = F.useCallback(() => {
    ee(!0), ae(xe.current), y((Ae) => Ae.filter((Rt) => Rt.toastId !== d.id)), setTimeout(() => {
      w(d);
    }, WA);
  }, [
    d,
    w,
    y,
    xe
  ]);
  F.useEffect(() => {
    if (d.promise && P === "loading" || d.duration === 1 / 0 || d.type === "loading") return;
    let Ae;
    return S || g || ye ? (() => {
      if (oe.current < be.current) {
        const Te = (/* @__PURE__ */ new Date()).getTime() - be.current;
        Re.current = Re.current - Te;
      }
      oe.current = (/* @__PURE__ */ new Date()).getTime();
    })() : (() => {
      Re.current !== 1 / 0 && (be.current = (/* @__PURE__ */ new Date()).getTime(), Ae = setTimeout(() => {
        d.onAutoClose == null || d.onAutoClose.call(d, d), jt();
      }, Re.current));
    })(), () => clearTimeout(Ae);
  }, [
    S,
    g,
    d,
    P,
    ye,
    jt
  ]), F.useEffect(() => {
    d.delete && jt();
  }, [
    jt,
    d.delete
  ]);
  function mo() {
    var Ae;
    if (L != null && L.loading) {
      var Rt;
      return /* @__PURE__ */ F.createElement("div", {
        className: Gn(_ == null ? void 0 : _.loader, d == null || (Rt = d.classNames) == null ? void 0 : Rt.loader, "sonner-loader"),
        "data-visible": P === "loading"
      }, L.loading);
    }
    return /* @__PURE__ */ F.createElement(EA, {
      className: Gn(_ == null ? void 0 : _.loader, d == null || (Ae = d.classNames) == null ? void 0 : Ae.loader),
      visible: P === "loading"
    });
  }
  const Vl = d.icon || (L == null ? void 0 : L[P]) || SA(P);
  var Es, Cs;
  return /* @__PURE__ */ F.createElement("li", {
    tabIndex: 0,
    ref: we,
    className: Gn(p, H, _ == null ? void 0 : _.toast, d == null || (t = d.classNames) == null ? void 0 : t.toast, _ == null ? void 0 : _.default, _ == null ? void 0 : _[P], d == null || (n = d.classNames) == null ? void 0 : n[P]),
    "data-sonner-toast": "",
    "data-rich-colors": (Es = d.richColors) != null ? Es : x,
    "data-styled": !(d.jsx || d.unstyled || h),
    "data-mounted": Y,
    "data-promise": !!d.promise,
    "data-swiped": ne,
    "data-removed": X,
    "data-visible": Se,
    "data-y-position": Ve,
    "data-x-position": We,
    "data-index": v,
    "data-front": Pe,
    "data-swiping": re,
    "data-dismissible": W,
    "data-type": P,
    "data-invert": Fe,
    "data-swipe-out": Q,
    "data-swipe-direction": V,
    "data-expanded": !!(S || M && Y),
    style: {
      "--index": v,
      "--toasts-before": v,
      "--z-index": E.length - v,
      "--offset": `${X ? pe : xe.current}px`,
      "--initial-height": M ? "auto" : `${me}px`,
      ...R,
      ...d.style
    },
    onDragEnd: () => {
      q(!1), j(null), Le.current = null;
    },
    onPointerDown: (Ae) => {
      Je || !W || (Oe.current = /* @__PURE__ */ new Date(), ae(xe.current), Ae.target.setPointerCapture(Ae.pointerId), Ae.target.tagName !== "BUTTON" && (q(!0), Le.current = {
        x: Ae.clientX,
        y: Ae.clientY
      }));
    },
    onPointerUp: () => {
      var Ae, Rt, Bt;
      if (Q || !W) return;
      Le.current = null;
      const Te = Number(((Ae = we.current) == null ? void 0 : Ae.style.getPropertyValue("--swipe-amount-x").replace("px", "")) || 0), Ut = Number(((Rt = we.current) == null ? void 0 : Rt.style.getPropertyValue("--swipe-amount-y").replace("px", "")) || 0), $t = (/* @__PURE__ */ new Date()).getTime() - ((Bt = Oe.current) == null ? void 0 : Bt.getTime()), wn = z === "x" ? Te : Ut, Os = Math.abs(wn) / $t;
      if (Math.abs(wn) >= zA || Os > 0.11) {
        ae(xe.current), d.onDismiss == null || d.onDismiss.call(d, d), K(z === "x" ? Te > 0 ? "right" : "left" : Ut > 0 ? "down" : "up"), jt(), G(!0);
        return;
      } else {
        var Dn, Bn;
        (Dn = we.current) == null || Dn.style.setProperty("--swipe-amount-x", "0px"), (Bn = we.current) == null || Bn.style.setProperty("--swipe-amount-y", "0px");
      }
      B(!1), q(!1), j(null);
    },
    onPointerMove: (Ae) => {
      var Rt, Bt, Te;
      if (!Le.current || !W || ((Rt = window.getSelection()) == null ? void 0 : Rt.toString().length) > 0) return;
      const $t = Ae.clientY - Le.current.y, wn = Ae.clientX - Le.current.x;
      var Os;
      const Dn = (Os = e.swipeDirections) != null ? Os : UA(A);
      !z && (Math.abs(wn) > 1 || Math.abs($t) > 1) && j(Math.abs(wn) > Math.abs($t) ? "x" : "y");
      let Bn = {
        x: 0,
        y: 0
      };
      const qd = (Kr) => 1 / (1.5 + Math.abs(Kr) / 20);
      if (z === "y") {
        if (Dn.includes("top") || Dn.includes("bottom"))
          if (Dn.includes("top") && $t < 0 || Dn.includes("bottom") && $t > 0)
            Bn.y = $t;
          else {
            const Kr = $t * qd($t);
            Bn.y = Math.abs(Kr) < Math.abs($t) ? Kr : $t;
          }
      } else if (z === "x" && (Dn.includes("left") || Dn.includes("right")))
        if (Dn.includes("left") && wn < 0 || Dn.includes("right") && wn > 0)
          Bn.x = wn;
        else {
          const Kr = wn * qd(wn);
          Bn.x = Math.abs(Kr) < Math.abs(wn) ? Kr : wn;
        }
      (Math.abs(Bn.x) > 0 || Math.abs(Bn.y) > 0) && B(!0), (Bt = we.current) == null || Bt.style.setProperty("--swipe-amount-x", `${Bn.x}px`), (Te = we.current) == null || Te.style.setProperty("--swipe-amount-y", `${Bn.y}px`);
    }
  }, ie && !d.jsx && P !== "loading" ? /* @__PURE__ */ F.createElement("button", {
    "aria-label": U,
    "data-disabled": Je,
    "data-close-button": !0,
    onClick: Je || !W ? () => {
    } : () => {
      jt(), d.onDismiss == null || d.onDismiss.call(d, d);
    },
    className: Gn(_ == null ? void 0 : _.closeButton, d == null || (r = d.classNames) == null ? void 0 : r.closeButton)
  }, (Cs = L == null ? void 0 : L.close) != null ? Cs : kA) : null, (P || d.icon || d.promise) && d.icon !== null && ((L == null ? void 0 : L[P]) !== null || d.icon) ? /* @__PURE__ */ F.createElement("div", {
    "data-icon": "",
    className: Gn(_ == null ? void 0 : _.icon, d == null || (o = d.classNames) == null ? void 0 : o.icon)
  }, d.promise || d.type === "loading" && !d.icon ? d.icon || mo() : null, d.type !== "loading" ? Vl : null) : null, /* @__PURE__ */ F.createElement("div", {
    "data-content": "",
    className: Gn(_ == null ? void 0 : _.content, d == null || (s = d.classNames) == null ? void 0 : s.content)
  }, /* @__PURE__ */ F.createElement("div", {
    "data-title": "",
    className: Gn(_ == null ? void 0 : _.title, d == null || (a = d.classNames) == null ? void 0 : a.title)
  }, d.jsx ? d.jsx : typeof d.title == "function" ? d.title() : d.title), d.description ? /* @__PURE__ */ F.createElement("div", {
    "data-description": "",
    className: Gn(O, le, _ == null ? void 0 : _.description, d == null || (l = d.classNames) == null ? void 0 : l.description)
  }, typeof d.description == "function" ? d.description() : d.description) : null), /* @__PURE__ */ F.isValidElement(d.cancel) ? d.cancel : d.cancel && Ys(d.cancel) ? /* @__PURE__ */ F.createElement("button", {
    "data-button": !0,
    "data-cancel": !0,
    style: d.cancelButtonStyle || I,
    onClick: (Ae) => {
      Ys(d.cancel) && W && (d.cancel.onClick == null || d.cancel.onClick.call(d.cancel, Ae), jt());
    },
    className: Gn(_ == null ? void 0 : _.cancelButton, d == null || (c = d.classNames) == null ? void 0 : c.cancelButton)
  }, d.cancel.label) : null, /* @__PURE__ */ F.isValidElement(d.action) ? d.action : d.action && Ys(d.action) ? /* @__PURE__ */ F.createElement("button", {
    "data-button": !0,
    "data-action": !0,
    style: d.actionButtonStyle || N,
    onClick: (Ae) => {
      Ys(d.action) && (d.action.onClick == null || d.action.onClick.call(d.action, Ae), !Ae.defaultPrevented && jt());
    },
    className: Gn(_ == null ? void 0 : _.actionButton, d == null || (u = d.classNames) == null ? void 0 : u.actionButton)
  }, d.action.label) : null);
};
function Km() {
  if (typeof window > "u" || typeof document > "u") return "ltr";
  const e = document.documentElement.getAttribute("dir");
  return e === "auto" || !e ? window.getComputedStyle(document.documentElement).direction : e;
}
function qA(e, t) {
  const n = {};
  return [
    e,
    t
  ].forEach((r, o) => {
    const s = o === 1, a = s ? "--mobile-offset" : "--offset", l = s ? jA : FA;
    function c(u) {
      [
        "top",
        "right",
        "bottom",
        "left"
      ].forEach((f) => {
        n[`${a}-${f}`] = typeof u == "number" ? `${u}px` : u;
      });
    }
    typeof r == "number" || typeof r == "string" ? c(r) : typeof r == "object" ? [
      "top",
      "right",
      "bottom",
      "left"
    ].forEach((u) => {
      r[u] === void 0 ? n[`${a}-${u}`] = l : n[`${a}-${u}`] = typeof r[u] == "number" ? `${r[u]}px` : r[u];
    }) : c(l);
  }), n;
}
const GA = /* @__PURE__ */ F.forwardRef(function(t, n) {
  const { invert: r, position: o = "bottom-right", hotkey: s = [
    "altKey",
    "KeyT"
  ], expand: a, closeButton: l, className: c, offset: u, mobileOffset: f, theme: d = "light", richColors: h, duration: g, style: y, visibleToasts: m = BA, toastOptions: b, dir: v = Km(), gap: E = VA, icons: S, containerAriaLabel: w = "Notifications" } = t, [x, T] = F.useState([]), R = F.useMemo(() => Array.from(new Set([
    o
  ].concat(x.filter((V) => V.position).map((V) => V.position)))), [
    x,
    o
  ]), [I, N] = F.useState([]), [p, O] = F.useState(!1), [$, A] = F.useState(!1), [D, M] = F.useState(d !== "system" ? d : typeof window < "u" && window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"), _ = F.useRef(null), L = s.join("+").replace(/Key/g, "").replace(/Digit/g, ""), U = F.useRef(null), z = F.useRef(!1), j = F.useCallback((V) => {
    T((K) => {
      var Y;
      return (Y = K.find((te) => te.id === V.id)) != null && Y.delete || nn.dismiss(V.id), K.filter(({ id: te }) => te !== V.id);
    });
  }, []);
  return F.useEffect(() => nn.subscribe((V) => {
    if (V.dismiss) {
      requestAnimationFrame(() => {
        T((K) => K.map((Y) => Y.id === V.id ? {
          ...Y,
          delete: !0
        } : Y));
      });
      return;
    }
    setTimeout(() => {
      ko.flushSync(() => {
        T((K) => {
          const Y = K.findIndex((te) => te.id === V.id);
          return Y !== -1 ? [
            ...K.slice(0, Y),
            {
              ...K[Y],
              ...V
            },
            ...K.slice(Y + 1)
          ] : [
            V,
            ...K
          ];
        });
      });
    });
  }), [
    x
  ]), F.useEffect(() => {
    if (d !== "system") {
      M(d);
      return;
    }
    if (d === "system" && (window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? M("dark") : M("light")), typeof window > "u") return;
    const V = window.matchMedia("(prefers-color-scheme: dark)");
    try {
      V.addEventListener("change", ({ matches: K }) => {
        M(K ? "dark" : "light");
      });
    } catch {
      V.addListener(({ matches: Y }) => {
        try {
          M(Y ? "dark" : "light");
        } catch (te) {
          console.error(te);
        }
      });
    }
  }, [
    d
  ]), F.useEffect(() => {
    x.length <= 1 && O(!1);
  }, [
    x
  ]), F.useEffect(() => {
    const V = (K) => {
      var Y;
      if (s.every((ee) => K[ee] || K.code === ee)) {
        var X;
        O(!0), (X = _.current) == null || X.focus();
      }
      K.code === "Escape" && (document.activeElement === _.current || (Y = _.current) != null && Y.contains(document.activeElement)) && O(!1);
    };
    return document.addEventListener("keydown", V), () => document.removeEventListener("keydown", V);
  }, [
    s
  ]), F.useEffect(() => {
    if (_.current)
      return () => {
        U.current && (U.current.focus({
          preventScroll: !0
        }), U.current = null, z.current = !1);
      };
  }, [
    _.current
  ]), // Remove item from normal navigation flow, only available via hotkey
  /* @__PURE__ */ F.createElement("section", {
    ref: n,
    "aria-label": `${w} ${L}`,
    tabIndex: -1,
    "aria-live": "polite",
    "aria-relevant": "additions text",
    "aria-atomic": "false",
    suppressHydrationWarning: !0
  }, R.map((V, K) => {
    var Y;
    const [te, X] = V.split("-");
    return x.length ? /* @__PURE__ */ F.createElement("ol", {
      key: V,
      dir: v === "auto" ? Km() : v,
      tabIndex: -1,
      ref: _,
      className: c,
      "data-sonner-toaster": !0,
      "data-sonner-theme": D,
      "data-y-position": te,
      "data-lifted": p && x.length > 1 && !a,
      "data-x-position": X,
      style: {
        "--front-toast-height": `${((Y = I[0]) == null ? void 0 : Y.height) || 0}px`,
        "--width": `${LA}px`,
        "--gap": `${E}px`,
        ...y,
        ...qA(u, f)
      },
      onBlur: (ee) => {
        z.current && !ee.currentTarget.contains(ee.relatedTarget) && (z.current = !1, U.current && (U.current.focus({
          preventScroll: !0
        }), U.current = null));
      },
      onFocus: (ee) => {
        ee.target instanceof HTMLElement && ee.target.dataset.dismissible === "false" || z.current || (z.current = !0, U.current = ee.relatedTarget);
      },
      onMouseEnter: () => O(!0),
      onMouseMove: () => O(!0),
      onMouseLeave: () => {
        $ || O(!1);
      },
      onDragEnd: () => O(!1),
      onPointerDown: (ee) => {
        ee.target instanceof HTMLElement && ee.target.dataset.dismissible === "false" || A(!0);
      },
      onPointerUp: () => A(!1)
    }, x.filter((ee) => !ee.position && K === 0 || ee.position === V).map((ee, re) => {
      var q, Q;
      return /* @__PURE__ */ F.createElement(HA, {
        key: ee.id,
        icons: S,
        index: re,
        toast: ee,
        defaultRichColors: h,
        duration: (q = b == null ? void 0 : b.duration) != null ? q : g,
        className: b == null ? void 0 : b.className,
        descriptionClassName: b == null ? void 0 : b.descriptionClassName,
        invert: r,
        visibleToasts: m,
        closeButton: (Q = b == null ? void 0 : b.closeButton) != null ? Q : l,
        interacting: $,
        position: V,
        style: b == null ? void 0 : b.style,
        unstyled: b == null ? void 0 : b.unstyled,
        classNames: b == null ? void 0 : b.classNames,
        cancelButtonStyle: b == null ? void 0 : b.cancelButtonStyle,
        actionButtonStyle: b == null ? void 0 : b.actionButtonStyle,
        closeButtonAriaLabel: b == null ? void 0 : b.closeButtonAriaLabel,
        removeToast: j,
        toasts: x.filter((G) => G.position == ee.position),
        heights: I.filter((G) => G.position == ee.position),
        setHeights: N,
        expandByDefault: a,
        gap: E,
        expanded: p,
        swipeDirections: t.swipeDirections
      });
    })) : null;
  }));
}), YA = _e(({ position: e = "bottom-right" }) => {
  const { isDarkMode: t } = Hd();
  return /* @__PURE__ */ k(
    GA,
    {
      closeButton: !1,
      invert: t,
      visibleToasts: 3,
      position: e,
      gap: 6
    }
  );
});
YA.displayName = "Button";
function pM() {
  return $n(({ type: t, title: n, description: r }) => {
    const o = {
      description: r,
      icon: /* @__PURE__ */ k(Tr, { icon: KA(t), color: XA(t) }),
      cancel: {
        label: /* @__PURE__ */ k(Tr, { icon: "solar:close-circle-outline" }),
        onClick: () => {
        }
      },
      cancelButtonStyle: { background: "transparent" }
    };
    return t === "success" ? kc.success(n, o) : t === "error" ? kc.error(n, o) : kc.info(n, o);
  }, []);
}
function KA(e) {
  switch (e) {
    case "success":
      return "solar:check-circle-bold";
    case "error":
      return "solar:danger-triangle-bold";
    case "info":
    default:
      return "solar:danger-circle-bold";
  }
}
function XA(e) {
  switch (e) {
    case "success":
      return "success";
    case "error":
      return "error";
    case "info":
      return "auto";
    default:
      return "disabled";
  }
}
const QA = _e(
  ({ children: e, width: t = 300, title: n = "Settings" }) => {
    const { isOpen: r, openDrawer: o, closeDrawer: s } = XR();
    return /* @__PURE__ */ Ce(Xm, { children: [
      /* @__PURE__ */ k(
        lr,
        {
          isCircle: !0,
          isGhost: !0,
          icon: "solar:settings-line-duotone",
          iconWidth: 28,
          onClick: o
        }
      ),
      /* @__PURE__ */ Ce(Dy, { width: t, position: "right", isOpen: r, closeDrawer: s, children: [
        /* @__PURE__ */ k(By, { title: n, closeDrawer: s }),
        /* @__PURE__ */ k(cn, { text: "ThemeMode", isLabel: !0, ellipsis: !0 }),
        /* @__PURE__ */ k(JA, {}),
        /* @__PURE__ */ k("br", {}),
        /* @__PURE__ */ k(cn, { text: "ThemePalettes", isLabel: !0, ellipsis: !0 }),
        /* @__PURE__ */ k(ZA, {}),
        /* @__PURE__ */ k("br", {}),
        e
      ] })
    ] });
  }
);
QA.displayName = "AdminSettingsDrawer";
function JA() {
  const { isDarkMode: e, toggleThemeMode: t } = Hd();
  return /* @__PURE__ */ k(
    pl,
    {
      isOutlined: !0,
      clickable: !0,
      onClick: t,
      sx: {
        display: "flex",
        alignItems: "center",
        justifyContent: "flex-start"
      },
      children: /* @__PURE__ */ k(
        Tr,
        {
          icon: e ? "solar:moon-bold-duotone" : "solar:sun-2-bold-duotone",
          width: 24,
          color: "primary"
        }
      )
    }
  );
}
function ZA() {
  const { allPaletteNames: e, themePaletteName: t, setThemePaletteName: n } = hv();
  return /* @__PURE__ */ k(
    mA,
    {
      cols: { xs: 3, sm: 3, md: 3, lg: 3, xl: 3 },
      height: 80 * Math.ceil(e.length / 3),
      items: e.map((r) => r),
      renderGridItem: (r) => /* @__PURE__ */ k(ul, { title: r, arrow: !0, children: /* @__PURE__ */ k("div", { style: { margin: "4px", width: "100%" }, children: /* @__PURE__ */ k(
        pl,
        {
          isOutlined: !0,
          clickable: !0,
          disabled: r === t,
          onClick: () => n(r),
          sx: {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            backgroundColor: r === t ? Va(r).main : "transparent"
          },
          children: /* @__PURE__ */ k(
            Tr,
            {
              icon: "solar:siderbar-bold-duotone",
              width: 40,
              sx: {
                color: r === t ? "white" : Va(r).main
              }
            }
          )
        }
      ) }) })
    }
  );
}
const eM = _e(
  ({ menuHeaderHeight: e = 50, menuWidth: t = 220, menuItems: n, activedItemUrl: r, logoSrc: o, appName: s }) => /* @__PURE__ */ Ce(
    Gi,
    {
      id: "VenomousUI-AdminSideNavMenu",
      isOutlined: !0,
      sx: { width: t, height: "100svh" },
      children: [
        /* @__PURE__ */ Ce(Xt, { row: !0, gap: 0, height: e, mb: "8px", children: [
          /* @__PURE__ */ k(
            Sr,
            {
              width: 32,
              height: 32,
              component: "img",
              alt: s,
              src: o,
              draggable: !1,
              loading: "lazy",
              sx: { m: "10px" }
            }
          ),
          /* @__PURE__ */ k(cn, { text: s, isTitle: !0 })
        ] }),
        /* @__PURE__ */ k(
          Ra,
          {
            width: "100%",
            height: `calc(100svh - ${e}px)`,
            items: n,
            renderItem: (a) => /* @__PURE__ */ k(
              yv,
              {
                id: a.label,
                position: "right",
                sx: { width: "100%" },
                contentSx: { p: "8px" },
                renderPopperHandler: ({ isOpen: l, openPopper: c }) => /* @__PURE__ */ k(
                  $a,
                  {
                    label: a.label,
                    isActive: l || a.url === r,
                    icon: a.icon,
                    clickable: !0,
                    onClick: c,
                    onMouseEnter: c
                  }
                ),
                children: /* @__PURE__ */ k(
                  Ra,
                  {
                    items: a.subItems,
                    renderItem: (l) => /* @__PURE__ */ k(
                      $a,
                      {
                        label: l.label,
                        isActive: l.label === r,
                        icon: l.icon,
                        clickable: !0,
                        onClick: l.onClick
                      },
                      l.label
                    )
                  }
                )
              }
            )
          }
        )
      ]
    }
  )
);
eM.displayName = "AdminSideNavMenu";
export {
  QA as AdminSettingsDrawer,
  eM as AdminSideNavMenu,
  gO as Blank,
  lr as Button,
  pl as Card,
  Fy as Checkbox,
  YN as CheckboxUncontrolled,
  hA as ConfirmModal,
  YR as Container,
  Dy as Drawer,
  By as DrawerHeader,
  bO as ExhibitCard,
  GR as ExhibitCardActionButton,
  Xt as Flex,
  uM as FormUncontrolled,
  KN as FormUncontrolledAction,
  mA as Grid,
  Tr as Icon,
  Ed as Input,
  XN as InputUncontrolled,
  Go as Label,
  vl as Labels,
  Ra as Menu,
  $a as MenuItem,
  gv as Modal,
  Ub as OtpInput,
  QN as OtpInputUncontrolled,
  Gi as Paper,
  Hb as Password,
  JN as PasswordUncontrolled,
  _y as Popover,
  yv as Popper,
  qb as Radios,
  eA as RadiosUncontrolled,
  Gb as Switch,
  tA as SwitchUncontrolled,
  cn as Text,
  pv as ThemePaletteName,
  xA as ThemeProvider,
  YA as Toast,
  zN as createFormControl,
  dM as createZodSchema,
  IN as useController,
  XR as useDrawer,
  aM as useFieldArray,
  lM as useForm,
  zn as useFormContext,
  $N as useFormState,
  fM as useModal,
  fs as usePaper,
  fl as useText,
  dA as useThemeBreakpoint,
  Hd as useThemeMode,
  hv as useThemePalette,
  pM as useToast,
  kN as useWatch,
  cM as zodResolver
};
